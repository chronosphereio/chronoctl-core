// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// DeleteDropRuleReader is a Reader for the DeleteDropRule structure.
type DeleteDropRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDropRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDropRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDropRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDropRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDropRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteDropRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteDropRuleOK creates a DeleteDropRuleOK with default headers values
func NewDeleteDropRuleOK() *DeleteDropRuleOK {
	return &DeleteDropRuleOK{}
}

/*
DeleteDropRuleOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteDropRuleOK struct {
	Payload models.Configv1DeleteDropRuleResponse
}

// IsSuccess returns true when this delete drop rule o k response has a 2xx status code
func (o *DeleteDropRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete drop rule o k response has a 3xx status code
func (o *DeleteDropRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete drop rule o k response has a 4xx status code
func (o *DeleteDropRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete drop rule o k response has a 5xx status code
func (o *DeleteDropRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete drop rule o k response a status code equal to that given
func (o *DeleteDropRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete drop rule o k response
func (o *DeleteDropRuleOK) Code() int {
	return 200
}

func (o *DeleteDropRuleOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] deleteDropRuleOK  %+v", 200, o.Payload)
}

func (o *DeleteDropRuleOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] deleteDropRuleOK  %+v", 200, o.Payload)
}

func (o *DeleteDropRuleOK) GetPayload() models.Configv1DeleteDropRuleResponse {
	return o.Payload
}

func (o *DeleteDropRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDropRuleBadRequest creates a DeleteDropRuleBadRequest with default headers values
func NewDeleteDropRuleBadRequest() *DeleteDropRuleBadRequest {
	return &DeleteDropRuleBadRequest{}
}

/*
DeleteDropRuleBadRequest describes a response with status code 400, with default header values.

Cannot delete the DropRule because it is in use.
*/
type DeleteDropRuleBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete drop rule bad request response has a 2xx status code
func (o *DeleteDropRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete drop rule bad request response has a 3xx status code
func (o *DeleteDropRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete drop rule bad request response has a 4xx status code
func (o *DeleteDropRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete drop rule bad request response has a 5xx status code
func (o *DeleteDropRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete drop rule bad request response a status code equal to that given
func (o *DeleteDropRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete drop rule bad request response
func (o *DeleteDropRuleBadRequest) Code() int {
	return 400
}

func (o *DeleteDropRuleBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] deleteDropRuleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDropRuleBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] deleteDropRuleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDropRuleBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteDropRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDropRuleNotFound creates a DeleteDropRuleNotFound with default headers values
func NewDeleteDropRuleNotFound() *DeleteDropRuleNotFound {
	return &DeleteDropRuleNotFound{}
}

/*
DeleteDropRuleNotFound describes a response with status code 404, with default header values.

Cannot delete the DropRule because the slug does not exist.
*/
type DeleteDropRuleNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete drop rule not found response has a 2xx status code
func (o *DeleteDropRuleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete drop rule not found response has a 3xx status code
func (o *DeleteDropRuleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete drop rule not found response has a 4xx status code
func (o *DeleteDropRuleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete drop rule not found response has a 5xx status code
func (o *DeleteDropRuleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete drop rule not found response a status code equal to that given
func (o *DeleteDropRuleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete drop rule not found response
func (o *DeleteDropRuleNotFound) Code() int {
	return 404
}

func (o *DeleteDropRuleNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] deleteDropRuleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDropRuleNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] deleteDropRuleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDropRuleNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteDropRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDropRuleInternalServerError creates a DeleteDropRuleInternalServerError with default headers values
func NewDeleteDropRuleInternalServerError() *DeleteDropRuleInternalServerError {
	return &DeleteDropRuleInternalServerError{}
}

/*
DeleteDropRuleInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteDropRuleInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete drop rule internal server error response has a 2xx status code
func (o *DeleteDropRuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete drop rule internal server error response has a 3xx status code
func (o *DeleteDropRuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete drop rule internal server error response has a 4xx status code
func (o *DeleteDropRuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete drop rule internal server error response has a 5xx status code
func (o *DeleteDropRuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete drop rule internal server error response a status code equal to that given
func (o *DeleteDropRuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete drop rule internal server error response
func (o *DeleteDropRuleInternalServerError) Code() int {
	return 500
}

func (o *DeleteDropRuleInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] deleteDropRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDropRuleInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] deleteDropRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDropRuleInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteDropRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDropRuleDefault creates a DeleteDropRuleDefault with default headers values
func NewDeleteDropRuleDefault(code int) *DeleteDropRuleDefault {
	return &DeleteDropRuleDefault{
		_statusCode: code,
	}
}

/*
DeleteDropRuleDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteDropRuleDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete drop rule default response has a 2xx status code
func (o *DeleteDropRuleDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete drop rule default response has a 3xx status code
func (o *DeleteDropRuleDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete drop rule default response has a 4xx status code
func (o *DeleteDropRuleDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete drop rule default response has a 5xx status code
func (o *DeleteDropRuleDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete drop rule default response a status code equal to that given
func (o *DeleteDropRuleDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete drop rule default response
func (o *DeleteDropRuleDefault) Code() int {
	return o._statusCode
}

func (o *DeleteDropRuleDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] DeleteDropRule default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDropRuleDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/drop-rules/{slug}][%d] DeleteDropRule default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDropRuleDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteDropRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
