// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// ReadMonitorReader is a Reader for the ReadMonitor structure.
type ReadMonitorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadMonitorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadMonitorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadMonitorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadMonitorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadMonitorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadMonitorOK creates a ReadMonitorOK with default headers values
func NewReadMonitorOK() *ReadMonitorOK {
	return &ReadMonitorOK{}
}

/*
ReadMonitorOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadMonitorOK struct {
	Payload *models.Configv1ReadMonitorResponse
}

// IsSuccess returns true when this read monitor o k response has a 2xx status code
func (o *ReadMonitorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read monitor o k response has a 3xx status code
func (o *ReadMonitorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read monitor o k response has a 4xx status code
func (o *ReadMonitorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read monitor o k response has a 5xx status code
func (o *ReadMonitorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read monitor o k response a status code equal to that given
func (o *ReadMonitorOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read monitor o k response
func (o *ReadMonitorOK) Code() int {
	return 200
}

func (o *ReadMonitorOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/monitors/{slug}][%d] readMonitorOK  %+v", 200, o.Payload)
}

func (o *ReadMonitorOK) String() string {
	return fmt.Sprintf("[GET /api/v1/config/monitors/{slug}][%d] readMonitorOK  %+v", 200, o.Payload)
}

func (o *ReadMonitorOK) GetPayload() *models.Configv1ReadMonitorResponse {
	return o.Payload
}

func (o *ReadMonitorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1ReadMonitorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadMonitorNotFound creates a ReadMonitorNotFound with default headers values
func NewReadMonitorNotFound() *ReadMonitorNotFound {
	return &ReadMonitorNotFound{}
}

/*
ReadMonitorNotFound describes a response with status code 404, with default header values.

Cannot read the Monitor because the slug does not exist.
*/
type ReadMonitorNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read monitor not found response has a 2xx status code
func (o *ReadMonitorNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read monitor not found response has a 3xx status code
func (o *ReadMonitorNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read monitor not found response has a 4xx status code
func (o *ReadMonitorNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read monitor not found response has a 5xx status code
func (o *ReadMonitorNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read monitor not found response a status code equal to that given
func (o *ReadMonitorNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read monitor not found response
func (o *ReadMonitorNotFound) Code() int {
	return 404
}

func (o *ReadMonitorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/monitors/{slug}][%d] readMonitorNotFound  %+v", 404, o.Payload)
}

func (o *ReadMonitorNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/config/monitors/{slug}][%d] readMonitorNotFound  %+v", 404, o.Payload)
}

func (o *ReadMonitorNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadMonitorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadMonitorInternalServerError creates a ReadMonitorInternalServerError with default headers values
func NewReadMonitorInternalServerError() *ReadMonitorInternalServerError {
	return &ReadMonitorInternalServerError{}
}

/*
ReadMonitorInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadMonitorInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read monitor internal server error response has a 2xx status code
func (o *ReadMonitorInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read monitor internal server error response has a 3xx status code
func (o *ReadMonitorInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read monitor internal server error response has a 4xx status code
func (o *ReadMonitorInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read monitor internal server error response has a 5xx status code
func (o *ReadMonitorInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read monitor internal server error response a status code equal to that given
func (o *ReadMonitorInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read monitor internal server error response
func (o *ReadMonitorInternalServerError) Code() int {
	return 500
}

func (o *ReadMonitorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/monitors/{slug}][%d] readMonitorInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadMonitorInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/config/monitors/{slug}][%d] readMonitorInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadMonitorInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadMonitorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadMonitorDefault creates a ReadMonitorDefault with default headers values
func NewReadMonitorDefault(code int) *ReadMonitorDefault {
	return &ReadMonitorDefault{
		_statusCode: code,
	}
}

/*
ReadMonitorDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadMonitorDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read monitor default response has a 2xx status code
func (o *ReadMonitorDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read monitor default response has a 3xx status code
func (o *ReadMonitorDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read monitor default response has a 4xx status code
func (o *ReadMonitorDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read monitor default response has a 5xx status code
func (o *ReadMonitorDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read monitor default response a status code equal to that given
func (o *ReadMonitorDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read monitor default response
func (o *ReadMonitorDefault) Code() int {
	return o._statusCode
}

func (o *ReadMonitorDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/monitors/{slug}][%d] ReadMonitor default  %+v", o._statusCode, o.Payload)
}

func (o *ReadMonitorDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/config/monitors/{slug}][%d] ReadMonitor default  %+v", o._statusCode, o.Payload)
}

func (o *ReadMonitorDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadMonitorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
