// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// CreateBucketReader is a Reader for the CreateBucket structure.
type CreateBucketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBucketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateBucketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBucketBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateBucketConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateBucketInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateBucketDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateBucketOK creates a CreateBucketOK with default headers values
func NewCreateBucketOK() *CreateBucketOK {
	return &CreateBucketOK{}
}

/*
CreateBucketOK describes a response with status code 200, with default header values.

A successful response containing the created Bucket.
*/
type CreateBucketOK struct {
	Payload *models.Configv1CreateBucketResponse
}

// IsSuccess returns true when this create bucket o k response has a 2xx status code
func (o *CreateBucketOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create bucket o k response has a 3xx status code
func (o *CreateBucketOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bucket o k response has a 4xx status code
func (o *CreateBucketOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create bucket o k response has a 5xx status code
func (o *CreateBucketOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create bucket o k response a status code equal to that given
func (o *CreateBucketOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create bucket o k response
func (o *CreateBucketOK) Code() int {
	return 200
}

func (o *CreateBucketOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] createBucketOK  %+v", 200, o.Payload)
}

func (o *CreateBucketOK) String() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] createBucketOK  %+v", 200, o.Payload)
}

func (o *CreateBucketOK) GetPayload() *models.Configv1CreateBucketResponse {
	return o.Payload
}

func (o *CreateBucketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1CreateBucketResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBucketBadRequest creates a CreateBucketBadRequest with default headers values
func NewCreateBucketBadRequest() *CreateBucketBadRequest {
	return &CreateBucketBadRequest{}
}

/*
CreateBucketBadRequest describes a response with status code 400, with default header values.

Cannot create the Bucket because the request is invalid.
*/
type CreateBucketBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create bucket bad request response has a 2xx status code
func (o *CreateBucketBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create bucket bad request response has a 3xx status code
func (o *CreateBucketBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bucket bad request response has a 4xx status code
func (o *CreateBucketBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create bucket bad request response has a 5xx status code
func (o *CreateBucketBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create bucket bad request response a status code equal to that given
func (o *CreateBucketBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create bucket bad request response
func (o *CreateBucketBadRequest) Code() int {
	return 400
}

func (o *CreateBucketBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] createBucketBadRequest  %+v", 400, o.Payload)
}

func (o *CreateBucketBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] createBucketBadRequest  %+v", 400, o.Payload)
}

func (o *CreateBucketBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateBucketBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBucketConflict creates a CreateBucketConflict with default headers values
func NewCreateBucketConflict() *CreateBucketConflict {
	return &CreateBucketConflict{}
}

/*
CreateBucketConflict describes a response with status code 409, with default header values.

Cannot create the Bucket because there is a conflict with an existing Bucket.
*/
type CreateBucketConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create bucket conflict response has a 2xx status code
func (o *CreateBucketConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create bucket conflict response has a 3xx status code
func (o *CreateBucketConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bucket conflict response has a 4xx status code
func (o *CreateBucketConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create bucket conflict response has a 5xx status code
func (o *CreateBucketConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create bucket conflict response a status code equal to that given
func (o *CreateBucketConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create bucket conflict response
func (o *CreateBucketConflict) Code() int {
	return 409
}

func (o *CreateBucketConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] createBucketConflict  %+v", 409, o.Payload)
}

func (o *CreateBucketConflict) String() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] createBucketConflict  %+v", 409, o.Payload)
}

func (o *CreateBucketConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateBucketConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBucketInternalServerError creates a CreateBucketInternalServerError with default headers values
func NewCreateBucketInternalServerError() *CreateBucketInternalServerError {
	return &CreateBucketInternalServerError{}
}

/*
CreateBucketInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateBucketInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create bucket internal server error response has a 2xx status code
func (o *CreateBucketInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create bucket internal server error response has a 3xx status code
func (o *CreateBucketInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bucket internal server error response has a 4xx status code
func (o *CreateBucketInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create bucket internal server error response has a 5xx status code
func (o *CreateBucketInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create bucket internal server error response a status code equal to that given
func (o *CreateBucketInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create bucket internal server error response
func (o *CreateBucketInternalServerError) Code() int {
	return 500
}

func (o *CreateBucketInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] createBucketInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateBucketInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] createBucketInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateBucketInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateBucketInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBucketDefault creates a CreateBucketDefault with default headers values
func NewCreateBucketDefault(code int) *CreateBucketDefault {
	return &CreateBucketDefault{
		_statusCode: code,
	}
}

/*
CreateBucketDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateBucketDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create bucket default response has a 2xx status code
func (o *CreateBucketDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create bucket default response has a 3xx status code
func (o *CreateBucketDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create bucket default response has a 4xx status code
func (o *CreateBucketDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create bucket default response has a 5xx status code
func (o *CreateBucketDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create bucket default response a status code equal to that given
func (o *CreateBucketDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create bucket default response
func (o *CreateBucketDefault) Code() int {
	return o._statusCode
}

func (o *CreateBucketDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] CreateBucket default  %+v", o._statusCode, o.Payload)
}

func (o *CreateBucketDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/config/buckets][%d] CreateBucket default  %+v", o._statusCode, o.Payload)
}

func (o *CreateBucketDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateBucketDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
