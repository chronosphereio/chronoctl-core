// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// ReadNotifierReader is a Reader for the ReadNotifier structure.
type ReadNotifierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadNotifierReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadNotifierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadNotifierNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadNotifierInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadNotifierDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadNotifierOK creates a ReadNotifierOK with default headers values
func NewReadNotifierOK() *ReadNotifierOK {
	return &ReadNotifierOK{}
}

/*
ReadNotifierOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadNotifierOK struct {
	Payload *models.Configv1ReadNotifierResponse
}

// IsSuccess returns true when this read notifier o k response has a 2xx status code
func (o *ReadNotifierOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read notifier o k response has a 3xx status code
func (o *ReadNotifierOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read notifier o k response has a 4xx status code
func (o *ReadNotifierOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read notifier o k response has a 5xx status code
func (o *ReadNotifierOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read notifier o k response a status code equal to that given
func (o *ReadNotifierOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read notifier o k response
func (o *ReadNotifierOK) Code() int {
	return 200
}

func (o *ReadNotifierOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/notifiers/{slug}][%d] readNotifierOK  %+v", 200, o.Payload)
}

func (o *ReadNotifierOK) String() string {
	return fmt.Sprintf("[GET /api/v1/config/notifiers/{slug}][%d] readNotifierOK  %+v", 200, o.Payload)
}

func (o *ReadNotifierOK) GetPayload() *models.Configv1ReadNotifierResponse {
	return o.Payload
}

func (o *ReadNotifierOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1ReadNotifierResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNotifierNotFound creates a ReadNotifierNotFound with default headers values
func NewReadNotifierNotFound() *ReadNotifierNotFound {
	return &ReadNotifierNotFound{}
}

/*
ReadNotifierNotFound describes a response with status code 404, with default header values.

Cannot read the Notifier because the slug does not exist.
*/
type ReadNotifierNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read notifier not found response has a 2xx status code
func (o *ReadNotifierNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read notifier not found response has a 3xx status code
func (o *ReadNotifierNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read notifier not found response has a 4xx status code
func (o *ReadNotifierNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read notifier not found response has a 5xx status code
func (o *ReadNotifierNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read notifier not found response a status code equal to that given
func (o *ReadNotifierNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read notifier not found response
func (o *ReadNotifierNotFound) Code() int {
	return 404
}

func (o *ReadNotifierNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/notifiers/{slug}][%d] readNotifierNotFound  %+v", 404, o.Payload)
}

func (o *ReadNotifierNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/config/notifiers/{slug}][%d] readNotifierNotFound  %+v", 404, o.Payload)
}

func (o *ReadNotifierNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadNotifierNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNotifierInternalServerError creates a ReadNotifierInternalServerError with default headers values
func NewReadNotifierInternalServerError() *ReadNotifierInternalServerError {
	return &ReadNotifierInternalServerError{}
}

/*
ReadNotifierInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadNotifierInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read notifier internal server error response has a 2xx status code
func (o *ReadNotifierInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read notifier internal server error response has a 3xx status code
func (o *ReadNotifierInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read notifier internal server error response has a 4xx status code
func (o *ReadNotifierInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read notifier internal server error response has a 5xx status code
func (o *ReadNotifierInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read notifier internal server error response a status code equal to that given
func (o *ReadNotifierInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read notifier internal server error response
func (o *ReadNotifierInternalServerError) Code() int {
	return 500
}

func (o *ReadNotifierInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/notifiers/{slug}][%d] readNotifierInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadNotifierInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/config/notifiers/{slug}][%d] readNotifierInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadNotifierInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadNotifierInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNotifierDefault creates a ReadNotifierDefault with default headers values
func NewReadNotifierDefault(code int) *ReadNotifierDefault {
	return &ReadNotifierDefault{
		_statusCode: code,
	}
}

/*
ReadNotifierDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadNotifierDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read notifier default response has a 2xx status code
func (o *ReadNotifierDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read notifier default response has a 3xx status code
func (o *ReadNotifierDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read notifier default response has a 4xx status code
func (o *ReadNotifierDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read notifier default response has a 5xx status code
func (o *ReadNotifierDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read notifier default response a status code equal to that given
func (o *ReadNotifierDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read notifier default response
func (o *ReadNotifierDefault) Code() int {
	return o._statusCode
}

func (o *ReadNotifierDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/notifiers/{slug}][%d] ReadNotifier default  %+v", o._statusCode, o.Payload)
}

func (o *ReadNotifierDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/config/notifiers/{slug}][%d] ReadNotifier default  %+v", o._statusCode, o.Payload)
}

func (o *ReadNotifierDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadNotifierDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
