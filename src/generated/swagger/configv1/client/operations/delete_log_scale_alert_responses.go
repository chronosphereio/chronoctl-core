// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// DeleteLogScaleAlertReader is a Reader for the DeleteLogScaleAlert structure.
type DeleteLogScaleAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLogScaleAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteLogScaleAlertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLogScaleAlertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLogScaleAlertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLogScaleAlertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteLogScaleAlertDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteLogScaleAlertOK creates a DeleteLogScaleAlertOK with default headers values
func NewDeleteLogScaleAlertOK() *DeleteLogScaleAlertOK {
	return &DeleteLogScaleAlertOK{}
}

/*
DeleteLogScaleAlertOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteLogScaleAlertOK struct {
	Payload models.Configv1DeleteLogScaleAlertResponse
}

// IsSuccess returns true when this delete log scale alert o k response has a 2xx status code
func (o *DeleteLogScaleAlertOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete log scale alert o k response has a 3xx status code
func (o *DeleteLogScaleAlertOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log scale alert o k response has a 4xx status code
func (o *DeleteLogScaleAlertOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete log scale alert o k response has a 5xx status code
func (o *DeleteLogScaleAlertOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log scale alert o k response a status code equal to that given
func (o *DeleteLogScaleAlertOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete log scale alert o k response
func (o *DeleteLogScaleAlertOK) Code() int {
	return 200
}

func (o *DeleteLogScaleAlertOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] deleteLogScaleAlertOK  %+v", 200, o.Payload)
}

func (o *DeleteLogScaleAlertOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] deleteLogScaleAlertOK  %+v", 200, o.Payload)
}

func (o *DeleteLogScaleAlertOK) GetPayload() models.Configv1DeleteLogScaleAlertResponse {
	return o.Payload
}

func (o *DeleteLogScaleAlertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogScaleAlertBadRequest creates a DeleteLogScaleAlertBadRequest with default headers values
func NewDeleteLogScaleAlertBadRequest() *DeleteLogScaleAlertBadRequest {
	return &DeleteLogScaleAlertBadRequest{}
}

/*
DeleteLogScaleAlertBadRequest describes a response with status code 400, with default header values.

Cannot delete the LogScaleAlert because it is in use.
*/
type DeleteLogScaleAlertBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log scale alert bad request response has a 2xx status code
func (o *DeleteLogScaleAlertBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log scale alert bad request response has a 3xx status code
func (o *DeleteLogScaleAlertBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log scale alert bad request response has a 4xx status code
func (o *DeleteLogScaleAlertBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete log scale alert bad request response has a 5xx status code
func (o *DeleteLogScaleAlertBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log scale alert bad request response a status code equal to that given
func (o *DeleteLogScaleAlertBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete log scale alert bad request response
func (o *DeleteLogScaleAlertBadRequest) Code() int {
	return 400
}

func (o *DeleteLogScaleAlertBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] deleteLogScaleAlertBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLogScaleAlertBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] deleteLogScaleAlertBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLogScaleAlertBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogScaleAlertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogScaleAlertNotFound creates a DeleteLogScaleAlertNotFound with default headers values
func NewDeleteLogScaleAlertNotFound() *DeleteLogScaleAlertNotFound {
	return &DeleteLogScaleAlertNotFound{}
}

/*
DeleteLogScaleAlertNotFound describes a response with status code 404, with default header values.

Cannot delete the LogScaleAlert because the slug does not exist.
*/
type DeleteLogScaleAlertNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log scale alert not found response has a 2xx status code
func (o *DeleteLogScaleAlertNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log scale alert not found response has a 3xx status code
func (o *DeleteLogScaleAlertNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log scale alert not found response has a 4xx status code
func (o *DeleteLogScaleAlertNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete log scale alert not found response has a 5xx status code
func (o *DeleteLogScaleAlertNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log scale alert not found response a status code equal to that given
func (o *DeleteLogScaleAlertNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete log scale alert not found response
func (o *DeleteLogScaleAlertNotFound) Code() int {
	return 404
}

func (o *DeleteLogScaleAlertNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] deleteLogScaleAlertNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLogScaleAlertNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] deleteLogScaleAlertNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLogScaleAlertNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogScaleAlertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogScaleAlertInternalServerError creates a DeleteLogScaleAlertInternalServerError with default headers values
func NewDeleteLogScaleAlertInternalServerError() *DeleteLogScaleAlertInternalServerError {
	return &DeleteLogScaleAlertInternalServerError{}
}

/*
DeleteLogScaleAlertInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteLogScaleAlertInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log scale alert internal server error response has a 2xx status code
func (o *DeleteLogScaleAlertInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log scale alert internal server error response has a 3xx status code
func (o *DeleteLogScaleAlertInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log scale alert internal server error response has a 4xx status code
func (o *DeleteLogScaleAlertInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete log scale alert internal server error response has a 5xx status code
func (o *DeleteLogScaleAlertInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete log scale alert internal server error response a status code equal to that given
func (o *DeleteLogScaleAlertInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete log scale alert internal server error response
func (o *DeleteLogScaleAlertInternalServerError) Code() int {
	return 500
}

func (o *DeleteLogScaleAlertInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] deleteLogScaleAlertInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLogScaleAlertInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] deleteLogScaleAlertInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLogScaleAlertInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogScaleAlertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogScaleAlertDefault creates a DeleteLogScaleAlertDefault with default headers values
func NewDeleteLogScaleAlertDefault(code int) *DeleteLogScaleAlertDefault {
	return &DeleteLogScaleAlertDefault{
		_statusCode: code,
	}
}

/*
DeleteLogScaleAlertDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteLogScaleAlertDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete log scale alert default response has a 2xx status code
func (o *DeleteLogScaleAlertDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete log scale alert default response has a 3xx status code
func (o *DeleteLogScaleAlertDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete log scale alert default response has a 4xx status code
func (o *DeleteLogScaleAlertDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete log scale alert default response has a 5xx status code
func (o *DeleteLogScaleAlertDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete log scale alert default response a status code equal to that given
func (o *DeleteLogScaleAlertDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete log scale alert default response
func (o *DeleteLogScaleAlertDefault) Code() int {
	return o._statusCode
}

func (o *DeleteLogScaleAlertDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] DeleteLogScaleAlert default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteLogScaleAlertDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-alerts/{slug}][%d] DeleteLogScaleAlert default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteLogScaleAlertDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteLogScaleAlertDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
