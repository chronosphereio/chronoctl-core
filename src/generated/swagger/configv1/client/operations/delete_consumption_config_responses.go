// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// DeleteConsumptionConfigReader is a Reader for the DeleteConsumptionConfig structure.
type DeleteConsumptionConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteConsumptionConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteConsumptionConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteConsumptionConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteConsumptionConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteConsumptionConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteConsumptionConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteConsumptionConfigOK creates a DeleteConsumptionConfigOK with default headers values
func NewDeleteConsumptionConfigOK() *DeleteConsumptionConfigOK {
	return &DeleteConsumptionConfigOK{}
}

/*
DeleteConsumptionConfigOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteConsumptionConfigOK struct {
	Payload models.Configv1DeleteConsumptionConfigResponse
}

// IsSuccess returns true when this delete consumption config o k response has a 2xx status code
func (o *DeleteConsumptionConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete consumption config o k response has a 3xx status code
func (o *DeleteConsumptionConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete consumption config o k response has a 4xx status code
func (o *DeleteConsumptionConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete consumption config o k response has a 5xx status code
func (o *DeleteConsumptionConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete consumption config o k response a status code equal to that given
func (o *DeleteConsumptionConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete consumption config o k response
func (o *DeleteConsumptionConfigOK) Code() int {
	return 200
}

func (o *DeleteConsumptionConfigOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] deleteConsumptionConfigOK  %+v", 200, o.Payload)
}

func (o *DeleteConsumptionConfigOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] deleteConsumptionConfigOK  %+v", 200, o.Payload)
}

func (o *DeleteConsumptionConfigOK) GetPayload() models.Configv1DeleteConsumptionConfigResponse {
	return o.Payload
}

func (o *DeleteConsumptionConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConsumptionConfigBadRequest creates a DeleteConsumptionConfigBadRequest with default headers values
func NewDeleteConsumptionConfigBadRequest() *DeleteConsumptionConfigBadRequest {
	return &DeleteConsumptionConfigBadRequest{}
}

/*
DeleteConsumptionConfigBadRequest describes a response with status code 400, with default header values.

Cannot delete the ConsumptionConfig because it is in use.
*/
type DeleteConsumptionConfigBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete consumption config bad request response has a 2xx status code
func (o *DeleteConsumptionConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete consumption config bad request response has a 3xx status code
func (o *DeleteConsumptionConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete consumption config bad request response has a 4xx status code
func (o *DeleteConsumptionConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete consumption config bad request response has a 5xx status code
func (o *DeleteConsumptionConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete consumption config bad request response a status code equal to that given
func (o *DeleteConsumptionConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete consumption config bad request response
func (o *DeleteConsumptionConfigBadRequest) Code() int {
	return 400
}

func (o *DeleteConsumptionConfigBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] deleteConsumptionConfigBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteConsumptionConfigBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] deleteConsumptionConfigBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteConsumptionConfigBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteConsumptionConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConsumptionConfigNotFound creates a DeleteConsumptionConfigNotFound with default headers values
func NewDeleteConsumptionConfigNotFound() *DeleteConsumptionConfigNotFound {
	return &DeleteConsumptionConfigNotFound{}
}

/*
DeleteConsumptionConfigNotFound describes a response with status code 404, with default header values.

Cannot delete the ConsumptionConfig because the slug does not exist.
*/
type DeleteConsumptionConfigNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete consumption config not found response has a 2xx status code
func (o *DeleteConsumptionConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete consumption config not found response has a 3xx status code
func (o *DeleteConsumptionConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete consumption config not found response has a 4xx status code
func (o *DeleteConsumptionConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete consumption config not found response has a 5xx status code
func (o *DeleteConsumptionConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete consumption config not found response a status code equal to that given
func (o *DeleteConsumptionConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete consumption config not found response
func (o *DeleteConsumptionConfigNotFound) Code() int {
	return 404
}

func (o *DeleteConsumptionConfigNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] deleteConsumptionConfigNotFound  %+v", 404, o.Payload)
}

func (o *DeleteConsumptionConfigNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] deleteConsumptionConfigNotFound  %+v", 404, o.Payload)
}

func (o *DeleteConsumptionConfigNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteConsumptionConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConsumptionConfigInternalServerError creates a DeleteConsumptionConfigInternalServerError with default headers values
func NewDeleteConsumptionConfigInternalServerError() *DeleteConsumptionConfigInternalServerError {
	return &DeleteConsumptionConfigInternalServerError{}
}

/*
DeleteConsumptionConfigInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteConsumptionConfigInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete consumption config internal server error response has a 2xx status code
func (o *DeleteConsumptionConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete consumption config internal server error response has a 3xx status code
func (o *DeleteConsumptionConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete consumption config internal server error response has a 4xx status code
func (o *DeleteConsumptionConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete consumption config internal server error response has a 5xx status code
func (o *DeleteConsumptionConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete consumption config internal server error response a status code equal to that given
func (o *DeleteConsumptionConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete consumption config internal server error response
func (o *DeleteConsumptionConfigInternalServerError) Code() int {
	return 500
}

func (o *DeleteConsumptionConfigInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] deleteConsumptionConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteConsumptionConfigInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] deleteConsumptionConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteConsumptionConfigInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteConsumptionConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConsumptionConfigDefault creates a DeleteConsumptionConfigDefault with default headers values
func NewDeleteConsumptionConfigDefault(code int) *DeleteConsumptionConfigDefault {
	return &DeleteConsumptionConfigDefault{
		_statusCode: code,
	}
}

/*
DeleteConsumptionConfigDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteConsumptionConfigDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete consumption config default response has a 2xx status code
func (o *DeleteConsumptionConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete consumption config default response has a 3xx status code
func (o *DeleteConsumptionConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete consumption config default response has a 4xx status code
func (o *DeleteConsumptionConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete consumption config default response has a 5xx status code
func (o *DeleteConsumptionConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete consumption config default response a status code equal to that given
func (o *DeleteConsumptionConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete consumption config default response
func (o *DeleteConsumptionConfigDefault) Code() int {
	return o._statusCode
}

func (o *DeleteConsumptionConfigDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] DeleteConsumptionConfig default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteConsumptionConfigDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/consumption-config][%d] DeleteConsumptionConfig default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteConsumptionConfigDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteConsumptionConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
