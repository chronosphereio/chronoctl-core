// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// CreateLogScaleAlertReader is a Reader for the CreateLogScaleAlert structure.
type CreateLogScaleAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLogScaleAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateLogScaleAlertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateLogScaleAlertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateLogScaleAlertConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateLogScaleAlertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateLogScaleAlertDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateLogScaleAlertOK creates a CreateLogScaleAlertOK with default headers values
func NewCreateLogScaleAlertOK() *CreateLogScaleAlertOK {
	return &CreateLogScaleAlertOK{}
}

/*
CreateLogScaleAlertOK describes a response with status code 200, with default header values.

A successful response containing the created LogScaleAlert.
*/
type CreateLogScaleAlertOK struct {
	Payload *models.Configv1CreateLogScaleAlertResponse
}

// IsSuccess returns true when this create log scale alert o k response has a 2xx status code
func (o *CreateLogScaleAlertOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create log scale alert o k response has a 3xx status code
func (o *CreateLogScaleAlertOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log scale alert o k response has a 4xx status code
func (o *CreateLogScaleAlertOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create log scale alert o k response has a 5xx status code
func (o *CreateLogScaleAlertOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create log scale alert o k response a status code equal to that given
func (o *CreateLogScaleAlertOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create log scale alert o k response
func (o *CreateLogScaleAlertOK) Code() int {
	return 200
}

func (o *CreateLogScaleAlertOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] createLogScaleAlertOK  %+v", 200, o.Payload)
}

func (o *CreateLogScaleAlertOK) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] createLogScaleAlertOK  %+v", 200, o.Payload)
}

func (o *CreateLogScaleAlertOK) GetPayload() *models.Configv1CreateLogScaleAlertResponse {
	return o.Payload
}

func (o *CreateLogScaleAlertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1CreateLogScaleAlertResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogScaleAlertBadRequest creates a CreateLogScaleAlertBadRequest with default headers values
func NewCreateLogScaleAlertBadRequest() *CreateLogScaleAlertBadRequest {
	return &CreateLogScaleAlertBadRequest{}
}

/*
CreateLogScaleAlertBadRequest describes a response with status code 400, with default header values.

Cannot create the LogScaleAlert because the request is invalid.
*/
type CreateLogScaleAlertBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log scale alert bad request response has a 2xx status code
func (o *CreateLogScaleAlertBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log scale alert bad request response has a 3xx status code
func (o *CreateLogScaleAlertBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log scale alert bad request response has a 4xx status code
func (o *CreateLogScaleAlertBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create log scale alert bad request response has a 5xx status code
func (o *CreateLogScaleAlertBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create log scale alert bad request response a status code equal to that given
func (o *CreateLogScaleAlertBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create log scale alert bad request response
func (o *CreateLogScaleAlertBadRequest) Code() int {
	return 400
}

func (o *CreateLogScaleAlertBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] createLogScaleAlertBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogScaleAlertBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] createLogScaleAlertBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogScaleAlertBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogScaleAlertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogScaleAlertConflict creates a CreateLogScaleAlertConflict with default headers values
func NewCreateLogScaleAlertConflict() *CreateLogScaleAlertConflict {
	return &CreateLogScaleAlertConflict{}
}

/*
CreateLogScaleAlertConflict describes a response with status code 409, with default header values.

Cannot create the LogScaleAlert because there is a conflict with an existing LogScaleAlert.
*/
type CreateLogScaleAlertConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log scale alert conflict response has a 2xx status code
func (o *CreateLogScaleAlertConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log scale alert conflict response has a 3xx status code
func (o *CreateLogScaleAlertConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log scale alert conflict response has a 4xx status code
func (o *CreateLogScaleAlertConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create log scale alert conflict response has a 5xx status code
func (o *CreateLogScaleAlertConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create log scale alert conflict response a status code equal to that given
func (o *CreateLogScaleAlertConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create log scale alert conflict response
func (o *CreateLogScaleAlertConflict) Code() int {
	return 409
}

func (o *CreateLogScaleAlertConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] createLogScaleAlertConflict  %+v", 409, o.Payload)
}

func (o *CreateLogScaleAlertConflict) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] createLogScaleAlertConflict  %+v", 409, o.Payload)
}

func (o *CreateLogScaleAlertConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogScaleAlertConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogScaleAlertInternalServerError creates a CreateLogScaleAlertInternalServerError with default headers values
func NewCreateLogScaleAlertInternalServerError() *CreateLogScaleAlertInternalServerError {
	return &CreateLogScaleAlertInternalServerError{}
}

/*
CreateLogScaleAlertInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateLogScaleAlertInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log scale alert internal server error response has a 2xx status code
func (o *CreateLogScaleAlertInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log scale alert internal server error response has a 3xx status code
func (o *CreateLogScaleAlertInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log scale alert internal server error response has a 4xx status code
func (o *CreateLogScaleAlertInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create log scale alert internal server error response has a 5xx status code
func (o *CreateLogScaleAlertInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create log scale alert internal server error response a status code equal to that given
func (o *CreateLogScaleAlertInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create log scale alert internal server error response
func (o *CreateLogScaleAlertInternalServerError) Code() int {
	return 500
}

func (o *CreateLogScaleAlertInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] createLogScaleAlertInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogScaleAlertInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] createLogScaleAlertInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogScaleAlertInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogScaleAlertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogScaleAlertDefault creates a CreateLogScaleAlertDefault with default headers values
func NewCreateLogScaleAlertDefault(code int) *CreateLogScaleAlertDefault {
	return &CreateLogScaleAlertDefault{
		_statusCode: code,
	}
}

/*
CreateLogScaleAlertDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateLogScaleAlertDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create log scale alert default response has a 2xx status code
func (o *CreateLogScaleAlertDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create log scale alert default response has a 3xx status code
func (o *CreateLogScaleAlertDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create log scale alert default response has a 4xx status code
func (o *CreateLogScaleAlertDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create log scale alert default response has a 5xx status code
func (o *CreateLogScaleAlertDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create log scale alert default response a status code equal to that given
func (o *CreateLogScaleAlertDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create log scale alert default response
func (o *CreateLogScaleAlertDefault) Code() int {
	return o._statusCode
}

func (o *CreateLogScaleAlertDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] CreateLogScaleAlert default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLogScaleAlertDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-scale-alerts][%d] CreateLogScaleAlert default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLogScaleAlertDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateLogScaleAlertDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
