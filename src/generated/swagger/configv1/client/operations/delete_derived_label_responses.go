// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// DeleteDerivedLabelReader is a Reader for the DeleteDerivedLabel structure.
type DeleteDerivedLabelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDerivedLabelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDerivedLabelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDerivedLabelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDerivedLabelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDerivedLabelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteDerivedLabelDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteDerivedLabelOK creates a DeleteDerivedLabelOK with default headers values
func NewDeleteDerivedLabelOK() *DeleteDerivedLabelOK {
	return &DeleteDerivedLabelOK{}
}

/*
DeleteDerivedLabelOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteDerivedLabelOK struct {
	Payload models.Configv1DeleteDerivedLabelResponse
}

// IsSuccess returns true when this delete derived label o k response has a 2xx status code
func (o *DeleteDerivedLabelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete derived label o k response has a 3xx status code
func (o *DeleteDerivedLabelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete derived label o k response has a 4xx status code
func (o *DeleteDerivedLabelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete derived label o k response has a 5xx status code
func (o *DeleteDerivedLabelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete derived label o k response a status code equal to that given
func (o *DeleteDerivedLabelOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete derived label o k response
func (o *DeleteDerivedLabelOK) Code() int {
	return 200
}

func (o *DeleteDerivedLabelOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] deleteDerivedLabelOK  %+v", 200, o.Payload)
}

func (o *DeleteDerivedLabelOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] deleteDerivedLabelOK  %+v", 200, o.Payload)
}

func (o *DeleteDerivedLabelOK) GetPayload() models.Configv1DeleteDerivedLabelResponse {
	return o.Payload
}

func (o *DeleteDerivedLabelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDerivedLabelBadRequest creates a DeleteDerivedLabelBadRequest with default headers values
func NewDeleteDerivedLabelBadRequest() *DeleteDerivedLabelBadRequest {
	return &DeleteDerivedLabelBadRequest{}
}

/*
DeleteDerivedLabelBadRequest describes a response with status code 400, with default header values.

Cannot delete the DerivedLabel because it is in use.
*/
type DeleteDerivedLabelBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete derived label bad request response has a 2xx status code
func (o *DeleteDerivedLabelBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete derived label bad request response has a 3xx status code
func (o *DeleteDerivedLabelBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete derived label bad request response has a 4xx status code
func (o *DeleteDerivedLabelBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete derived label bad request response has a 5xx status code
func (o *DeleteDerivedLabelBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete derived label bad request response a status code equal to that given
func (o *DeleteDerivedLabelBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete derived label bad request response
func (o *DeleteDerivedLabelBadRequest) Code() int {
	return 400
}

func (o *DeleteDerivedLabelBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] deleteDerivedLabelBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDerivedLabelBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] deleteDerivedLabelBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDerivedLabelBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteDerivedLabelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDerivedLabelNotFound creates a DeleteDerivedLabelNotFound with default headers values
func NewDeleteDerivedLabelNotFound() *DeleteDerivedLabelNotFound {
	return &DeleteDerivedLabelNotFound{}
}

/*
DeleteDerivedLabelNotFound describes a response with status code 404, with default header values.

Cannot delete the DerivedLabel because the slug does not exist.
*/
type DeleteDerivedLabelNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete derived label not found response has a 2xx status code
func (o *DeleteDerivedLabelNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete derived label not found response has a 3xx status code
func (o *DeleteDerivedLabelNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete derived label not found response has a 4xx status code
func (o *DeleteDerivedLabelNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete derived label not found response has a 5xx status code
func (o *DeleteDerivedLabelNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete derived label not found response a status code equal to that given
func (o *DeleteDerivedLabelNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete derived label not found response
func (o *DeleteDerivedLabelNotFound) Code() int {
	return 404
}

func (o *DeleteDerivedLabelNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] deleteDerivedLabelNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDerivedLabelNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] deleteDerivedLabelNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDerivedLabelNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteDerivedLabelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDerivedLabelInternalServerError creates a DeleteDerivedLabelInternalServerError with default headers values
func NewDeleteDerivedLabelInternalServerError() *DeleteDerivedLabelInternalServerError {
	return &DeleteDerivedLabelInternalServerError{}
}

/*
DeleteDerivedLabelInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteDerivedLabelInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete derived label internal server error response has a 2xx status code
func (o *DeleteDerivedLabelInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete derived label internal server error response has a 3xx status code
func (o *DeleteDerivedLabelInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete derived label internal server error response has a 4xx status code
func (o *DeleteDerivedLabelInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete derived label internal server error response has a 5xx status code
func (o *DeleteDerivedLabelInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete derived label internal server error response a status code equal to that given
func (o *DeleteDerivedLabelInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete derived label internal server error response
func (o *DeleteDerivedLabelInternalServerError) Code() int {
	return 500
}

func (o *DeleteDerivedLabelInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] deleteDerivedLabelInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDerivedLabelInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] deleteDerivedLabelInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDerivedLabelInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteDerivedLabelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDerivedLabelDefault creates a DeleteDerivedLabelDefault with default headers values
func NewDeleteDerivedLabelDefault(code int) *DeleteDerivedLabelDefault {
	return &DeleteDerivedLabelDefault{
		_statusCode: code,
	}
}

/*
DeleteDerivedLabelDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteDerivedLabelDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete derived label default response has a 2xx status code
func (o *DeleteDerivedLabelDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete derived label default response has a 3xx status code
func (o *DeleteDerivedLabelDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete derived label default response has a 4xx status code
func (o *DeleteDerivedLabelDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete derived label default response has a 5xx status code
func (o *DeleteDerivedLabelDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete derived label default response a status code equal to that given
func (o *DeleteDerivedLabelDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete derived label default response
func (o *DeleteDerivedLabelDefault) Code() int {
	return o._statusCode
}

func (o *DeleteDerivedLabelDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] DeleteDerivedLabel default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDerivedLabelDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/derived-labels/{slug}][%d] DeleteDerivedLabel default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDerivedLabelDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteDerivedLabelDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
