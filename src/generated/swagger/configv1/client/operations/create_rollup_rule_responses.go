// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// CreateRollupRuleReader is a Reader for the CreateRollupRule structure.
type CreateRollupRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRollupRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRollupRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateRollupRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateRollupRuleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateRollupRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateRollupRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateRollupRuleOK creates a CreateRollupRuleOK with default headers values
func NewCreateRollupRuleOK() *CreateRollupRuleOK {
	return &CreateRollupRuleOK{}
}

/*
CreateRollupRuleOK describes a response with status code 200, with default header values.

A successful response containing the created RollupRule.
*/
type CreateRollupRuleOK struct {
	Payload *models.Configv1CreateRollupRuleResponse
}

// IsSuccess returns true when this create rollup rule o k response has a 2xx status code
func (o *CreateRollupRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create rollup rule o k response has a 3xx status code
func (o *CreateRollupRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create rollup rule o k response has a 4xx status code
func (o *CreateRollupRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create rollup rule o k response has a 5xx status code
func (o *CreateRollupRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create rollup rule o k response a status code equal to that given
func (o *CreateRollupRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create rollup rule o k response
func (o *CreateRollupRuleOK) Code() int {
	return 200
}

func (o *CreateRollupRuleOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] createRollupRuleOK  %+v", 200, o.Payload)
}

func (o *CreateRollupRuleOK) String() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] createRollupRuleOK  %+v", 200, o.Payload)
}

func (o *CreateRollupRuleOK) GetPayload() *models.Configv1CreateRollupRuleResponse {
	return o.Payload
}

func (o *CreateRollupRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1CreateRollupRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRollupRuleBadRequest creates a CreateRollupRuleBadRequest with default headers values
func NewCreateRollupRuleBadRequest() *CreateRollupRuleBadRequest {
	return &CreateRollupRuleBadRequest{}
}

/*
CreateRollupRuleBadRequest describes a response with status code 400, with default header values.

Cannot create the RollupRule because the request is invalid.
*/
type CreateRollupRuleBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create rollup rule bad request response has a 2xx status code
func (o *CreateRollupRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create rollup rule bad request response has a 3xx status code
func (o *CreateRollupRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create rollup rule bad request response has a 4xx status code
func (o *CreateRollupRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create rollup rule bad request response has a 5xx status code
func (o *CreateRollupRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create rollup rule bad request response a status code equal to that given
func (o *CreateRollupRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create rollup rule bad request response
func (o *CreateRollupRuleBadRequest) Code() int {
	return 400
}

func (o *CreateRollupRuleBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] createRollupRuleBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRollupRuleBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] createRollupRuleBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRollupRuleBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateRollupRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRollupRuleConflict creates a CreateRollupRuleConflict with default headers values
func NewCreateRollupRuleConflict() *CreateRollupRuleConflict {
	return &CreateRollupRuleConflict{}
}

/*
CreateRollupRuleConflict describes a response with status code 409, with default header values.

Cannot create the RollupRule because there is a conflict with an existing RollupRule.
*/
type CreateRollupRuleConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create rollup rule conflict response has a 2xx status code
func (o *CreateRollupRuleConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create rollup rule conflict response has a 3xx status code
func (o *CreateRollupRuleConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create rollup rule conflict response has a 4xx status code
func (o *CreateRollupRuleConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create rollup rule conflict response has a 5xx status code
func (o *CreateRollupRuleConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create rollup rule conflict response a status code equal to that given
func (o *CreateRollupRuleConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create rollup rule conflict response
func (o *CreateRollupRuleConflict) Code() int {
	return 409
}

func (o *CreateRollupRuleConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] createRollupRuleConflict  %+v", 409, o.Payload)
}

func (o *CreateRollupRuleConflict) String() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] createRollupRuleConflict  %+v", 409, o.Payload)
}

func (o *CreateRollupRuleConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateRollupRuleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRollupRuleInternalServerError creates a CreateRollupRuleInternalServerError with default headers values
func NewCreateRollupRuleInternalServerError() *CreateRollupRuleInternalServerError {
	return &CreateRollupRuleInternalServerError{}
}

/*
CreateRollupRuleInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateRollupRuleInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create rollup rule internal server error response has a 2xx status code
func (o *CreateRollupRuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create rollup rule internal server error response has a 3xx status code
func (o *CreateRollupRuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create rollup rule internal server error response has a 4xx status code
func (o *CreateRollupRuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create rollup rule internal server error response has a 5xx status code
func (o *CreateRollupRuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create rollup rule internal server error response a status code equal to that given
func (o *CreateRollupRuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create rollup rule internal server error response
func (o *CreateRollupRuleInternalServerError) Code() int {
	return 500
}

func (o *CreateRollupRuleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] createRollupRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRollupRuleInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] createRollupRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRollupRuleInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateRollupRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRollupRuleDefault creates a CreateRollupRuleDefault with default headers values
func NewCreateRollupRuleDefault(code int) *CreateRollupRuleDefault {
	return &CreateRollupRuleDefault{
		_statusCode: code,
	}
}

/*
CreateRollupRuleDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateRollupRuleDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create rollup rule default response has a 2xx status code
func (o *CreateRollupRuleDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create rollup rule default response has a 3xx status code
func (o *CreateRollupRuleDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create rollup rule default response has a 4xx status code
func (o *CreateRollupRuleDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create rollup rule default response has a 5xx status code
func (o *CreateRollupRuleDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create rollup rule default response a status code equal to that given
func (o *CreateRollupRuleDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create rollup rule default response
func (o *CreateRollupRuleDefault) Code() int {
	return o._statusCode
}

func (o *CreateRollupRuleDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] CreateRollupRule default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRollupRuleDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/config/rollup-rules][%d] CreateRollupRule default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRollupRuleDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateRollupRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
