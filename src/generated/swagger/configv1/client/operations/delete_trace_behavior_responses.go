// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// DeleteTraceBehaviorReader is a Reader for the DeleteTraceBehavior structure.
type DeleteTraceBehaviorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTraceBehaviorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTraceBehaviorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTraceBehaviorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTraceBehaviorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTraceBehaviorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteTraceBehaviorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteTraceBehaviorOK creates a DeleteTraceBehaviorOK with default headers values
func NewDeleteTraceBehaviorOK() *DeleteTraceBehaviorOK {
	return &DeleteTraceBehaviorOK{}
}

/*
DeleteTraceBehaviorOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteTraceBehaviorOK struct {
	Payload models.Configv1DeleteTraceBehaviorResponse
}

// IsSuccess returns true when this delete trace behavior o k response has a 2xx status code
func (o *DeleteTraceBehaviorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete trace behavior o k response has a 3xx status code
func (o *DeleteTraceBehaviorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trace behavior o k response has a 4xx status code
func (o *DeleteTraceBehaviorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete trace behavior o k response has a 5xx status code
func (o *DeleteTraceBehaviorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trace behavior o k response a status code equal to that given
func (o *DeleteTraceBehaviorOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete trace behavior o k response
func (o *DeleteTraceBehaviorOK) Code() int {
	return 200
}

func (o *DeleteTraceBehaviorOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] deleteTraceBehaviorOK  %+v", 200, o.Payload)
}

func (o *DeleteTraceBehaviorOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] deleteTraceBehaviorOK  %+v", 200, o.Payload)
}

func (o *DeleteTraceBehaviorOK) GetPayload() models.Configv1DeleteTraceBehaviorResponse {
	return o.Payload
}

func (o *DeleteTraceBehaviorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTraceBehaviorBadRequest creates a DeleteTraceBehaviorBadRequest with default headers values
func NewDeleteTraceBehaviorBadRequest() *DeleteTraceBehaviorBadRequest {
	return &DeleteTraceBehaviorBadRequest{}
}

/*
DeleteTraceBehaviorBadRequest describes a response with status code 400, with default header values.

Cannot delete the TraceBehavior because it is in use.
*/
type DeleteTraceBehaviorBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete trace behavior bad request response has a 2xx status code
func (o *DeleteTraceBehaviorBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trace behavior bad request response has a 3xx status code
func (o *DeleteTraceBehaviorBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trace behavior bad request response has a 4xx status code
func (o *DeleteTraceBehaviorBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trace behavior bad request response has a 5xx status code
func (o *DeleteTraceBehaviorBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trace behavior bad request response a status code equal to that given
func (o *DeleteTraceBehaviorBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete trace behavior bad request response
func (o *DeleteTraceBehaviorBadRequest) Code() int {
	return 400
}

func (o *DeleteTraceBehaviorBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] deleteTraceBehaviorBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTraceBehaviorBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] deleteTraceBehaviorBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTraceBehaviorBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteTraceBehaviorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTraceBehaviorNotFound creates a DeleteTraceBehaviorNotFound with default headers values
func NewDeleteTraceBehaviorNotFound() *DeleteTraceBehaviorNotFound {
	return &DeleteTraceBehaviorNotFound{}
}

/*
DeleteTraceBehaviorNotFound describes a response with status code 404, with default header values.

Cannot delete the TraceBehavior because the slug does not exist.
*/
type DeleteTraceBehaviorNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete trace behavior not found response has a 2xx status code
func (o *DeleteTraceBehaviorNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trace behavior not found response has a 3xx status code
func (o *DeleteTraceBehaviorNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trace behavior not found response has a 4xx status code
func (o *DeleteTraceBehaviorNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trace behavior not found response has a 5xx status code
func (o *DeleteTraceBehaviorNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trace behavior not found response a status code equal to that given
func (o *DeleteTraceBehaviorNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete trace behavior not found response
func (o *DeleteTraceBehaviorNotFound) Code() int {
	return 404
}

func (o *DeleteTraceBehaviorNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] deleteTraceBehaviorNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTraceBehaviorNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] deleteTraceBehaviorNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTraceBehaviorNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteTraceBehaviorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTraceBehaviorInternalServerError creates a DeleteTraceBehaviorInternalServerError with default headers values
func NewDeleteTraceBehaviorInternalServerError() *DeleteTraceBehaviorInternalServerError {
	return &DeleteTraceBehaviorInternalServerError{}
}

/*
DeleteTraceBehaviorInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteTraceBehaviorInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete trace behavior internal server error response has a 2xx status code
func (o *DeleteTraceBehaviorInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trace behavior internal server error response has a 3xx status code
func (o *DeleteTraceBehaviorInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trace behavior internal server error response has a 4xx status code
func (o *DeleteTraceBehaviorInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete trace behavior internal server error response has a 5xx status code
func (o *DeleteTraceBehaviorInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete trace behavior internal server error response a status code equal to that given
func (o *DeleteTraceBehaviorInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete trace behavior internal server error response
func (o *DeleteTraceBehaviorInternalServerError) Code() int {
	return 500
}

func (o *DeleteTraceBehaviorInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] deleteTraceBehaviorInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTraceBehaviorInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] deleteTraceBehaviorInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTraceBehaviorInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteTraceBehaviorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTraceBehaviorDefault creates a DeleteTraceBehaviorDefault with default headers values
func NewDeleteTraceBehaviorDefault(code int) *DeleteTraceBehaviorDefault {
	return &DeleteTraceBehaviorDefault{
		_statusCode: code,
	}
}

/*
DeleteTraceBehaviorDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteTraceBehaviorDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete trace behavior default response has a 2xx status code
func (o *DeleteTraceBehaviorDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete trace behavior default response has a 3xx status code
func (o *DeleteTraceBehaviorDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete trace behavior default response has a 4xx status code
func (o *DeleteTraceBehaviorDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete trace behavior default response has a 5xx status code
func (o *DeleteTraceBehaviorDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete trace behavior default response a status code equal to that given
func (o *DeleteTraceBehaviorDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete trace behavior default response
func (o *DeleteTraceBehaviorDefault) Code() int {
	return o._statusCode
}

func (o *DeleteTraceBehaviorDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] DeleteTraceBehavior default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTraceBehaviorDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/trace-behaviors/{slug}][%d] DeleteTraceBehavior default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTraceBehaviorDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteTraceBehaviorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
