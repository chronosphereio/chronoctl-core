// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// DeleteLogScaleActionReader is a Reader for the DeleteLogScaleAction structure.
type DeleteLogScaleActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLogScaleActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteLogScaleActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLogScaleActionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLogScaleActionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLogScaleActionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteLogScaleActionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteLogScaleActionOK creates a DeleteLogScaleActionOK with default headers values
func NewDeleteLogScaleActionOK() *DeleteLogScaleActionOK {
	return &DeleteLogScaleActionOK{}
}

/*
DeleteLogScaleActionOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteLogScaleActionOK struct {
	Payload models.Configv1DeleteLogScaleActionResponse
}

// IsSuccess returns true when this delete log scale action o k response has a 2xx status code
func (o *DeleteLogScaleActionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete log scale action o k response has a 3xx status code
func (o *DeleteLogScaleActionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log scale action o k response has a 4xx status code
func (o *DeleteLogScaleActionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete log scale action o k response has a 5xx status code
func (o *DeleteLogScaleActionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log scale action o k response a status code equal to that given
func (o *DeleteLogScaleActionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete log scale action o k response
func (o *DeleteLogScaleActionOK) Code() int {
	return 200
}

func (o *DeleteLogScaleActionOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] deleteLogScaleActionOK  %+v", 200, o.Payload)
}

func (o *DeleteLogScaleActionOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] deleteLogScaleActionOK  %+v", 200, o.Payload)
}

func (o *DeleteLogScaleActionOK) GetPayload() models.Configv1DeleteLogScaleActionResponse {
	return o.Payload
}

func (o *DeleteLogScaleActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogScaleActionBadRequest creates a DeleteLogScaleActionBadRequest with default headers values
func NewDeleteLogScaleActionBadRequest() *DeleteLogScaleActionBadRequest {
	return &DeleteLogScaleActionBadRequest{}
}

/*
DeleteLogScaleActionBadRequest describes a response with status code 400, with default header values.

Cannot delete the LogScaleAction because it is in use.
*/
type DeleteLogScaleActionBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log scale action bad request response has a 2xx status code
func (o *DeleteLogScaleActionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log scale action bad request response has a 3xx status code
func (o *DeleteLogScaleActionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log scale action bad request response has a 4xx status code
func (o *DeleteLogScaleActionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete log scale action bad request response has a 5xx status code
func (o *DeleteLogScaleActionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log scale action bad request response a status code equal to that given
func (o *DeleteLogScaleActionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete log scale action bad request response
func (o *DeleteLogScaleActionBadRequest) Code() int {
	return 400
}

func (o *DeleteLogScaleActionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] deleteLogScaleActionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLogScaleActionBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] deleteLogScaleActionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLogScaleActionBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogScaleActionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogScaleActionNotFound creates a DeleteLogScaleActionNotFound with default headers values
func NewDeleteLogScaleActionNotFound() *DeleteLogScaleActionNotFound {
	return &DeleteLogScaleActionNotFound{}
}

/*
DeleteLogScaleActionNotFound describes a response with status code 404, with default header values.

Cannot delete the LogScaleAction because the slug does not exist.
*/
type DeleteLogScaleActionNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log scale action not found response has a 2xx status code
func (o *DeleteLogScaleActionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log scale action not found response has a 3xx status code
func (o *DeleteLogScaleActionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log scale action not found response has a 4xx status code
func (o *DeleteLogScaleActionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete log scale action not found response has a 5xx status code
func (o *DeleteLogScaleActionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log scale action not found response a status code equal to that given
func (o *DeleteLogScaleActionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete log scale action not found response
func (o *DeleteLogScaleActionNotFound) Code() int {
	return 404
}

func (o *DeleteLogScaleActionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] deleteLogScaleActionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLogScaleActionNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] deleteLogScaleActionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLogScaleActionNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogScaleActionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogScaleActionInternalServerError creates a DeleteLogScaleActionInternalServerError with default headers values
func NewDeleteLogScaleActionInternalServerError() *DeleteLogScaleActionInternalServerError {
	return &DeleteLogScaleActionInternalServerError{}
}

/*
DeleteLogScaleActionInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteLogScaleActionInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log scale action internal server error response has a 2xx status code
func (o *DeleteLogScaleActionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log scale action internal server error response has a 3xx status code
func (o *DeleteLogScaleActionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log scale action internal server error response has a 4xx status code
func (o *DeleteLogScaleActionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete log scale action internal server error response has a 5xx status code
func (o *DeleteLogScaleActionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete log scale action internal server error response a status code equal to that given
func (o *DeleteLogScaleActionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete log scale action internal server error response
func (o *DeleteLogScaleActionInternalServerError) Code() int {
	return 500
}

func (o *DeleteLogScaleActionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] deleteLogScaleActionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLogScaleActionInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] deleteLogScaleActionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLogScaleActionInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogScaleActionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogScaleActionDefault creates a DeleteLogScaleActionDefault with default headers values
func NewDeleteLogScaleActionDefault(code int) *DeleteLogScaleActionDefault {
	return &DeleteLogScaleActionDefault{
		_statusCode: code,
	}
}

/*
DeleteLogScaleActionDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteLogScaleActionDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete log scale action default response has a 2xx status code
func (o *DeleteLogScaleActionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete log scale action default response has a 3xx status code
func (o *DeleteLogScaleActionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete log scale action default response has a 4xx status code
func (o *DeleteLogScaleActionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete log scale action default response has a 5xx status code
func (o *DeleteLogScaleActionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete log scale action default response a status code equal to that given
func (o *DeleteLogScaleActionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete log scale action default response
func (o *DeleteLogScaleActionDefault) Code() int {
	return o._statusCode
}

func (o *DeleteLogScaleActionDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] DeleteLogScaleAction default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteLogScaleActionDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/log-scale-actions/{slug}][%d] DeleteLogScaleAction default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteLogScaleActionDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteLogScaleActionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
