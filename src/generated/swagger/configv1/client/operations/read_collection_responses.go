// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// ReadCollectionReader is a Reader for the ReadCollection structure.
type ReadCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadCollectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadCollectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadCollectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadCollectionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadCollectionOK creates a ReadCollectionOK with default headers values
func NewReadCollectionOK() *ReadCollectionOK {
	return &ReadCollectionOK{}
}

/*
ReadCollectionOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadCollectionOK struct {
	Payload *models.Configv1ReadCollectionResponse
}

// IsSuccess returns true when this read collection o k response has a 2xx status code
func (o *ReadCollectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read collection o k response has a 3xx status code
func (o *ReadCollectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read collection o k response has a 4xx status code
func (o *ReadCollectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read collection o k response has a 5xx status code
func (o *ReadCollectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read collection o k response a status code equal to that given
func (o *ReadCollectionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read collection o k response
func (o *ReadCollectionOK) Code() int {
	return 200
}

func (o *ReadCollectionOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/collections/{slug}][%d] readCollectionOK  %+v", 200, o.Payload)
}

func (o *ReadCollectionOK) String() string {
	return fmt.Sprintf("[GET /api/v1/config/collections/{slug}][%d] readCollectionOK  %+v", 200, o.Payload)
}

func (o *ReadCollectionOK) GetPayload() *models.Configv1ReadCollectionResponse {
	return o.Payload
}

func (o *ReadCollectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1ReadCollectionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCollectionNotFound creates a ReadCollectionNotFound with default headers values
func NewReadCollectionNotFound() *ReadCollectionNotFound {
	return &ReadCollectionNotFound{}
}

/*
ReadCollectionNotFound describes a response with status code 404, with default header values.

Cannot read the Collection because the slug does not exist.
*/
type ReadCollectionNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read collection not found response has a 2xx status code
func (o *ReadCollectionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read collection not found response has a 3xx status code
func (o *ReadCollectionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read collection not found response has a 4xx status code
func (o *ReadCollectionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read collection not found response has a 5xx status code
func (o *ReadCollectionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read collection not found response a status code equal to that given
func (o *ReadCollectionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read collection not found response
func (o *ReadCollectionNotFound) Code() int {
	return 404
}

func (o *ReadCollectionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/collections/{slug}][%d] readCollectionNotFound  %+v", 404, o.Payload)
}

func (o *ReadCollectionNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/config/collections/{slug}][%d] readCollectionNotFound  %+v", 404, o.Payload)
}

func (o *ReadCollectionNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadCollectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCollectionInternalServerError creates a ReadCollectionInternalServerError with default headers values
func NewReadCollectionInternalServerError() *ReadCollectionInternalServerError {
	return &ReadCollectionInternalServerError{}
}

/*
ReadCollectionInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadCollectionInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read collection internal server error response has a 2xx status code
func (o *ReadCollectionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read collection internal server error response has a 3xx status code
func (o *ReadCollectionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read collection internal server error response has a 4xx status code
func (o *ReadCollectionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read collection internal server error response has a 5xx status code
func (o *ReadCollectionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read collection internal server error response a status code equal to that given
func (o *ReadCollectionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read collection internal server error response
func (o *ReadCollectionInternalServerError) Code() int {
	return 500
}

func (o *ReadCollectionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/collections/{slug}][%d] readCollectionInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadCollectionInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/config/collections/{slug}][%d] readCollectionInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadCollectionInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadCollectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCollectionDefault creates a ReadCollectionDefault with default headers values
func NewReadCollectionDefault(code int) *ReadCollectionDefault {
	return &ReadCollectionDefault{
		_statusCode: code,
	}
}

/*
ReadCollectionDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadCollectionDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read collection default response has a 2xx status code
func (o *ReadCollectionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read collection default response has a 3xx status code
func (o *ReadCollectionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read collection default response has a 4xx status code
func (o *ReadCollectionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read collection default response has a 5xx status code
func (o *ReadCollectionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read collection default response a status code equal to that given
func (o *ReadCollectionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read collection default response
func (o *ReadCollectionDefault) Code() int {
	return o._statusCode
}

func (o *ReadCollectionDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/collections/{slug}][%d] ReadCollection default  %+v", o._statusCode, o.Payload)
}

func (o *ReadCollectionDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/config/collections/{slug}][%d] ReadCollection default  %+v", o._statusCode, o.Payload)
}

func (o *ReadCollectionDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadCollectionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
