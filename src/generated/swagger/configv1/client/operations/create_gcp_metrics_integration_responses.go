// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// CreateGcpMetricsIntegrationReader is a Reader for the CreateGcpMetricsIntegration structure.
type CreateGcpMetricsIntegrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGcpMetricsIntegrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateGcpMetricsIntegrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateGcpMetricsIntegrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateGcpMetricsIntegrationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateGcpMetricsIntegrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateGcpMetricsIntegrationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateGcpMetricsIntegrationOK creates a CreateGcpMetricsIntegrationOK with default headers values
func NewCreateGcpMetricsIntegrationOK() *CreateGcpMetricsIntegrationOK {
	return &CreateGcpMetricsIntegrationOK{}
}

/*
CreateGcpMetricsIntegrationOK describes a response with status code 200, with default header values.

A successful response containing the created GcpMetricsIntegration.
*/
type CreateGcpMetricsIntegrationOK struct {
	Payload *models.Configv1CreateGcpMetricsIntegrationResponse
}

// IsSuccess returns true when this create gcp metrics integration o k response has a 2xx status code
func (o *CreateGcpMetricsIntegrationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create gcp metrics integration o k response has a 3xx status code
func (o *CreateGcpMetricsIntegrationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp metrics integration o k response has a 4xx status code
func (o *CreateGcpMetricsIntegrationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create gcp metrics integration o k response has a 5xx status code
func (o *CreateGcpMetricsIntegrationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp metrics integration o k response a status code equal to that given
func (o *CreateGcpMetricsIntegrationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create gcp metrics integration o k response
func (o *CreateGcpMetricsIntegrationOK) Code() int {
	return 200
}

func (o *CreateGcpMetricsIntegrationOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] createGcpMetricsIntegrationOK  %+v", 200, o.Payload)
}

func (o *CreateGcpMetricsIntegrationOK) String() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] createGcpMetricsIntegrationOK  %+v", 200, o.Payload)
}

func (o *CreateGcpMetricsIntegrationOK) GetPayload() *models.Configv1CreateGcpMetricsIntegrationResponse {
	return o.Payload
}

func (o *CreateGcpMetricsIntegrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1CreateGcpMetricsIntegrationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpMetricsIntegrationBadRequest creates a CreateGcpMetricsIntegrationBadRequest with default headers values
func NewCreateGcpMetricsIntegrationBadRequest() *CreateGcpMetricsIntegrationBadRequest {
	return &CreateGcpMetricsIntegrationBadRequest{}
}

/*
CreateGcpMetricsIntegrationBadRequest describes a response with status code 400, with default header values.

Cannot create the GcpMetricsIntegration because the request is invalid.
*/
type CreateGcpMetricsIntegrationBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create gcp metrics integration bad request response has a 2xx status code
func (o *CreateGcpMetricsIntegrationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp metrics integration bad request response has a 3xx status code
func (o *CreateGcpMetricsIntegrationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp metrics integration bad request response has a 4xx status code
func (o *CreateGcpMetricsIntegrationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gcp metrics integration bad request response has a 5xx status code
func (o *CreateGcpMetricsIntegrationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp metrics integration bad request response a status code equal to that given
func (o *CreateGcpMetricsIntegrationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create gcp metrics integration bad request response
func (o *CreateGcpMetricsIntegrationBadRequest) Code() int {
	return 400
}

func (o *CreateGcpMetricsIntegrationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] createGcpMetricsIntegrationBadRequest  %+v", 400, o.Payload)
}

func (o *CreateGcpMetricsIntegrationBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] createGcpMetricsIntegrationBadRequest  %+v", 400, o.Payload)
}

func (o *CreateGcpMetricsIntegrationBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateGcpMetricsIntegrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpMetricsIntegrationConflict creates a CreateGcpMetricsIntegrationConflict with default headers values
func NewCreateGcpMetricsIntegrationConflict() *CreateGcpMetricsIntegrationConflict {
	return &CreateGcpMetricsIntegrationConflict{}
}

/*
CreateGcpMetricsIntegrationConflict describes a response with status code 409, with default header values.

Cannot create the GcpMetricsIntegration because there is a conflict with an existing GcpMetricsIntegration.
*/
type CreateGcpMetricsIntegrationConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create gcp metrics integration conflict response has a 2xx status code
func (o *CreateGcpMetricsIntegrationConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp metrics integration conflict response has a 3xx status code
func (o *CreateGcpMetricsIntegrationConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp metrics integration conflict response has a 4xx status code
func (o *CreateGcpMetricsIntegrationConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gcp metrics integration conflict response has a 5xx status code
func (o *CreateGcpMetricsIntegrationConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp metrics integration conflict response a status code equal to that given
func (o *CreateGcpMetricsIntegrationConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create gcp metrics integration conflict response
func (o *CreateGcpMetricsIntegrationConflict) Code() int {
	return 409
}

func (o *CreateGcpMetricsIntegrationConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] createGcpMetricsIntegrationConflict  %+v", 409, o.Payload)
}

func (o *CreateGcpMetricsIntegrationConflict) String() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] createGcpMetricsIntegrationConflict  %+v", 409, o.Payload)
}

func (o *CreateGcpMetricsIntegrationConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateGcpMetricsIntegrationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpMetricsIntegrationInternalServerError creates a CreateGcpMetricsIntegrationInternalServerError with default headers values
func NewCreateGcpMetricsIntegrationInternalServerError() *CreateGcpMetricsIntegrationInternalServerError {
	return &CreateGcpMetricsIntegrationInternalServerError{}
}

/*
CreateGcpMetricsIntegrationInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateGcpMetricsIntegrationInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create gcp metrics integration internal server error response has a 2xx status code
func (o *CreateGcpMetricsIntegrationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp metrics integration internal server error response has a 3xx status code
func (o *CreateGcpMetricsIntegrationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp metrics integration internal server error response has a 4xx status code
func (o *CreateGcpMetricsIntegrationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create gcp metrics integration internal server error response has a 5xx status code
func (o *CreateGcpMetricsIntegrationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create gcp metrics integration internal server error response a status code equal to that given
func (o *CreateGcpMetricsIntegrationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create gcp metrics integration internal server error response
func (o *CreateGcpMetricsIntegrationInternalServerError) Code() int {
	return 500
}

func (o *CreateGcpMetricsIntegrationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] createGcpMetricsIntegrationInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateGcpMetricsIntegrationInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] createGcpMetricsIntegrationInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateGcpMetricsIntegrationInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateGcpMetricsIntegrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpMetricsIntegrationDefault creates a CreateGcpMetricsIntegrationDefault with default headers values
func NewCreateGcpMetricsIntegrationDefault(code int) *CreateGcpMetricsIntegrationDefault {
	return &CreateGcpMetricsIntegrationDefault{
		_statusCode: code,
	}
}

/*
CreateGcpMetricsIntegrationDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateGcpMetricsIntegrationDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create gcp metrics integration default response has a 2xx status code
func (o *CreateGcpMetricsIntegrationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create gcp metrics integration default response has a 3xx status code
func (o *CreateGcpMetricsIntegrationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create gcp metrics integration default response has a 4xx status code
func (o *CreateGcpMetricsIntegrationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create gcp metrics integration default response has a 5xx status code
func (o *CreateGcpMetricsIntegrationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create gcp metrics integration default response a status code equal to that given
func (o *CreateGcpMetricsIntegrationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create gcp metrics integration default response
func (o *CreateGcpMetricsIntegrationDefault) Code() int {
	return o._statusCode
}

func (o *CreateGcpMetricsIntegrationDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] CreateGcpMetricsIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *CreateGcpMetricsIntegrationDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/config/gcp-metrics-integrations][%d] CreateGcpMetricsIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *CreateGcpMetricsIntegrationDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateGcpMetricsIntegrationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
