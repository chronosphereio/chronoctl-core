// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// ReadLogIngestConfigReader is a Reader for the ReadLogIngestConfig structure.
type ReadLogIngestConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadLogIngestConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadLogIngestConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadLogIngestConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadLogIngestConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadLogIngestConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadLogIngestConfigOK creates a ReadLogIngestConfigOK with default headers values
func NewReadLogIngestConfigOK() *ReadLogIngestConfigOK {
	return &ReadLogIngestConfigOK{}
}

/*
ReadLogIngestConfigOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadLogIngestConfigOK struct {
	Payload *models.Configv1ReadLogIngestConfigResponse
}

// IsSuccess returns true when this read log ingest config o k response has a 2xx status code
func (o *ReadLogIngestConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read log ingest config o k response has a 3xx status code
func (o *ReadLogIngestConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log ingest config o k response has a 4xx status code
func (o *ReadLogIngestConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read log ingest config o k response has a 5xx status code
func (o *ReadLogIngestConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read log ingest config o k response a status code equal to that given
func (o *ReadLogIngestConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read log ingest config o k response
func (o *ReadLogIngestConfigOK) Code() int {
	return 200
}

func (o *ReadLogIngestConfigOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/log-ingest-config][%d] readLogIngestConfigOK  %+v", 200, o.Payload)
}

func (o *ReadLogIngestConfigOK) String() string {
	return fmt.Sprintf("[GET /api/v1/config/log-ingest-config][%d] readLogIngestConfigOK  %+v", 200, o.Payload)
}

func (o *ReadLogIngestConfigOK) GetPayload() *models.Configv1ReadLogIngestConfigResponse {
	return o.Payload
}

func (o *ReadLogIngestConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1ReadLogIngestConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogIngestConfigNotFound creates a ReadLogIngestConfigNotFound with default headers values
func NewReadLogIngestConfigNotFound() *ReadLogIngestConfigNotFound {
	return &ReadLogIngestConfigNotFound{}
}

/*
ReadLogIngestConfigNotFound describes a response with status code 404, with default header values.

Cannot read the LogIngestConfig because LogIngestConfig has not been created.
*/
type ReadLogIngestConfigNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read log ingest config not found response has a 2xx status code
func (o *ReadLogIngestConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read log ingest config not found response has a 3xx status code
func (o *ReadLogIngestConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log ingest config not found response has a 4xx status code
func (o *ReadLogIngestConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read log ingest config not found response has a 5xx status code
func (o *ReadLogIngestConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read log ingest config not found response a status code equal to that given
func (o *ReadLogIngestConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read log ingest config not found response
func (o *ReadLogIngestConfigNotFound) Code() int {
	return 404
}

func (o *ReadLogIngestConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/log-ingest-config][%d] readLogIngestConfigNotFound  %+v", 404, o.Payload)
}

func (o *ReadLogIngestConfigNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/config/log-ingest-config][%d] readLogIngestConfigNotFound  %+v", 404, o.Payload)
}

func (o *ReadLogIngestConfigNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadLogIngestConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogIngestConfigInternalServerError creates a ReadLogIngestConfigInternalServerError with default headers values
func NewReadLogIngestConfigInternalServerError() *ReadLogIngestConfigInternalServerError {
	return &ReadLogIngestConfigInternalServerError{}
}

/*
ReadLogIngestConfigInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadLogIngestConfigInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read log ingest config internal server error response has a 2xx status code
func (o *ReadLogIngestConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read log ingest config internal server error response has a 3xx status code
func (o *ReadLogIngestConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log ingest config internal server error response has a 4xx status code
func (o *ReadLogIngestConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read log ingest config internal server error response has a 5xx status code
func (o *ReadLogIngestConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read log ingest config internal server error response a status code equal to that given
func (o *ReadLogIngestConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read log ingest config internal server error response
func (o *ReadLogIngestConfigInternalServerError) Code() int {
	return 500
}

func (o *ReadLogIngestConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/log-ingest-config][%d] readLogIngestConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLogIngestConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/config/log-ingest-config][%d] readLogIngestConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLogIngestConfigInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadLogIngestConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogIngestConfigDefault creates a ReadLogIngestConfigDefault with default headers values
func NewReadLogIngestConfigDefault(code int) *ReadLogIngestConfigDefault {
	return &ReadLogIngestConfigDefault{
		_statusCode: code,
	}
}

/*
ReadLogIngestConfigDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadLogIngestConfigDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read log ingest config default response has a 2xx status code
func (o *ReadLogIngestConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read log ingest config default response has a 3xx status code
func (o *ReadLogIngestConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read log ingest config default response has a 4xx status code
func (o *ReadLogIngestConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read log ingest config default response has a 5xx status code
func (o *ReadLogIngestConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read log ingest config default response a status code equal to that given
func (o *ReadLogIngestConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read log ingest config default response
func (o *ReadLogIngestConfigDefault) Code() int {
	return o._statusCode
}

func (o *ReadLogIngestConfigDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/log-ingest-config][%d] ReadLogIngestConfig default  %+v", o._statusCode, o.Payload)
}

func (o *ReadLogIngestConfigDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/config/log-ingest-config][%d] ReadLogIngestConfig default  %+v", o._statusCode, o.Payload)
}

func (o *ReadLogIngestConfigDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadLogIngestConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
