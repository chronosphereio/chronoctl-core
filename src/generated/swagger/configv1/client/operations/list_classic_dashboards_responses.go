// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// ListClassicDashboardsReader is a Reader for the ListClassicDashboards structure.
type ListClassicDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListClassicDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListClassicDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListClassicDashboardsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListClassicDashboardsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListClassicDashboardsOK creates a ListClassicDashboardsOK with default headers values
func NewListClassicDashboardsOK() *ListClassicDashboardsOK {
	return &ListClassicDashboardsOK{}
}

/*
ListClassicDashboardsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListClassicDashboardsOK struct {
	Payload *models.Configv1ListClassicDashboardsResponse
}

// IsSuccess returns true when this list classic dashboards o k response has a 2xx status code
func (o *ListClassicDashboardsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list classic dashboards o k response has a 3xx status code
func (o *ListClassicDashboardsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list classic dashboards o k response has a 4xx status code
func (o *ListClassicDashboardsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list classic dashboards o k response has a 5xx status code
func (o *ListClassicDashboardsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list classic dashboards o k response a status code equal to that given
func (o *ListClassicDashboardsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list classic dashboards o k response
func (o *ListClassicDashboardsOK) Code() int {
	return 200
}

func (o *ListClassicDashboardsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/classic-dashboards][%d] listClassicDashboardsOK  %+v", 200, o.Payload)
}

func (o *ListClassicDashboardsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/config/classic-dashboards][%d] listClassicDashboardsOK  %+v", 200, o.Payload)
}

func (o *ListClassicDashboardsOK) GetPayload() *models.Configv1ListClassicDashboardsResponse {
	return o.Payload
}

func (o *ListClassicDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1ListClassicDashboardsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClassicDashboardsInternalServerError creates a ListClassicDashboardsInternalServerError with default headers values
func NewListClassicDashboardsInternalServerError() *ListClassicDashboardsInternalServerError {
	return &ListClassicDashboardsInternalServerError{}
}

/*
ListClassicDashboardsInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ListClassicDashboardsInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this list classic dashboards internal server error response has a 2xx status code
func (o *ListClassicDashboardsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list classic dashboards internal server error response has a 3xx status code
func (o *ListClassicDashboardsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list classic dashboards internal server error response has a 4xx status code
func (o *ListClassicDashboardsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list classic dashboards internal server error response has a 5xx status code
func (o *ListClassicDashboardsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list classic dashboards internal server error response a status code equal to that given
func (o *ListClassicDashboardsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list classic dashboards internal server error response
func (o *ListClassicDashboardsInternalServerError) Code() int {
	return 500
}

func (o *ListClassicDashboardsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/classic-dashboards][%d] listClassicDashboardsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListClassicDashboardsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/config/classic-dashboards][%d] listClassicDashboardsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListClassicDashboardsInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ListClassicDashboardsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClassicDashboardsDefault creates a ListClassicDashboardsDefault with default headers values
func NewListClassicDashboardsDefault(code int) *ListClassicDashboardsDefault {
	return &ListClassicDashboardsDefault{
		_statusCode: code,
	}
}

/*
ListClassicDashboardsDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ListClassicDashboardsDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this list classic dashboards default response has a 2xx status code
func (o *ListClassicDashboardsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list classic dashboards default response has a 3xx status code
func (o *ListClassicDashboardsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list classic dashboards default response has a 4xx status code
func (o *ListClassicDashboardsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list classic dashboards default response has a 5xx status code
func (o *ListClassicDashboardsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list classic dashboards default response a status code equal to that given
func (o *ListClassicDashboardsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list classic dashboards default response
func (o *ListClassicDashboardsDefault) Code() int {
	return o._statusCode
}

func (o *ListClassicDashboardsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/classic-dashboards][%d] ListClassicDashboards default  %+v", o._statusCode, o.Payload)
}

func (o *ListClassicDashboardsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/config/classic-dashboards][%d] ListClassicDashboards default  %+v", o._statusCode, o.Payload)
}

func (o *ListClassicDashboardsDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ListClassicDashboardsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
