// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// CreateLogIngestConfigReader is a Reader for the CreateLogIngestConfig structure.
type CreateLogIngestConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLogIngestConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateLogIngestConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateLogIngestConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateLogIngestConfigConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateLogIngestConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateLogIngestConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateLogIngestConfigOK creates a CreateLogIngestConfigOK with default headers values
func NewCreateLogIngestConfigOK() *CreateLogIngestConfigOK {
	return &CreateLogIngestConfigOK{}
}

/*
CreateLogIngestConfigOK describes a response with status code 200, with default header values.

A successful response containing the created LogIngestConfig.
*/
type CreateLogIngestConfigOK struct {
	Payload *models.Configv1CreateLogIngestConfigResponse
}

// IsSuccess returns true when this create log ingest config o k response has a 2xx status code
func (o *CreateLogIngestConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create log ingest config o k response has a 3xx status code
func (o *CreateLogIngestConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log ingest config o k response has a 4xx status code
func (o *CreateLogIngestConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create log ingest config o k response has a 5xx status code
func (o *CreateLogIngestConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create log ingest config o k response a status code equal to that given
func (o *CreateLogIngestConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create log ingest config o k response
func (o *CreateLogIngestConfigOK) Code() int {
	return 200
}

func (o *CreateLogIngestConfigOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] createLogIngestConfigOK  %+v", 200, o.Payload)
}

func (o *CreateLogIngestConfigOK) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] createLogIngestConfigOK  %+v", 200, o.Payload)
}

func (o *CreateLogIngestConfigOK) GetPayload() *models.Configv1CreateLogIngestConfigResponse {
	return o.Payload
}

func (o *CreateLogIngestConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1CreateLogIngestConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogIngestConfigBadRequest creates a CreateLogIngestConfigBadRequest with default headers values
func NewCreateLogIngestConfigBadRequest() *CreateLogIngestConfigBadRequest {
	return &CreateLogIngestConfigBadRequest{}
}

/*
CreateLogIngestConfigBadRequest describes a response with status code 400, with default header values.

Cannot create the LogIngestConfig because the request is invalid.
*/
type CreateLogIngestConfigBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log ingest config bad request response has a 2xx status code
func (o *CreateLogIngestConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log ingest config bad request response has a 3xx status code
func (o *CreateLogIngestConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log ingest config bad request response has a 4xx status code
func (o *CreateLogIngestConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create log ingest config bad request response has a 5xx status code
func (o *CreateLogIngestConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create log ingest config bad request response a status code equal to that given
func (o *CreateLogIngestConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create log ingest config bad request response
func (o *CreateLogIngestConfigBadRequest) Code() int {
	return 400
}

func (o *CreateLogIngestConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] createLogIngestConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogIngestConfigBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] createLogIngestConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogIngestConfigBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogIngestConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogIngestConfigConflict creates a CreateLogIngestConfigConflict with default headers values
func NewCreateLogIngestConfigConflict() *CreateLogIngestConfigConflict {
	return &CreateLogIngestConfigConflict{}
}

/*
CreateLogIngestConfigConflict describes a response with status code 409, with default header values.

Cannot create the LogIngestConfig because there is a conflict with an existing LogIngestConfig.
*/
type CreateLogIngestConfigConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log ingest config conflict response has a 2xx status code
func (o *CreateLogIngestConfigConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log ingest config conflict response has a 3xx status code
func (o *CreateLogIngestConfigConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log ingest config conflict response has a 4xx status code
func (o *CreateLogIngestConfigConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create log ingest config conflict response has a 5xx status code
func (o *CreateLogIngestConfigConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create log ingest config conflict response a status code equal to that given
func (o *CreateLogIngestConfigConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create log ingest config conflict response
func (o *CreateLogIngestConfigConflict) Code() int {
	return 409
}

func (o *CreateLogIngestConfigConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] createLogIngestConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateLogIngestConfigConflict) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] createLogIngestConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateLogIngestConfigConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogIngestConfigConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogIngestConfigInternalServerError creates a CreateLogIngestConfigInternalServerError with default headers values
func NewCreateLogIngestConfigInternalServerError() *CreateLogIngestConfigInternalServerError {
	return &CreateLogIngestConfigInternalServerError{}
}

/*
CreateLogIngestConfigInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateLogIngestConfigInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log ingest config internal server error response has a 2xx status code
func (o *CreateLogIngestConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log ingest config internal server error response has a 3xx status code
func (o *CreateLogIngestConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log ingest config internal server error response has a 4xx status code
func (o *CreateLogIngestConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create log ingest config internal server error response has a 5xx status code
func (o *CreateLogIngestConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create log ingest config internal server error response a status code equal to that given
func (o *CreateLogIngestConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create log ingest config internal server error response
func (o *CreateLogIngestConfigInternalServerError) Code() int {
	return 500
}

func (o *CreateLogIngestConfigInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] createLogIngestConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogIngestConfigInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] createLogIngestConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogIngestConfigInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogIngestConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogIngestConfigDefault creates a CreateLogIngestConfigDefault with default headers values
func NewCreateLogIngestConfigDefault(code int) *CreateLogIngestConfigDefault {
	return &CreateLogIngestConfigDefault{
		_statusCode: code,
	}
}

/*
CreateLogIngestConfigDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateLogIngestConfigDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create log ingest config default response has a 2xx status code
func (o *CreateLogIngestConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create log ingest config default response has a 3xx status code
func (o *CreateLogIngestConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create log ingest config default response has a 4xx status code
func (o *CreateLogIngestConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create log ingest config default response has a 5xx status code
func (o *CreateLogIngestConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create log ingest config default response a status code equal to that given
func (o *CreateLogIngestConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create log ingest config default response
func (o *CreateLogIngestConfigDefault) Code() int {
	return o._statusCode
}

func (o *CreateLogIngestConfigDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] CreateLogIngestConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLogIngestConfigDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/config/log-ingest-config][%d] CreateLogIngestConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLogIngestConfigDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateLogIngestConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
