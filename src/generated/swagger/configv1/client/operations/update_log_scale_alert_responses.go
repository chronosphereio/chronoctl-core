// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// UpdateLogScaleAlertReader is a Reader for the UpdateLogScaleAlert structure.
type UpdateLogScaleAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLogScaleAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLogScaleAlertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLogScaleAlertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLogScaleAlertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateLogScaleAlertConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateLogScaleAlertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateLogScaleAlertDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateLogScaleAlertOK creates a UpdateLogScaleAlertOK with default headers values
func NewUpdateLogScaleAlertOK() *UpdateLogScaleAlertOK {
	return &UpdateLogScaleAlertOK{}
}

/*
UpdateLogScaleAlertOK describes a response with status code 200, with default header values.

A successful response containing the updated LogScaleAlert.
*/
type UpdateLogScaleAlertOK struct {
	Payload *models.Configv1UpdateLogScaleAlertResponse
}

// IsSuccess returns true when this update log scale alert o k response has a 2xx status code
func (o *UpdateLogScaleAlertOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update log scale alert o k response has a 3xx status code
func (o *UpdateLogScaleAlertOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update log scale alert o k response has a 4xx status code
func (o *UpdateLogScaleAlertOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update log scale alert o k response has a 5xx status code
func (o *UpdateLogScaleAlertOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update log scale alert o k response a status code equal to that given
func (o *UpdateLogScaleAlertOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update log scale alert o k response
func (o *UpdateLogScaleAlertOK) Code() int {
	return 200
}

func (o *UpdateLogScaleAlertOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertOK  %+v", 200, o.Payload)
}

func (o *UpdateLogScaleAlertOK) String() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertOK  %+v", 200, o.Payload)
}

func (o *UpdateLogScaleAlertOK) GetPayload() *models.Configv1UpdateLogScaleAlertResponse {
	return o.Payload
}

func (o *UpdateLogScaleAlertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1UpdateLogScaleAlertResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogScaleAlertBadRequest creates a UpdateLogScaleAlertBadRequest with default headers values
func NewUpdateLogScaleAlertBadRequest() *UpdateLogScaleAlertBadRequest {
	return &UpdateLogScaleAlertBadRequest{}
}

/*
UpdateLogScaleAlertBadRequest describes a response with status code 400, with default header values.

Cannot update the LogScaleAlert because the request is invalid.
*/
type UpdateLogScaleAlertBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update log scale alert bad request response has a 2xx status code
func (o *UpdateLogScaleAlertBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update log scale alert bad request response has a 3xx status code
func (o *UpdateLogScaleAlertBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update log scale alert bad request response has a 4xx status code
func (o *UpdateLogScaleAlertBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update log scale alert bad request response has a 5xx status code
func (o *UpdateLogScaleAlertBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update log scale alert bad request response a status code equal to that given
func (o *UpdateLogScaleAlertBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update log scale alert bad request response
func (o *UpdateLogScaleAlertBadRequest) Code() int {
	return 400
}

func (o *UpdateLogScaleAlertBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLogScaleAlertBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLogScaleAlertBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateLogScaleAlertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogScaleAlertNotFound creates a UpdateLogScaleAlertNotFound with default headers values
func NewUpdateLogScaleAlertNotFound() *UpdateLogScaleAlertNotFound {
	return &UpdateLogScaleAlertNotFound{}
}

/*
UpdateLogScaleAlertNotFound describes a response with status code 404, with default header values.

Cannot update the LogScaleAlert because the slug does not exist.
*/
type UpdateLogScaleAlertNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update log scale alert not found response has a 2xx status code
func (o *UpdateLogScaleAlertNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update log scale alert not found response has a 3xx status code
func (o *UpdateLogScaleAlertNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update log scale alert not found response has a 4xx status code
func (o *UpdateLogScaleAlertNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update log scale alert not found response has a 5xx status code
func (o *UpdateLogScaleAlertNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update log scale alert not found response a status code equal to that given
func (o *UpdateLogScaleAlertNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update log scale alert not found response
func (o *UpdateLogScaleAlertNotFound) Code() int {
	return 404
}

func (o *UpdateLogScaleAlertNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertNotFound  %+v", 404, o.Payload)
}

func (o *UpdateLogScaleAlertNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertNotFound  %+v", 404, o.Payload)
}

func (o *UpdateLogScaleAlertNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateLogScaleAlertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogScaleAlertConflict creates a UpdateLogScaleAlertConflict with default headers values
func NewUpdateLogScaleAlertConflict() *UpdateLogScaleAlertConflict {
	return &UpdateLogScaleAlertConflict{}
}

/*
UpdateLogScaleAlertConflict describes a response with status code 409, with default header values.

Cannot update the LogScaleAlert because there is a conflict with an existing LogScaleAlert.
*/
type UpdateLogScaleAlertConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update log scale alert conflict response has a 2xx status code
func (o *UpdateLogScaleAlertConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update log scale alert conflict response has a 3xx status code
func (o *UpdateLogScaleAlertConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update log scale alert conflict response has a 4xx status code
func (o *UpdateLogScaleAlertConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update log scale alert conflict response has a 5xx status code
func (o *UpdateLogScaleAlertConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update log scale alert conflict response a status code equal to that given
func (o *UpdateLogScaleAlertConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update log scale alert conflict response
func (o *UpdateLogScaleAlertConflict) Code() int {
	return 409
}

func (o *UpdateLogScaleAlertConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertConflict  %+v", 409, o.Payload)
}

func (o *UpdateLogScaleAlertConflict) String() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertConflict  %+v", 409, o.Payload)
}

func (o *UpdateLogScaleAlertConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateLogScaleAlertConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogScaleAlertInternalServerError creates a UpdateLogScaleAlertInternalServerError with default headers values
func NewUpdateLogScaleAlertInternalServerError() *UpdateLogScaleAlertInternalServerError {
	return &UpdateLogScaleAlertInternalServerError{}
}

/*
UpdateLogScaleAlertInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type UpdateLogScaleAlertInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update log scale alert internal server error response has a 2xx status code
func (o *UpdateLogScaleAlertInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update log scale alert internal server error response has a 3xx status code
func (o *UpdateLogScaleAlertInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update log scale alert internal server error response has a 4xx status code
func (o *UpdateLogScaleAlertInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update log scale alert internal server error response has a 5xx status code
func (o *UpdateLogScaleAlertInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update log scale alert internal server error response a status code equal to that given
func (o *UpdateLogScaleAlertInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update log scale alert internal server error response
func (o *UpdateLogScaleAlertInternalServerError) Code() int {
	return 500
}

func (o *UpdateLogScaleAlertInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateLogScaleAlertInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] updateLogScaleAlertInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateLogScaleAlertInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateLogScaleAlertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogScaleAlertDefault creates a UpdateLogScaleAlertDefault with default headers values
func NewUpdateLogScaleAlertDefault(code int) *UpdateLogScaleAlertDefault {
	return &UpdateLogScaleAlertDefault{
		_statusCode: code,
	}
}

/*
UpdateLogScaleAlertDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type UpdateLogScaleAlertDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this update log scale alert default response has a 2xx status code
func (o *UpdateLogScaleAlertDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update log scale alert default response has a 3xx status code
func (o *UpdateLogScaleAlertDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update log scale alert default response has a 4xx status code
func (o *UpdateLogScaleAlertDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update log scale alert default response has a 5xx status code
func (o *UpdateLogScaleAlertDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update log scale alert default response a status code equal to that given
func (o *UpdateLogScaleAlertDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update log scale alert default response
func (o *UpdateLogScaleAlertDefault) Code() int {
	return o._statusCode
}

func (o *UpdateLogScaleAlertDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] UpdateLogScaleAlert default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateLogScaleAlertDefault) String() string {
	return fmt.Sprintf("[PUT /api/v1/config/log-scale-alerts/{slug}][%d] UpdateLogScaleAlert default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateLogScaleAlertDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *UpdateLogScaleAlertDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
