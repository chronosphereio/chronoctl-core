// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// CreateCollectionReader is a Reader for the CreateCollection structure.
type CreateCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCollectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateCollectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateCollectionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateCollectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateCollectionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateCollectionOK creates a CreateCollectionOK with default headers values
func NewCreateCollectionOK() *CreateCollectionOK {
	return &CreateCollectionOK{}
}

/*
CreateCollectionOK describes a response with status code 200, with default header values.

A successful response containing the created Collection.
*/
type CreateCollectionOK struct {
	Payload *models.Configv1CreateCollectionResponse
}

// IsSuccess returns true when this create collection o k response has a 2xx status code
func (o *CreateCollectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create collection o k response has a 3xx status code
func (o *CreateCollectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create collection o k response has a 4xx status code
func (o *CreateCollectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create collection o k response has a 5xx status code
func (o *CreateCollectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create collection o k response a status code equal to that given
func (o *CreateCollectionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create collection o k response
func (o *CreateCollectionOK) Code() int {
	return 200
}

func (o *CreateCollectionOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] createCollectionOK  %+v", 200, o.Payload)
}

func (o *CreateCollectionOK) String() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] createCollectionOK  %+v", 200, o.Payload)
}

func (o *CreateCollectionOK) GetPayload() *models.Configv1CreateCollectionResponse {
	return o.Payload
}

func (o *CreateCollectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1CreateCollectionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionBadRequest creates a CreateCollectionBadRequest with default headers values
func NewCreateCollectionBadRequest() *CreateCollectionBadRequest {
	return &CreateCollectionBadRequest{}
}

/*
CreateCollectionBadRequest describes a response with status code 400, with default header values.

Cannot create the Collection because the request is invalid.
*/
type CreateCollectionBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create collection bad request response has a 2xx status code
func (o *CreateCollectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create collection bad request response has a 3xx status code
func (o *CreateCollectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create collection bad request response has a 4xx status code
func (o *CreateCollectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create collection bad request response has a 5xx status code
func (o *CreateCollectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create collection bad request response a status code equal to that given
func (o *CreateCollectionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create collection bad request response
func (o *CreateCollectionBadRequest) Code() int {
	return 400
}

func (o *CreateCollectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] createCollectionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateCollectionBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] createCollectionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateCollectionBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateCollectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionConflict creates a CreateCollectionConflict with default headers values
func NewCreateCollectionConflict() *CreateCollectionConflict {
	return &CreateCollectionConflict{}
}

/*
CreateCollectionConflict describes a response with status code 409, with default header values.

Cannot create the Collection because there is a conflict with an existing Collection.
*/
type CreateCollectionConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create collection conflict response has a 2xx status code
func (o *CreateCollectionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create collection conflict response has a 3xx status code
func (o *CreateCollectionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create collection conflict response has a 4xx status code
func (o *CreateCollectionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create collection conflict response has a 5xx status code
func (o *CreateCollectionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create collection conflict response a status code equal to that given
func (o *CreateCollectionConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create collection conflict response
func (o *CreateCollectionConflict) Code() int {
	return 409
}

func (o *CreateCollectionConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] createCollectionConflict  %+v", 409, o.Payload)
}

func (o *CreateCollectionConflict) String() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] createCollectionConflict  %+v", 409, o.Payload)
}

func (o *CreateCollectionConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateCollectionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionInternalServerError creates a CreateCollectionInternalServerError with default headers values
func NewCreateCollectionInternalServerError() *CreateCollectionInternalServerError {
	return &CreateCollectionInternalServerError{}
}

/*
CreateCollectionInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateCollectionInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create collection internal server error response has a 2xx status code
func (o *CreateCollectionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create collection internal server error response has a 3xx status code
func (o *CreateCollectionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create collection internal server error response has a 4xx status code
func (o *CreateCollectionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create collection internal server error response has a 5xx status code
func (o *CreateCollectionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create collection internal server error response a status code equal to that given
func (o *CreateCollectionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create collection internal server error response
func (o *CreateCollectionInternalServerError) Code() int {
	return 500
}

func (o *CreateCollectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] createCollectionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateCollectionInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] createCollectionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateCollectionInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateCollectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCollectionDefault creates a CreateCollectionDefault with default headers values
func NewCreateCollectionDefault(code int) *CreateCollectionDefault {
	return &CreateCollectionDefault{
		_statusCode: code,
	}
}

/*
CreateCollectionDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateCollectionDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create collection default response has a 2xx status code
func (o *CreateCollectionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create collection default response has a 3xx status code
func (o *CreateCollectionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create collection default response has a 4xx status code
func (o *CreateCollectionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create collection default response has a 5xx status code
func (o *CreateCollectionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create collection default response a status code equal to that given
func (o *CreateCollectionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create collection default response
func (o *CreateCollectionDefault) Code() int {
	return o._statusCode
}

func (o *CreateCollectionDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] CreateCollection default  %+v", o._statusCode, o.Payload)
}

func (o *CreateCollectionDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/config/collections][%d] CreateCollection default  %+v", o._statusCode, o.Payload)
}

func (o *CreateCollectionDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateCollectionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
