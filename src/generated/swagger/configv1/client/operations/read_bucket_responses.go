// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// ReadBucketReader is a Reader for the ReadBucket structure.
type ReadBucketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadBucketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadBucketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadBucketNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadBucketInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadBucketDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadBucketOK creates a ReadBucketOK with default headers values
func NewReadBucketOK() *ReadBucketOK {
	return &ReadBucketOK{}
}

/*
ReadBucketOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadBucketOK struct {
	Payload *models.Configv1ReadBucketResponse
}

// IsSuccess returns true when this read bucket o k response has a 2xx status code
func (o *ReadBucketOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read bucket o k response has a 3xx status code
func (o *ReadBucketOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read bucket o k response has a 4xx status code
func (o *ReadBucketOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read bucket o k response has a 5xx status code
func (o *ReadBucketOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read bucket o k response a status code equal to that given
func (o *ReadBucketOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read bucket o k response
func (o *ReadBucketOK) Code() int {
	return 200
}

func (o *ReadBucketOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/buckets/{slug}][%d] readBucketOK  %+v", 200, o.Payload)
}

func (o *ReadBucketOK) String() string {
	return fmt.Sprintf("[GET /api/v1/config/buckets/{slug}][%d] readBucketOK  %+v", 200, o.Payload)
}

func (o *ReadBucketOK) GetPayload() *models.Configv1ReadBucketResponse {
	return o.Payload
}

func (o *ReadBucketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1ReadBucketResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadBucketNotFound creates a ReadBucketNotFound with default headers values
func NewReadBucketNotFound() *ReadBucketNotFound {
	return &ReadBucketNotFound{}
}

/*
ReadBucketNotFound describes a response with status code 404, with default header values.

Cannot read the Bucket because the slug does not exist.
*/
type ReadBucketNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read bucket not found response has a 2xx status code
func (o *ReadBucketNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read bucket not found response has a 3xx status code
func (o *ReadBucketNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read bucket not found response has a 4xx status code
func (o *ReadBucketNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read bucket not found response has a 5xx status code
func (o *ReadBucketNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read bucket not found response a status code equal to that given
func (o *ReadBucketNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read bucket not found response
func (o *ReadBucketNotFound) Code() int {
	return 404
}

func (o *ReadBucketNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/buckets/{slug}][%d] readBucketNotFound  %+v", 404, o.Payload)
}

func (o *ReadBucketNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/config/buckets/{slug}][%d] readBucketNotFound  %+v", 404, o.Payload)
}

func (o *ReadBucketNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadBucketNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadBucketInternalServerError creates a ReadBucketInternalServerError with default headers values
func NewReadBucketInternalServerError() *ReadBucketInternalServerError {
	return &ReadBucketInternalServerError{}
}

/*
ReadBucketInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadBucketInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read bucket internal server error response has a 2xx status code
func (o *ReadBucketInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read bucket internal server error response has a 3xx status code
func (o *ReadBucketInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read bucket internal server error response has a 4xx status code
func (o *ReadBucketInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read bucket internal server error response has a 5xx status code
func (o *ReadBucketInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read bucket internal server error response a status code equal to that given
func (o *ReadBucketInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read bucket internal server error response
func (o *ReadBucketInternalServerError) Code() int {
	return 500
}

func (o *ReadBucketInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/buckets/{slug}][%d] readBucketInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadBucketInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/config/buckets/{slug}][%d] readBucketInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadBucketInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadBucketInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadBucketDefault creates a ReadBucketDefault with default headers values
func NewReadBucketDefault(code int) *ReadBucketDefault {
	return &ReadBucketDefault{
		_statusCode: code,
	}
}

/*
ReadBucketDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadBucketDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read bucket default response has a 2xx status code
func (o *ReadBucketDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read bucket default response has a 3xx status code
func (o *ReadBucketDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read bucket default response has a 4xx status code
func (o *ReadBucketDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read bucket default response has a 5xx status code
func (o *ReadBucketDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read bucket default response a status code equal to that given
func (o *ReadBucketDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read bucket default response
func (o *ReadBucketDefault) Code() int {
	return o._statusCode
}

func (o *ReadBucketDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/buckets/{slug}][%d] ReadBucket default  %+v", o._statusCode, o.Payload)
}

func (o *ReadBucketDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/config/buckets/{slug}][%d] ReadBucket default  %+v", o._statusCode, o.Payload)
}

func (o *ReadBucketDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadBucketDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
