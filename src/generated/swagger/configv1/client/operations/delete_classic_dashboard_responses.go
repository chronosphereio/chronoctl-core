// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// DeleteClassicDashboardReader is a Reader for the DeleteClassicDashboard structure.
type DeleteClassicDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteClassicDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteClassicDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteClassicDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteClassicDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteClassicDashboardInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteClassicDashboardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteClassicDashboardOK creates a DeleteClassicDashboardOK with default headers values
func NewDeleteClassicDashboardOK() *DeleteClassicDashboardOK {
	return &DeleteClassicDashboardOK{}
}

/*
DeleteClassicDashboardOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteClassicDashboardOK struct {
	Payload models.Configv1DeleteClassicDashboardResponse
}

// IsSuccess returns true when this delete classic dashboard o k response has a 2xx status code
func (o *DeleteClassicDashboardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete classic dashboard o k response has a 3xx status code
func (o *DeleteClassicDashboardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete classic dashboard o k response has a 4xx status code
func (o *DeleteClassicDashboardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete classic dashboard o k response has a 5xx status code
func (o *DeleteClassicDashboardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete classic dashboard o k response a status code equal to that given
func (o *DeleteClassicDashboardOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete classic dashboard o k response
func (o *DeleteClassicDashboardOK) Code() int {
	return 200
}

func (o *DeleteClassicDashboardOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] deleteClassicDashboardOK  %+v", 200, o.Payload)
}

func (o *DeleteClassicDashboardOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] deleteClassicDashboardOK  %+v", 200, o.Payload)
}

func (o *DeleteClassicDashboardOK) GetPayload() models.Configv1DeleteClassicDashboardResponse {
	return o.Payload
}

func (o *DeleteClassicDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClassicDashboardBadRequest creates a DeleteClassicDashboardBadRequest with default headers values
func NewDeleteClassicDashboardBadRequest() *DeleteClassicDashboardBadRequest {
	return &DeleteClassicDashboardBadRequest{}
}

/*
DeleteClassicDashboardBadRequest describes a response with status code 400, with default header values.

Cannot delete the GrafanaDashboard because it is in use.
*/
type DeleteClassicDashboardBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete classic dashboard bad request response has a 2xx status code
func (o *DeleteClassicDashboardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete classic dashboard bad request response has a 3xx status code
func (o *DeleteClassicDashboardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete classic dashboard bad request response has a 4xx status code
func (o *DeleteClassicDashboardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete classic dashboard bad request response has a 5xx status code
func (o *DeleteClassicDashboardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete classic dashboard bad request response a status code equal to that given
func (o *DeleteClassicDashboardBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete classic dashboard bad request response
func (o *DeleteClassicDashboardBadRequest) Code() int {
	return 400
}

func (o *DeleteClassicDashboardBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] deleteClassicDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteClassicDashboardBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] deleteClassicDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteClassicDashboardBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteClassicDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClassicDashboardNotFound creates a DeleteClassicDashboardNotFound with default headers values
func NewDeleteClassicDashboardNotFound() *DeleteClassicDashboardNotFound {
	return &DeleteClassicDashboardNotFound{}
}

/*
DeleteClassicDashboardNotFound describes a response with status code 404, with default header values.

Cannot delete the GrafanaDashboard because the slug does not exist.
*/
type DeleteClassicDashboardNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete classic dashboard not found response has a 2xx status code
func (o *DeleteClassicDashboardNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete classic dashboard not found response has a 3xx status code
func (o *DeleteClassicDashboardNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete classic dashboard not found response has a 4xx status code
func (o *DeleteClassicDashboardNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete classic dashboard not found response has a 5xx status code
func (o *DeleteClassicDashboardNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete classic dashboard not found response a status code equal to that given
func (o *DeleteClassicDashboardNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete classic dashboard not found response
func (o *DeleteClassicDashboardNotFound) Code() int {
	return 404
}

func (o *DeleteClassicDashboardNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] deleteClassicDashboardNotFound  %+v", 404, o.Payload)
}

func (o *DeleteClassicDashboardNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] deleteClassicDashboardNotFound  %+v", 404, o.Payload)
}

func (o *DeleteClassicDashboardNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteClassicDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClassicDashboardInternalServerError creates a DeleteClassicDashboardInternalServerError with default headers values
func NewDeleteClassicDashboardInternalServerError() *DeleteClassicDashboardInternalServerError {
	return &DeleteClassicDashboardInternalServerError{}
}

/*
DeleteClassicDashboardInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteClassicDashboardInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete classic dashboard internal server error response has a 2xx status code
func (o *DeleteClassicDashboardInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete classic dashboard internal server error response has a 3xx status code
func (o *DeleteClassicDashboardInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete classic dashboard internal server error response has a 4xx status code
func (o *DeleteClassicDashboardInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete classic dashboard internal server error response has a 5xx status code
func (o *DeleteClassicDashboardInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete classic dashboard internal server error response a status code equal to that given
func (o *DeleteClassicDashboardInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete classic dashboard internal server error response
func (o *DeleteClassicDashboardInternalServerError) Code() int {
	return 500
}

func (o *DeleteClassicDashboardInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] deleteClassicDashboardInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteClassicDashboardInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] deleteClassicDashboardInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteClassicDashboardInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteClassicDashboardInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClassicDashboardDefault creates a DeleteClassicDashboardDefault with default headers values
func NewDeleteClassicDashboardDefault(code int) *DeleteClassicDashboardDefault {
	return &DeleteClassicDashboardDefault{
		_statusCode: code,
	}
}

/*
DeleteClassicDashboardDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteClassicDashboardDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete classic dashboard default response has a 2xx status code
func (o *DeleteClassicDashboardDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete classic dashboard default response has a 3xx status code
func (o *DeleteClassicDashboardDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete classic dashboard default response has a 4xx status code
func (o *DeleteClassicDashboardDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete classic dashboard default response has a 5xx status code
func (o *DeleteClassicDashboardDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete classic dashboard default response a status code equal to that given
func (o *DeleteClassicDashboardDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete classic dashboard default response
func (o *DeleteClassicDashboardDefault) Code() int {
	return o._statusCode
}

func (o *DeleteClassicDashboardDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] DeleteClassicDashboard default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteClassicDashboardDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/classic-dashboards/{slug}][%d] DeleteClassicDashboard default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteClassicDashboardDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteClassicDashboardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
