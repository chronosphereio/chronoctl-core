// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// ListServiceAccountsReader is a Reader for the ListServiceAccounts structure.
type ListServiceAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServiceAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServiceAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListServiceAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListServiceAccountsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListServiceAccountsOK creates a ListServiceAccountsOK with default headers values
func NewListServiceAccountsOK() *ListServiceAccountsOK {
	return &ListServiceAccountsOK{}
}

/*
ListServiceAccountsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListServiceAccountsOK struct {
	Payload *models.Configv1ListServiceAccountsResponse
}

// IsSuccess returns true when this list service accounts o k response has a 2xx status code
func (o *ListServiceAccountsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list service accounts o k response has a 3xx status code
func (o *ListServiceAccountsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service accounts o k response has a 4xx status code
func (o *ListServiceAccountsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list service accounts o k response has a 5xx status code
func (o *ListServiceAccountsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list service accounts o k response a status code equal to that given
func (o *ListServiceAccountsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list service accounts o k response
func (o *ListServiceAccountsOK) Code() int {
	return 200
}

func (o *ListServiceAccountsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/service-accounts][%d] listServiceAccountsOK  %+v", 200, o.Payload)
}

func (o *ListServiceAccountsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/config/service-accounts][%d] listServiceAccountsOK  %+v", 200, o.Payload)
}

func (o *ListServiceAccountsOK) GetPayload() *models.Configv1ListServiceAccountsResponse {
	return o.Payload
}

func (o *ListServiceAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1ListServiceAccountsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServiceAccountsInternalServerError creates a ListServiceAccountsInternalServerError with default headers values
func NewListServiceAccountsInternalServerError() *ListServiceAccountsInternalServerError {
	return &ListServiceAccountsInternalServerError{}
}

/*
ListServiceAccountsInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ListServiceAccountsInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this list service accounts internal server error response has a 2xx status code
func (o *ListServiceAccountsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list service accounts internal server error response has a 3xx status code
func (o *ListServiceAccountsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service accounts internal server error response has a 4xx status code
func (o *ListServiceAccountsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list service accounts internal server error response has a 5xx status code
func (o *ListServiceAccountsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list service accounts internal server error response a status code equal to that given
func (o *ListServiceAccountsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list service accounts internal server error response
func (o *ListServiceAccountsInternalServerError) Code() int {
	return 500
}

func (o *ListServiceAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/service-accounts][%d] listServiceAccountsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListServiceAccountsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/config/service-accounts][%d] listServiceAccountsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListServiceAccountsInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ListServiceAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServiceAccountsDefault creates a ListServiceAccountsDefault with default headers values
func NewListServiceAccountsDefault(code int) *ListServiceAccountsDefault {
	return &ListServiceAccountsDefault{
		_statusCode: code,
	}
}

/*
ListServiceAccountsDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ListServiceAccountsDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this list service accounts default response has a 2xx status code
func (o *ListServiceAccountsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list service accounts default response has a 3xx status code
func (o *ListServiceAccountsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list service accounts default response has a 4xx status code
func (o *ListServiceAccountsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list service accounts default response has a 5xx status code
func (o *ListServiceAccountsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list service accounts default response a status code equal to that given
func (o *ListServiceAccountsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list service accounts default response
func (o *ListServiceAccountsDefault) Code() int {
	return o._statusCode
}

func (o *ListServiceAccountsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/config/service-accounts][%d] ListServiceAccounts default  %+v", o._statusCode, o.Payload)
}

func (o *ListServiceAccountsDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/config/service-accounts][%d] ListServiceAccounts default  %+v", o._statusCode, o.Payload)
}

func (o *ListServiceAccountsDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ListServiceAccountsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
