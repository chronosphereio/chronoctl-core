// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// CreateMappingRuleReader is a Reader for the CreateMappingRule structure.
type CreateMappingRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateMappingRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateMappingRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateMappingRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateMappingRuleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateMappingRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateMappingRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateMappingRuleOK creates a CreateMappingRuleOK with default headers values
func NewCreateMappingRuleOK() *CreateMappingRuleOK {
	return &CreateMappingRuleOK{}
}

/*
CreateMappingRuleOK describes a response with status code 200, with default header values.

A successful response containing the created MappingRule.
*/
type CreateMappingRuleOK struct {
	Payload *models.Configv1CreateMappingRuleResponse
}

// IsSuccess returns true when this create mapping rule o k response has a 2xx status code
func (o *CreateMappingRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create mapping rule o k response has a 3xx status code
func (o *CreateMappingRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mapping rule o k response has a 4xx status code
func (o *CreateMappingRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create mapping rule o k response has a 5xx status code
func (o *CreateMappingRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create mapping rule o k response a status code equal to that given
func (o *CreateMappingRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create mapping rule o k response
func (o *CreateMappingRuleOK) Code() int {
	return 200
}

func (o *CreateMappingRuleOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] createMappingRuleOK  %+v", 200, o.Payload)
}

func (o *CreateMappingRuleOK) String() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] createMappingRuleOK  %+v", 200, o.Payload)
}

func (o *CreateMappingRuleOK) GetPayload() *models.Configv1CreateMappingRuleResponse {
	return o.Payload
}

func (o *CreateMappingRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Configv1CreateMappingRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMappingRuleBadRequest creates a CreateMappingRuleBadRequest with default headers values
func NewCreateMappingRuleBadRequest() *CreateMappingRuleBadRequest {
	return &CreateMappingRuleBadRequest{}
}

/*
CreateMappingRuleBadRequest describes a response with status code 400, with default header values.

Cannot create the MappingRule because the request is invalid.
*/
type CreateMappingRuleBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create mapping rule bad request response has a 2xx status code
func (o *CreateMappingRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create mapping rule bad request response has a 3xx status code
func (o *CreateMappingRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mapping rule bad request response has a 4xx status code
func (o *CreateMappingRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create mapping rule bad request response has a 5xx status code
func (o *CreateMappingRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create mapping rule bad request response a status code equal to that given
func (o *CreateMappingRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create mapping rule bad request response
func (o *CreateMappingRuleBadRequest) Code() int {
	return 400
}

func (o *CreateMappingRuleBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] createMappingRuleBadRequest  %+v", 400, o.Payload)
}

func (o *CreateMappingRuleBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] createMappingRuleBadRequest  %+v", 400, o.Payload)
}

func (o *CreateMappingRuleBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateMappingRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMappingRuleConflict creates a CreateMappingRuleConflict with default headers values
func NewCreateMappingRuleConflict() *CreateMappingRuleConflict {
	return &CreateMappingRuleConflict{}
}

/*
CreateMappingRuleConflict describes a response with status code 409, with default header values.

Cannot create the MappingRule because there is a conflict with an existing MappingRule.
*/
type CreateMappingRuleConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create mapping rule conflict response has a 2xx status code
func (o *CreateMappingRuleConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create mapping rule conflict response has a 3xx status code
func (o *CreateMappingRuleConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mapping rule conflict response has a 4xx status code
func (o *CreateMappingRuleConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create mapping rule conflict response has a 5xx status code
func (o *CreateMappingRuleConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create mapping rule conflict response a status code equal to that given
func (o *CreateMappingRuleConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create mapping rule conflict response
func (o *CreateMappingRuleConflict) Code() int {
	return 409
}

func (o *CreateMappingRuleConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] createMappingRuleConflict  %+v", 409, o.Payload)
}

func (o *CreateMappingRuleConflict) String() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] createMappingRuleConflict  %+v", 409, o.Payload)
}

func (o *CreateMappingRuleConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateMappingRuleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMappingRuleInternalServerError creates a CreateMappingRuleInternalServerError with default headers values
func NewCreateMappingRuleInternalServerError() *CreateMappingRuleInternalServerError {
	return &CreateMappingRuleInternalServerError{}
}

/*
CreateMappingRuleInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateMappingRuleInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create mapping rule internal server error response has a 2xx status code
func (o *CreateMappingRuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create mapping rule internal server error response has a 3xx status code
func (o *CreateMappingRuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mapping rule internal server error response has a 4xx status code
func (o *CreateMappingRuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create mapping rule internal server error response has a 5xx status code
func (o *CreateMappingRuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create mapping rule internal server error response a status code equal to that given
func (o *CreateMappingRuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create mapping rule internal server error response
func (o *CreateMappingRuleInternalServerError) Code() int {
	return 500
}

func (o *CreateMappingRuleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] createMappingRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateMappingRuleInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] createMappingRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateMappingRuleInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateMappingRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMappingRuleDefault creates a CreateMappingRuleDefault with default headers values
func NewCreateMappingRuleDefault(code int) *CreateMappingRuleDefault {
	return &CreateMappingRuleDefault{
		_statusCode: code,
	}
}

/*
CreateMappingRuleDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateMappingRuleDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create mapping rule default response has a 2xx status code
func (o *CreateMappingRuleDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create mapping rule default response has a 3xx status code
func (o *CreateMappingRuleDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create mapping rule default response has a 4xx status code
func (o *CreateMappingRuleDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create mapping rule default response has a 5xx status code
func (o *CreateMappingRuleDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create mapping rule default response a status code equal to that given
func (o *CreateMappingRuleDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create mapping rule default response
func (o *CreateMappingRuleDefault) Code() int {
	return o._statusCode
}

func (o *CreateMappingRuleDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] CreateMappingRule default  %+v", o._statusCode, o.Payload)
}

func (o *CreateMappingRuleDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/config/mapping-rules][%d] CreateMappingRule default  %+v", o._statusCode, o.Payload)
}

func (o *CreateMappingRuleDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateMappingRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
