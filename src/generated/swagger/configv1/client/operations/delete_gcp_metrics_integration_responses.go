// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configv1/models"
)

// DeleteGcpMetricsIntegrationReader is a Reader for the DeleteGcpMetricsIntegration structure.
type DeleteGcpMetricsIntegrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGcpMetricsIntegrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteGcpMetricsIntegrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteGcpMetricsIntegrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGcpMetricsIntegrationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteGcpMetricsIntegrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteGcpMetricsIntegrationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteGcpMetricsIntegrationOK creates a DeleteGcpMetricsIntegrationOK with default headers values
func NewDeleteGcpMetricsIntegrationOK() *DeleteGcpMetricsIntegrationOK {
	return &DeleteGcpMetricsIntegrationOK{}
}

/*
DeleteGcpMetricsIntegrationOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteGcpMetricsIntegrationOK struct {
	Payload models.Configv1DeleteGcpMetricsIntegrationResponse
}

// IsSuccess returns true when this delete gcp metrics integration o k response has a 2xx status code
func (o *DeleteGcpMetricsIntegrationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete gcp metrics integration o k response has a 3xx status code
func (o *DeleteGcpMetricsIntegrationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gcp metrics integration o k response has a 4xx status code
func (o *DeleteGcpMetricsIntegrationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete gcp metrics integration o k response has a 5xx status code
func (o *DeleteGcpMetricsIntegrationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete gcp metrics integration o k response a status code equal to that given
func (o *DeleteGcpMetricsIntegrationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete gcp metrics integration o k response
func (o *DeleteGcpMetricsIntegrationOK) Code() int {
	return 200
}

func (o *DeleteGcpMetricsIntegrationOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] deleteGcpMetricsIntegrationOK  %+v", 200, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] deleteGcpMetricsIntegrationOK  %+v", 200, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationOK) GetPayload() models.Configv1DeleteGcpMetricsIntegrationResponse {
	return o.Payload
}

func (o *DeleteGcpMetricsIntegrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGcpMetricsIntegrationBadRequest creates a DeleteGcpMetricsIntegrationBadRequest with default headers values
func NewDeleteGcpMetricsIntegrationBadRequest() *DeleteGcpMetricsIntegrationBadRequest {
	return &DeleteGcpMetricsIntegrationBadRequest{}
}

/*
DeleteGcpMetricsIntegrationBadRequest describes a response with status code 400, with default header values.

Cannot delete the GcpMetricsIntegration because it is in use.
*/
type DeleteGcpMetricsIntegrationBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete gcp metrics integration bad request response has a 2xx status code
func (o *DeleteGcpMetricsIntegrationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete gcp metrics integration bad request response has a 3xx status code
func (o *DeleteGcpMetricsIntegrationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gcp metrics integration bad request response has a 4xx status code
func (o *DeleteGcpMetricsIntegrationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete gcp metrics integration bad request response has a 5xx status code
func (o *DeleteGcpMetricsIntegrationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete gcp metrics integration bad request response a status code equal to that given
func (o *DeleteGcpMetricsIntegrationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete gcp metrics integration bad request response
func (o *DeleteGcpMetricsIntegrationBadRequest) Code() int {
	return 400
}

func (o *DeleteGcpMetricsIntegrationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] deleteGcpMetricsIntegrationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] deleteGcpMetricsIntegrationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteGcpMetricsIntegrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGcpMetricsIntegrationNotFound creates a DeleteGcpMetricsIntegrationNotFound with default headers values
func NewDeleteGcpMetricsIntegrationNotFound() *DeleteGcpMetricsIntegrationNotFound {
	return &DeleteGcpMetricsIntegrationNotFound{}
}

/*
DeleteGcpMetricsIntegrationNotFound describes a response with status code 404, with default header values.

Cannot delete the GcpMetricsIntegration because the slug does not exist.
*/
type DeleteGcpMetricsIntegrationNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete gcp metrics integration not found response has a 2xx status code
func (o *DeleteGcpMetricsIntegrationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete gcp metrics integration not found response has a 3xx status code
func (o *DeleteGcpMetricsIntegrationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gcp metrics integration not found response has a 4xx status code
func (o *DeleteGcpMetricsIntegrationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete gcp metrics integration not found response has a 5xx status code
func (o *DeleteGcpMetricsIntegrationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete gcp metrics integration not found response a status code equal to that given
func (o *DeleteGcpMetricsIntegrationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete gcp metrics integration not found response
func (o *DeleteGcpMetricsIntegrationNotFound) Code() int {
	return 404
}

func (o *DeleteGcpMetricsIntegrationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] deleteGcpMetricsIntegrationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] deleteGcpMetricsIntegrationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteGcpMetricsIntegrationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGcpMetricsIntegrationInternalServerError creates a DeleteGcpMetricsIntegrationInternalServerError with default headers values
func NewDeleteGcpMetricsIntegrationInternalServerError() *DeleteGcpMetricsIntegrationInternalServerError {
	return &DeleteGcpMetricsIntegrationInternalServerError{}
}

/*
DeleteGcpMetricsIntegrationInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteGcpMetricsIntegrationInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete gcp metrics integration internal server error response has a 2xx status code
func (o *DeleteGcpMetricsIntegrationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete gcp metrics integration internal server error response has a 3xx status code
func (o *DeleteGcpMetricsIntegrationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gcp metrics integration internal server error response has a 4xx status code
func (o *DeleteGcpMetricsIntegrationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete gcp metrics integration internal server error response has a 5xx status code
func (o *DeleteGcpMetricsIntegrationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete gcp metrics integration internal server error response a status code equal to that given
func (o *DeleteGcpMetricsIntegrationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete gcp metrics integration internal server error response
func (o *DeleteGcpMetricsIntegrationInternalServerError) Code() int {
	return 500
}

func (o *DeleteGcpMetricsIntegrationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] deleteGcpMetricsIntegrationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] deleteGcpMetricsIntegrationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteGcpMetricsIntegrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGcpMetricsIntegrationDefault creates a DeleteGcpMetricsIntegrationDefault with default headers values
func NewDeleteGcpMetricsIntegrationDefault(code int) *DeleteGcpMetricsIntegrationDefault {
	return &DeleteGcpMetricsIntegrationDefault{
		_statusCode: code,
	}
}

/*
DeleteGcpMetricsIntegrationDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteGcpMetricsIntegrationDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete gcp metrics integration default response has a 2xx status code
func (o *DeleteGcpMetricsIntegrationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete gcp metrics integration default response has a 3xx status code
func (o *DeleteGcpMetricsIntegrationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete gcp metrics integration default response has a 4xx status code
func (o *DeleteGcpMetricsIntegrationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete gcp metrics integration default response has a 5xx status code
func (o *DeleteGcpMetricsIntegrationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete gcp metrics integration default response a status code equal to that given
func (o *DeleteGcpMetricsIntegrationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete gcp metrics integration default response
func (o *DeleteGcpMetricsIntegrationDefault) Code() int {
	return o._statusCode
}

func (o *DeleteGcpMetricsIntegrationDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] DeleteGcpMetricsIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v1/config/gcp-metrics-integrations/{slug}][%d] DeleteGcpMetricsIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteGcpMetricsIntegrationDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteGcpMetricsIntegrationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
