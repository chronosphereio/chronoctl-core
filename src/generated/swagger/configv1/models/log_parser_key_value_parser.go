// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LogParserKeyValueParser A parser to extract key/value pairs from a string.
// If duplicate keys are found, the first instance is used.
//
// swagger:model LogParserKeyValueParser
type LogParserKeyValueParser struct {

	// The string for splitting each pair into its key and value.
	PairSeparator string `json:"pair_separator,omitempty"`

	// The string for splitting the input into key/value pairs.
	Delimiter string `json:"delimiter,omitempty"`

	// Specifies the code points of any Unicode characters to trim from the
	// beginning and end of keys and values.
	TrimSet string `json:"trim_set,omitempty"`
}

// Validate validates this log parser key value parser
func (m *LogParserKeyValueParser) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this log parser key value parser based on context it is used
func (m *LogParserKeyValueParser) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LogParserKeyValueParser) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LogParserKeyValueParser) UnmarshalBinary(b []byte) error {
	var res LogParserKeyValueParser
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
