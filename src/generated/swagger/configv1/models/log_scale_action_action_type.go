// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LogScaleActionActionType log scale action action type
//
// swagger:model LogScaleActionActionType
type LogScaleActionActionType string

func NewLogScaleActionActionType(value LogScaleActionActionType) *LogScaleActionActionType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated LogScaleActionActionType.
func (m LogScaleActionActionType) Pointer() *LogScaleActionActionType {
	return &m
}

const (

	// LogScaleActionActionTypeEMAIL captures enum value "EMAIL"
	LogScaleActionActionTypeEMAIL LogScaleActionActionType = "EMAIL"

	// LogScaleActionActionTypeHUMIOREPO captures enum value "HUMIO_REPO"
	LogScaleActionActionTypeHUMIOREPO LogScaleActionActionType = "HUMIO_REPO"

	// LogScaleActionActionTypeOPSGENIE captures enum value "OPS_GENIE"
	LogScaleActionActionTypeOPSGENIE LogScaleActionActionType = "OPS_GENIE"

	// LogScaleActionActionTypePAGERDUTY captures enum value "PAGER_DUTY"
	LogScaleActionActionTypePAGERDUTY LogScaleActionActionType = "PAGER_DUTY"

	// LogScaleActionActionTypeSLACK captures enum value "SLACK"
	LogScaleActionActionTypeSLACK LogScaleActionActionType = "SLACK"

	// LogScaleActionActionTypeSLACKPOSTMESSAGE captures enum value "SLACK_POST_MESSAGE"
	LogScaleActionActionTypeSLACKPOSTMESSAGE LogScaleActionActionType = "SLACK_POST_MESSAGE"

	// LogScaleActionActionTypeVICTOROPS captures enum value "VICTOR_OPS"
	LogScaleActionActionTypeVICTOROPS LogScaleActionActionType = "VICTOR_OPS"

	// LogScaleActionActionTypeWEBHOOK captures enum value "WEBHOOK"
	LogScaleActionActionTypeWEBHOOK LogScaleActionActionType = "WEBHOOK"

	// LogScaleActionActionTypeUPLOADFILE captures enum value "UPLOAD_FILE"
	LogScaleActionActionTypeUPLOADFILE LogScaleActionActionType = "UPLOAD_FILE"
)

// for schema
var logScaleActionActionTypeEnum []interface{}

func init() {
	var res []LogScaleActionActionType
	if err := json.Unmarshal([]byte(`["EMAIL","HUMIO_REPO","OPS_GENIE","PAGER_DUTY","SLACK","SLACK_POST_MESSAGE","VICTOR_OPS","WEBHOOK","UPLOAD_FILE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		logScaleActionActionTypeEnum = append(logScaleActionActionTypeEnum, v)
	}
}

func (m LogScaleActionActionType) validateLogScaleActionActionTypeEnum(path, location string, value LogScaleActionActionType) error {
	if err := validate.EnumCase(path, location, value, logScaleActionActionTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this log scale action action type
func (m LogScaleActionActionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLogScaleActionActionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this log scale action action type based on context it is used
func (m LogScaleActionActionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
