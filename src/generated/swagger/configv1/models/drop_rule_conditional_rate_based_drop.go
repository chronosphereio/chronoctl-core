// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DropRuleConditionalRateBasedDrop drop rule conditional rate based drop
//
// swagger:model DropRuleConditionalRateBasedDrop
type DropRuleConditionalRateBasedDrop struct {

	// Enables rate-based metric dropping.
	Enabled bool `json:"enabled,omitempty"`

	// Percentage of the licensed limit reached in order to activate the drop
	// rule, between 0 and 100.
	RateLimitThreshold float64 `json:"rate_limit_threshold,omitempty"`

	// Once activated, activated_drop_duration_secs defines how long the drop
	// rule stays activated before rechecking against the rate_limit_threshold.
	ActivatedDropDurationSecs int32 `json:"activated_drop_duration_secs,omitempty"`
}

// Validate validates this drop rule conditional rate based drop
func (m *DropRuleConditionalRateBasedDrop) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this drop rule conditional rate based drop based on context it is used
func (m *DropRuleConditionalRateBasedDrop) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DropRuleConditionalRateBasedDrop) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DropRuleConditionalRateBasedDrop) UnmarshalBinary(b []byte) error {
	var res DropRuleConditionalRateBasedDrop
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
