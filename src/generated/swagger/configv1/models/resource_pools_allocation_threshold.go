// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ResourcePoolsAllocationThreshold resource pools allocation threshold
//
// swagger:model ResourcePoolsAllocationThreshold
type ResourcePoolsAllocationThreshold struct {

	// Threshold expressed as a percent of the license allocated to a pool. A value
	// of `100` represents a threshold that is the pool's full allocation. Values
	// over `100` indicate thresholds that exceed the pool's allocation. For
	// example, a value of `50` represents a threshold that is half the pool's
	// allocation, and a value of `200` represents a threshold that is double the
	// pool's allocation.
	PercentOfPoolAllocation float64 `json:"percent_of_pool_allocation,omitempty"`

	// Threshold expressed as a fixed value of the license.
	FixedValue string `json:"fixed_value,omitempty"`
}

// Validate validates this resource pools allocation threshold
func (m *ResourcePoolsAllocationThreshold) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this resource pools allocation threshold based on context it is used
func (m *ResourcePoolsAllocationThreshold) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResourcePoolsAllocationThreshold) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourcePoolsAllocationThreshold) UnmarshalBinary(b []byte) error {
	var res ResourcePoolsAllocationThreshold
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
