// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RollupRuleMetricType  - CUMULATIVE_COUNTER: Alias of COUNTER.
//   - DELTA_COUNTER: Alias of DELTA.
//
// swagger:model RollupRuleMetricType
type RollupRuleMetricType string

func NewRollupRuleMetricType(value RollupRuleMetricType) *RollupRuleMetricType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated RollupRuleMetricType.
func (m RollupRuleMetricType) Pointer() *RollupRuleMetricType {
	return &m
}

const (

	// RollupRuleMetricTypeCOUNTER captures enum value "COUNTER"
	RollupRuleMetricTypeCOUNTER RollupRuleMetricType = "COUNTER"

	// RollupRuleMetricTypeGAUGE captures enum value "GAUGE"
	RollupRuleMetricTypeGAUGE RollupRuleMetricType = "GAUGE"

	// RollupRuleMetricTypeDELTA captures enum value "DELTA"
	RollupRuleMetricTypeDELTA RollupRuleMetricType = "DELTA"

	// RollupRuleMetricTypeDISTRIBUTION captures enum value "DISTRIBUTION"
	RollupRuleMetricTypeDISTRIBUTION RollupRuleMetricType = "DISTRIBUTION"

	// RollupRuleMetricTypeCUMULATIVEEXPONENTIALHISTOGRAM captures enum value "CUMULATIVE_EXPONENTIAL_HISTOGRAM"
	RollupRuleMetricTypeCUMULATIVEEXPONENTIALHISTOGRAM RollupRuleMetricType = "CUMULATIVE_EXPONENTIAL_HISTOGRAM"

	// RollupRuleMetricTypeMEASUREMENT captures enum value "MEASUREMENT"
	RollupRuleMetricTypeMEASUREMENT RollupRuleMetricType = "MEASUREMENT"

	// RollupRuleMetricTypeCUMULATIVECOUNTER captures enum value "CUMULATIVE_COUNTER"
	RollupRuleMetricTypeCUMULATIVECOUNTER RollupRuleMetricType = "CUMULATIVE_COUNTER"

	// RollupRuleMetricTypeDELTACOUNTER captures enum value "DELTA_COUNTER"
	RollupRuleMetricTypeDELTACOUNTER RollupRuleMetricType = "DELTA_COUNTER"

	// RollupRuleMetricTypeDELTAEXPONENTIALHISTOGRAM captures enum value "DELTA_EXPONENTIAL_HISTOGRAM"
	RollupRuleMetricTypeDELTAEXPONENTIALHISTOGRAM RollupRuleMetricType = "DELTA_EXPONENTIAL_HISTOGRAM"
)

// for schema
var rollupRuleMetricTypeEnum []interface{}

func init() {
	var res []RollupRuleMetricType
	if err := json.Unmarshal([]byte(`["COUNTER","GAUGE","DELTA","DISTRIBUTION","CUMULATIVE_EXPONENTIAL_HISTOGRAM","MEASUREMENT","CUMULATIVE_COUNTER","DELTA_COUNTER","DELTA_EXPONENTIAL_HISTOGRAM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		rollupRuleMetricTypeEnum = append(rollupRuleMetricTypeEnum, v)
	}
}

func (m RollupRuleMetricType) validateRollupRuleMetricTypeEnum(path, location string, value RollupRuleMetricType) error {
	if err := validate.EnumCase(path, location, value, rollupRuleMetricTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this rollup rule metric type
func (m RollupRuleMetricType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRollupRuleMetricTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this rollup rule metric type based on context it is used
func (m RollupRuleMetricType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
