// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OtelMetricsIngestionResourceAttributes otel metrics ingestion resource attributes
//
// swagger:model OtelMetricsIngestionResourceAttributes
type OtelMetricsIngestionResourceAttributes struct {

	// flatten mode
	FlattenMode ResourceAttributesFlattenMode `json:"flatten_mode,omitempty"`

	// filter mode
	FilterMode ResourceAttributesFilterMode `json:"filter_mode,omitempty"`

	// Do not copy any resource attribute whose key exactly matches one of the
	// strings in this list.
	ExcludeKeys []string `json:"exclude_keys"`

	// Generate a target_info time series with labels derived from resource
	// attributes. The filter_mode and exclude_keys settings apply in the same way as
	// for the "flatten" operation. The default is false.
	GenerateTargetInfo bool `json:"generate_target_info,omitempty"`
}

// Validate validates this otel metrics ingestion resource attributes
func (m *OtelMetricsIngestionResourceAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFlattenMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFilterMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelMetricsIngestionResourceAttributes) validateFlattenMode(formats strfmt.Registry) error {
	if swag.IsZero(m.FlattenMode) { // not required
		return nil
	}

	if err := m.FlattenMode.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("flatten_mode")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("flatten_mode")
		}
		return err
	}

	return nil
}

func (m *OtelMetricsIngestionResourceAttributes) validateFilterMode(formats strfmt.Registry) error {
	if swag.IsZero(m.FilterMode) { // not required
		return nil
	}

	if err := m.FilterMode.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("filter_mode")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("filter_mode")
		}
		return err
	}

	return nil
}

// ContextValidate validate this otel metrics ingestion resource attributes based on the context it is used
func (m *OtelMetricsIngestionResourceAttributes) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateFlattenMode(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateFilterMode(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelMetricsIngestionResourceAttributes) contextValidateFlattenMode(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(m.FlattenMode) { // not required
		return nil
	}

	if err := m.FlattenMode.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("flatten_mode")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("flatten_mode")
		}
		return err
	}

	return nil
}

func (m *OtelMetricsIngestionResourceAttributes) contextValidateFilterMode(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(m.FilterMode) { // not required
		return nil
	}

	if err := m.FilterMode.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("filter_mode")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("filter_mode")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OtelMetricsIngestionResourceAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OtelMetricsIngestionResourceAttributes) UnmarshalBinary(b []byte) error {
	var res OtelMetricsIngestionResourceAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
