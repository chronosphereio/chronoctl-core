// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NotifierEmailConfig notifier email config
//
// swagger:model NotifierEmailConfig
type NotifierEmailConfig struct {

	// The email address to send notifications to. Required if including an
	// `email` object in your request body.
	To string `json:"to,omitempty"`

	// The body of the email to send, in HTML format.
	HTML string `json:"html,omitempty"`

	// The body of the email to send, in plain text format.
	Text string `json:"text,omitempty"`
}

// Validate validates this notifier email config
func (m *NotifierEmailConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this notifier email config based on context it is used
func (m *NotifierEmailConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NotifierEmailConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NotifierEmailConfig) UnmarshalBinary(b []byte) error {
	var res NotifierEmailConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
