// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DefinitionBurnRateDefinition definition burn rate definition
//
// swagger:model DefinitionBurnRateDefinition
type DefinitionBurnRateDefinition struct {

	// window
	Window string `json:"window,omitempty"`

	// budget defines the amount of errors that are allowed during a given
	// time window. It is a value between 0.0 and 100.0 exclusive.
	Budget float64 `json:"budget,omitempty"`

	// Severity may only be one of: critical, warn.
	// This is also a string in the monitor schema
	Severity string `json:"severity,omitempty"`

	// labels to attach to the burn rate alerts.
	Labels map[string]string `json:"labels,omitempty"`
}

// Validate validates this definition burn rate definition
func (m *DefinitionBurnRateDefinition) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this definition burn rate definition based on context it is used
func (m *DefinitionBurnRateDefinition) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DefinitionBurnRateDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DefinitionBurnRateDefinition) UnmarshalBinary(b []byte) error {
	var res DefinitionBurnRateDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
