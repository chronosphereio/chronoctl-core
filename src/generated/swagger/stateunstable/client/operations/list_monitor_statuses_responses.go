// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/stateunstable/models"
)

// ListMonitorStatusesReader is a Reader for the ListMonitorStatuses structure.
type ListMonitorStatusesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMonitorStatusesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListMonitorStatusesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListMonitorStatusesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListMonitorStatusesOK creates a ListMonitorStatusesOK with default headers values
func NewListMonitorStatusesOK() *ListMonitorStatusesOK {
	return &ListMonitorStatusesOK{}
}

/*
ListMonitorStatusesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListMonitorStatusesOK struct {
	Payload *models.StateunstableListMonitorStatusesResponse
}

// IsSuccess returns true when this list monitor statuses o k response has a 2xx status code
func (o *ListMonitorStatusesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list monitor statuses o k response has a 3xx status code
func (o *ListMonitorStatusesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list monitor statuses o k response has a 4xx status code
func (o *ListMonitorStatusesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list monitor statuses o k response has a 5xx status code
func (o *ListMonitorStatusesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list monitor statuses o k response a status code equal to that given
func (o *ListMonitorStatusesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list monitor statuses o k response
func (o *ListMonitorStatusesOK) Code() int {
	return 200
}

func (o *ListMonitorStatusesOK) Error() string {
	return fmt.Sprintf("[GET /api/unstable/state/monitors-statuses][%d] listMonitorStatusesOK  %+v", 200, o.Payload)
}

func (o *ListMonitorStatusesOK) String() string {
	return fmt.Sprintf("[GET /api/unstable/state/monitors-statuses][%d] listMonitorStatusesOK  %+v", 200, o.Payload)
}

func (o *ListMonitorStatusesOK) GetPayload() *models.StateunstableListMonitorStatusesResponse {
	return o.Payload
}

func (o *ListMonitorStatusesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StateunstableListMonitorStatusesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMonitorStatusesDefault creates a ListMonitorStatusesDefault with default headers values
func NewListMonitorStatusesDefault(code int) *ListMonitorStatusesDefault {
	return &ListMonitorStatusesDefault{
		_statusCode: code,
	}
}

/*
ListMonitorStatusesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListMonitorStatusesDefault struct {
	_statusCode int

	Payload *models.APIError
}

// IsSuccess returns true when this list monitor statuses default response has a 2xx status code
func (o *ListMonitorStatusesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list monitor statuses default response has a 3xx status code
func (o *ListMonitorStatusesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list monitor statuses default response has a 4xx status code
func (o *ListMonitorStatusesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list monitor statuses default response has a 5xx status code
func (o *ListMonitorStatusesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list monitor statuses default response a status code equal to that given
func (o *ListMonitorStatusesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list monitor statuses default response
func (o *ListMonitorStatusesDefault) Code() int {
	return o._statusCode
}

func (o *ListMonitorStatusesDefault) Error() string {
	return fmt.Sprintf("[GET /api/unstable/state/monitors-statuses][%d] ListMonitorStatuses default  %+v", o._statusCode, o.Payload)
}

func (o *ListMonitorStatusesDefault) String() string {
	return fmt.Sprintf("[GET /api/unstable/state/monitors-statuses][%d] ListMonitorStatuses default  %+v", o._statusCode, o.Payload)
}

func (o *ListMonitorStatusesDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ListMonitorStatusesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
