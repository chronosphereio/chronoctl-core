// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StateunstableAlertingState  - ALERTING_STATE_PASS: Monitor is not triggered.
//   - ALERTING_STATE_PENDING: Monitor is triggered but not yet alerting.
//   - ALERTING_STATE_ALERTING: Monitor is triggered and alerting.
//   - ALERTING_STATE_MUTED: Monitor is triggered but is muted.
//
// swagger:model stateunstableAlertingState
type StateunstableAlertingState string

func NewStateunstableAlertingState(value StateunstableAlertingState) *StateunstableAlertingState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated StateunstableAlertingState.
func (m StateunstableAlertingState) Pointer() *StateunstableAlertingState {
	return &m
}

const (

	// StateunstableAlertingStateALERTINGSTATEPASS captures enum value "ALERTING_STATE_PASS"
	StateunstableAlertingStateALERTINGSTATEPASS StateunstableAlertingState = "ALERTING_STATE_PASS"

	// StateunstableAlertingStateALERTINGSTATEPENDING captures enum value "ALERTING_STATE_PENDING"
	StateunstableAlertingStateALERTINGSTATEPENDING StateunstableAlertingState = "ALERTING_STATE_PENDING"

	// StateunstableAlertingStateALERTINGSTATEALERTING captures enum value "ALERTING_STATE_ALERTING"
	StateunstableAlertingStateALERTINGSTATEALERTING StateunstableAlertingState = "ALERTING_STATE_ALERTING"

	// StateunstableAlertingStateALERTINGSTATEMUTED captures enum value "ALERTING_STATE_MUTED"
	StateunstableAlertingStateALERTINGSTATEMUTED StateunstableAlertingState = "ALERTING_STATE_MUTED"
)

// for schema
var stateunstableAlertingStateEnum []interface{}

func init() {
	var res []StateunstableAlertingState
	if err := json.Unmarshal([]byte(`["ALERTING_STATE_PASS","ALERTING_STATE_PENDING","ALERTING_STATE_ALERTING","ALERTING_STATE_MUTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		stateunstableAlertingStateEnum = append(stateunstableAlertingStateEnum, v)
	}
}

func (m StateunstableAlertingState) validateStateunstableAlertingStateEnum(path, location string, value StateunstableAlertingState) error {
	if err := validate.EnumCase(path, location, value, stateunstableAlertingStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this stateunstable alerting state
func (m StateunstableAlertingState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStateunstableAlertingStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this stateunstable alerting state based on context it is used
func (m StateunstableAlertingState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
