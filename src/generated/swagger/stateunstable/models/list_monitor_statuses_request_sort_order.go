// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ListMonitorStatusesRequestSortOrder list monitor statuses request sort order
//
// swagger:model ListMonitorStatusesRequestSortOrder
type ListMonitorStatusesRequestSortOrder string

func NewListMonitorStatusesRequestSortOrder(value ListMonitorStatusesRequestSortOrder) *ListMonitorStatusesRequestSortOrder {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ListMonitorStatusesRequestSortOrder.
func (m ListMonitorStatusesRequestSortOrder) Pointer() *ListMonitorStatusesRequestSortOrder {
	return &m
}

const (

	// ListMonitorStatusesRequestSortOrderSORTBYSTATE captures enum value "SORT_BY_STATE"
	ListMonitorStatusesRequestSortOrderSORTBYSTATE ListMonitorStatusesRequestSortOrder = "SORT_BY_STATE"
)

// for schema
var listMonitorStatusesRequestSortOrderEnum []interface{}

func init() {
	var res []ListMonitorStatusesRequestSortOrder
	if err := json.Unmarshal([]byte(`["SORT_BY_STATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listMonitorStatusesRequestSortOrderEnum = append(listMonitorStatusesRequestSortOrderEnum, v)
	}
}

func (m ListMonitorStatusesRequestSortOrder) validateListMonitorStatusesRequestSortOrderEnum(path, location string, value ListMonitorStatusesRequestSortOrder) error {
	if err := validate.EnumCase(path, location, value, listMonitorStatusesRequestSortOrderEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this list monitor statuses request sort order
func (m ListMonitorStatusesRequestSortOrder) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateListMonitorStatusesRequestSortOrderEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this list monitor statuses request sort order based on context it is used
func (m ListMonitorStatusesRequestSortOrder) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
