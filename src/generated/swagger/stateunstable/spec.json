{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "MetricUsageOrderBy": {
      "enum": [
        "VALUABLE",
        "DPPS",
        "UTILITY",
        "REFERENCES",
        "EXECUTIONS",
        "UNIQUE_VALUES",
        "UNIQUE_USERS"
      ],
      "type": "string"
    },
    "MetricUsageQueryExecutionCountsByType": {
      "properties": {
        "explorer": {
          "format": "int32",
          "type": "integer"
        },
        "dashboard": {
          "format": "int32",
          "type": "integer"
        },
        "external": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MetricUsageReferenceCountsByType": {
      "properties": {
        "dashboards": {
          "format": "int32",
          "type": "integer"
        },
        "monitors": {
          "format": "int32",
          "type": "integer"
        },
        "recording_rules": {
          "format": "int32",
          "type": "integer"
        },
        "drop_rules": {
          "format": "int32",
          "type": "integer"
        },
        "aggregation_rules": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "apiError": {
      "properties": {
        "code": {
          "description": "An optional private error code whose values are undefined.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "An error message describing what went wrong.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "configv1PageParams": {
      "properties": {
        "max_size": {
          "description": "Page size preference (i.e. how many items are returned in the next\npage). If zero, the server will use a default. Regardless of what size\nis given, clients must never assume how many items will be returned.",
          "format": "int64",
          "type": "integer"
        },
        "token": {
          "description": "Opaque page token identifying which page to request. An empty token\nidentifies the first page.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "configv1PageResult": {
      "properties": {
        "next_token": {
          "description": "Opaque page token which identifies the next page of items which the\nclient should request. An empty next_token indicates that there are no\nmore items to return.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "genericError": {
      "additionalProperties": true,
      "type": "object"
    },
    "protobufAny": {
      "additionalProperties": {},
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "stateunstableEchoResponse": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "stateunstableListMetricUsagesByLabelNameResponse": {
      "properties": {
        "page": {
          "$ref": "#/definitions/configv1PageResult"
        },
        "usages": {
          "items": {
            "$ref": "#/definitions/stateunstableMetricUsageByLabelName"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "stateunstableListMetricUsagesByMetricNameResponse": {
      "properties": {
        "page": {
          "$ref": "#/definitions/configv1PageResult"
        },
        "usages": {
          "items": {
            "$ref": "#/definitions/stateunstableMetricUsageByMetricName"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "stateunstableMetricUsage": {
      "properties": {
        "total_references": {
          "format": "int32",
          "type": "integer"
        },
        "total_query_executions": {
          "format": "int32",
          "type": "integer"
        },
        "total_unique_users": {
          "format": "int32",
          "type": "integer"
        },
        "utility_score": {
          "format": "double",
          "type": "number"
        },
        "reference_counts_by_type": {
          "$ref": "#/definitions/MetricUsageReferenceCountsByType"
        },
        "query_execution_counts_by_type": {
          "$ref": "#/definitions/MetricUsageQueryExecutionCountsByType"
        }
      },
      "type": "object"
    },
    "stateunstableMetricUsageByLabelName": {
      "properties": {
        "label_name": {
          "type": "string"
        },
        "usage": {
          "$ref": "#/definitions/stateunstableMetricUsage"
        },
        "total_unique_values": {
          "format": "int32",
          "type": "integer"
        },
        "dpps": {
          "format": "double",
          "type": "number"
        },
        "percent_of_series_with_label_name": {
          "description": "Percent of persisted series observed to have the label name.\nReturns in format: [0.0, 100.0]",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "stateunstableMetricUsageByMetricName": {
      "properties": {
        "metric_name": {
          "type": "string"
        },
        "usage": {
          "$ref": "#/definitions/stateunstableMetricUsage"
        },
        "cardinality": {
          "format": "int32",
          "type": "integer"
        },
        "dpps": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "stateunstableMetricUsageOrder": {
      "properties": {
        "ascending": {
          "type": "boolean"
        },
        "by": {
          "$ref": "#/definitions/MetricUsageOrderBy"
        }
      },
      "type": "object"
    }
  },
  "info": {
    "description": "\n\u003cb\u003eWARNING: This API is unstable and is meant for experimentation only. Do not\nuse this API in production. The endpoints and schemas referenced in this\ndocumentation will be changed or removed without notice and without any\nbackwards compatibility guarantee. Note that even though this API is unstable,\nit is still connected to production data, so use with caution.\u003c/b\u003e",
    "title": "State Unstable API",
    "version": "UNSTABLE"
  },
  "paths": {
    "/api/unstable/data/echo": {
      "get": {
        "operationId": "Echo",
        "parameters": [
          {
            "in": "query",
            "name": "message",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/stateunstableEchoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "tags": [
          "StateUnstable"
        ]
      }
    },
    "/api/v1/state/metric-usages-by-label-name": {
      "get": {
        "operationId": "ListMetricUsagesByLabelName",
        "parameters": [
          {
            "description": "Page size preference (i.e. how many items are returned in the next\npage). If zero, the server will use a default. Regardless of what size\nis given, clients must never assume how many items will be returned.",
            "format": "int64",
            "in": "query",
            "name": "page.max_size",
            "type": "integer"
          },
          {
            "description": "Opaque page token identifying which page to request. An empty token\nidentifies the first page.",
            "in": "query",
            "name": "page.token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "order.ascending",
            "type": "boolean"
          },
          {
            "enum": [
              "VALUABLE",
              "DPPS",
              "UTILITY",
              "REFERENCES",
              "EXECUTIONS",
              "UNIQUE_VALUES",
              "UNIQUE_USERS"
            ],
            "in": "query",
            "name": "order.by",
            "type": "string"
          },
          {
            "description": "lookback_secs controls the time range from now over which query executions are included in usages.",
            "format": "int32",
            "in": "query",
            "name": "lookback_secs",
            "type": "integer"
          },
          {
            "description": "label_name_glob is a glob match string to filter results by label name.",
            "in": "query",
            "name": "label_name_glob",
            "type": "string"
          },
          {
            "description": "include_counts_by_type if true response will include the fields `reference_counts_by_type` and `query_execution_counts_by_type`.\notherwise these fields are returned empty.",
            "in": "query",
            "name": "include_counts_by_type",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/stateunstableListMetricUsagesByLabelNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "tags": [
          "StateUnstable"
        ]
      }
    },
    "/api/v1/state/metric-usages-by-metric-name": {
      "get": {
        "operationId": "ListMetricUsagesByMetricName",
        "parameters": [
          {
            "description": "Page size preference (i.e. how many items are returned in the next\npage). If zero, the server will use a default. Regardless of what size\nis given, clients must never assume how many items will be returned.",
            "format": "int64",
            "in": "query",
            "name": "page.max_size",
            "type": "integer"
          },
          {
            "description": "Opaque page token identifying which page to request. An empty token\nidentifies the first page.",
            "in": "query",
            "name": "page.token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "order.ascending",
            "type": "boolean"
          },
          {
            "enum": [
              "VALUABLE",
              "DPPS",
              "UTILITY",
              "REFERENCES",
              "EXECUTIONS",
              "UNIQUE_VALUES",
              "UNIQUE_USERS"
            ],
            "in": "query",
            "name": "order.by",
            "type": "string"
          },
          {
            "description": "lookback_secs controls the time range from now over which query executions are included in usages.",
            "format": "int32",
            "in": "query",
            "name": "lookback_secs",
            "type": "integer"
          },
          {
            "description": "metric_name_glob is a glob match string to filter results by metric name.",
            "in": "query",
            "name": "metric_name_glob",
            "type": "string"
          },
          {
            "description": "include_counts_by_type if true response will include the fields `reference_counts_by_type` and `query_execution_counts_by_type`.\notherwise these fields are returned empty.",
            "in": "query",
            "name": "include_counts_by_type",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/stateunstableListMetricUsagesByMetricNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "tags": [
          "StateUnstable"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "name": "StateUnstable"
    }
  ]
}