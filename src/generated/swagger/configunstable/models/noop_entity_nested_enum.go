// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NoopEntityNestedEnum noop entity nested enum
//
// swagger:model NoopEntityNestedEnum
type NoopEntityNestedEnum string

func NewNoopEntityNestedEnum(value NoopEntityNestedEnum) *NoopEntityNestedEnum {
	return &value
}

// Pointer returns a pointer to a freshly-allocated NoopEntityNestedEnum.
func (m NoopEntityNestedEnum) Pointer() *NoopEntityNestedEnum {
	return &m
}

const (

	// NoopEntityNestedEnumENABLED captures enum value "ENABLED"
	NoopEntityNestedEnumENABLED NoopEntityNestedEnum = "ENABLED"
)

// for schema
var noopEntityNestedEnumEnum []interface{}

func init() {
	var res []NoopEntityNestedEnum
	if err := json.Unmarshal([]byte(`["ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		noopEntityNestedEnumEnum = append(noopEntityNestedEnumEnum, v)
	}
}

func (m NoopEntityNestedEnum) validateNoopEntityNestedEnumEnum(path, location string, value NoopEntityNestedEnum) error {
	if err := validate.EnumCase(path, location, value, noopEntityNestedEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this noop entity nested enum
func (m NoopEntityNestedEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateNoopEntityNestedEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this noop entity nested enum based on context it is used
func (m NoopEntityNestedEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
