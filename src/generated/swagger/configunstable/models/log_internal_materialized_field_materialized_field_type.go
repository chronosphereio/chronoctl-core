// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LogInternalMaterializedFieldMaterializedFieldType log internal materialized field materialized field type
//
// swagger:model LogInternalMaterializedFieldMaterializedFieldType
type LogInternalMaterializedFieldMaterializedFieldType string

func NewLogInternalMaterializedFieldMaterializedFieldType(value LogInternalMaterializedFieldMaterializedFieldType) *LogInternalMaterializedFieldMaterializedFieldType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated LogInternalMaterializedFieldMaterializedFieldType.
func (m LogInternalMaterializedFieldMaterializedFieldType) Pointer() *LogInternalMaterializedFieldMaterializedFieldType {
	return &m
}

const (

	// LogInternalMaterializedFieldMaterializedFieldTypeSTRING captures enum value "STRING"
	LogInternalMaterializedFieldMaterializedFieldTypeSTRING LogInternalMaterializedFieldMaterializedFieldType = "STRING"

	// LogInternalMaterializedFieldMaterializedFieldTypeLOWCARDINALITYSTRING captures enum value "LOW_CARDINALITY_STRING"
	LogInternalMaterializedFieldMaterializedFieldTypeLOWCARDINALITYSTRING LogInternalMaterializedFieldMaterializedFieldType = "LOW_CARDINALITY_STRING"

	// LogInternalMaterializedFieldMaterializedFieldTypeNUMBER captures enum value "NUMBER"
	LogInternalMaterializedFieldMaterializedFieldTypeNUMBER LogInternalMaterializedFieldMaterializedFieldType = "NUMBER"
)

// for schema
var logInternalMaterializedFieldMaterializedFieldTypeEnum []interface{}

func init() {
	var res []LogInternalMaterializedFieldMaterializedFieldType
	if err := json.Unmarshal([]byte(`["STRING","LOW_CARDINALITY_STRING","NUMBER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		logInternalMaterializedFieldMaterializedFieldTypeEnum = append(logInternalMaterializedFieldMaterializedFieldTypeEnum, v)
	}
}

func (m LogInternalMaterializedFieldMaterializedFieldType) validateLogInternalMaterializedFieldMaterializedFieldTypeEnum(path, location string, value LogInternalMaterializedFieldMaterializedFieldType) error {
	if err := validate.EnumCase(path, location, value, logInternalMaterializedFieldMaterializedFieldTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this log internal materialized field materialized field type
func (m LogInternalMaterializedFieldMaterializedFieldType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLogInternalMaterializedFieldMaterializedFieldTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this log internal materialized field materialized field type based on context it is used
func (m LogInternalMaterializedFieldMaterializedFieldType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
