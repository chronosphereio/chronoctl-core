// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BehaviorThresholdType behavior threshold type
//
// swagger:model BehaviorThresholdType
type BehaviorThresholdType string

func NewBehaviorThresholdType(value BehaviorThresholdType) *BehaviorThresholdType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated BehaviorThresholdType.
func (m BehaviorThresholdType) Pointer() *BehaviorThresholdType {
	return &m
}

const (

	// BehaviorThresholdTypeVOLUME captures enum value "VOLUME"
	BehaviorThresholdTypeVOLUME BehaviorThresholdType = "VOLUME"

	// BehaviorThresholdTypeINSTANTRATE captures enum value "INSTANT_RATE"
	BehaviorThresholdTypeINSTANTRATE BehaviorThresholdType = "INSTANT_RATE"
)

// for schema
var behaviorThresholdTypeEnum []interface{}

func init() {
	var res []BehaviorThresholdType
	if err := json.Unmarshal([]byte(`["VOLUME","INSTANT_RATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		behaviorThresholdTypeEnum = append(behaviorThresholdTypeEnum, v)
	}
}

func (m BehaviorThresholdType) validateBehaviorThresholdTypeEnum(path, location string, value BehaviorThresholdType) error {
	if err := validate.EnumCase(path, location, value, behaviorThresholdTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this behavior threshold type
func (m BehaviorThresholdType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBehaviorThresholdTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this behavior threshold type based on context it is used
func (m BehaviorThresholdType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
