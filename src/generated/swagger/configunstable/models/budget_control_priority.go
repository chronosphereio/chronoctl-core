// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BudgetControlPriority budget control priority
//
// swagger:model BudgetControlPriority
type BudgetControlPriority string

func NewBudgetControlPriority(value BudgetControlPriority) *BudgetControlPriority {
	return &value
}

// Pointer returns a pointer to a freshly-allocated BudgetControlPriority.
func (m BudgetControlPriority) Pointer() *BudgetControlPriority {
	return &m
}

const (

	// BudgetControlPriorityLOW captures enum value "LOW"
	BudgetControlPriorityLOW BudgetControlPriority = "LOW"

	// BudgetControlPriorityDEFAULT captures enum value "DEFAULT"
	BudgetControlPriorityDEFAULT BudgetControlPriority = "DEFAULT"

	// BudgetControlPriorityHIGH captures enum value "HIGH"
	BudgetControlPriorityHIGH BudgetControlPriority = "HIGH"
)

// for schema
var budgetControlPriorityEnum []interface{}

func init() {
	var res []BudgetControlPriority
	if err := json.Unmarshal([]byte(`["LOW","DEFAULT","HIGH"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		budgetControlPriorityEnum = append(budgetControlPriorityEnum, v)
	}
}

func (m BudgetControlPriority) validateBudgetControlPriorityEnum(path, location string, value BudgetControlPriority) error {
	if err := validate.EnumCase(path, location, value, budgetControlPriorityEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this budget control priority
func (m BudgetControlPriority) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBudgetControlPriorityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this budget control priority based on context it is used
func (m BudgetControlPriority) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
