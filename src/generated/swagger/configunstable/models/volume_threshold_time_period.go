// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VolumeThresholdTimePeriod volume threshold time period
//
// swagger:model VolumeThresholdTimePeriod
type VolumeThresholdTimePeriod string

func NewVolumeThresholdTimePeriod(value VolumeThresholdTimePeriod) *VolumeThresholdTimePeriod {
	return &value
}

// Pointer returns a pointer to a freshly-allocated VolumeThresholdTimePeriod.
func (m VolumeThresholdTimePeriod) Pointer() *VolumeThresholdTimePeriod {
	return &m
}

const (

	// VolumeThresholdTimePeriodDAILY captures enum value "DAILY"
	VolumeThresholdTimePeriodDAILY VolumeThresholdTimePeriod = "DAILY"

	// VolumeThresholdTimePeriodWEEKLY captures enum value "WEEKLY"
	VolumeThresholdTimePeriodWEEKLY VolumeThresholdTimePeriod = "WEEKLY"

	// VolumeThresholdTimePeriodMONTHLY captures enum value "MONTHLY"
	VolumeThresholdTimePeriodMONTHLY VolumeThresholdTimePeriod = "MONTHLY"
)

// for schema
var volumeThresholdTimePeriodEnum []interface{}

func init() {
	var res []VolumeThresholdTimePeriod
	if err := json.Unmarshal([]byte(`["DAILY","WEEKLY","MONTHLY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		volumeThresholdTimePeriodEnum = append(volumeThresholdTimePeriodEnum, v)
	}
}

func (m VolumeThresholdTimePeriod) validateVolumeThresholdTimePeriodEnum(path, location string, value VolumeThresholdTimePeriod) error {
	if err := validate.EnumCase(path, location, value, volumeThresholdTimePeriodEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this volume threshold time period
func (m VolumeThresholdTimePeriod) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVolumeThresholdTimePeriodEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this volume threshold time period based on context it is used
func (m VolumeThresholdTimePeriod) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
