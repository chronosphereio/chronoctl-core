// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConsumptionBudgetPriorityFilter consumption budget priority filter
//
// swagger:model ConsumptionBudgetPriorityFilter
type ConsumptionBudgetPriorityFilter struct {

	// If set, matches data which belongs to the given dataset. Cannot set if
	// log_filter is set. The dataset type must match the budget resource
	// (e.g. type=LOGS for resource=LOG_PERSISTED_BYTES).
	DatasetSlug string `json:"dataset_slug,omitempty"`

	// log filter
	LogFilter *Configv1LogSearchFilter `json:"log_filter,omitempty"`
}

// Validate validates this consumption budget priority filter
func (m *ConsumptionBudgetPriorityFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLogFilter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConsumptionBudgetPriorityFilter) validateLogFilter(formats strfmt.Registry) error {
	if swag.IsZero(m.LogFilter) { // not required
		return nil
	}

	if m.LogFilter != nil {
		if err := m.LogFilter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("log_filter")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("log_filter")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this consumption budget priority filter based on the context it is used
func (m *ConsumptionBudgetPriorityFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateLogFilter(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConsumptionBudgetPriorityFilter) contextValidateLogFilter(ctx context.Context, formats strfmt.Registry) error {

	if m.LogFilter != nil {

		if swag.IsZero(m.LogFilter) { // not required
			return nil
		}

		if err := m.LogFilter.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("log_filter")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("log_filter")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConsumptionBudgetPriorityFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConsumptionBudgetPriorityFilter) UnmarshalBinary(b []byte) error {
	var res ConsumptionBudgetPriorityFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
