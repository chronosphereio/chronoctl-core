// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RecurringBudgetResource recurring budget resource
//
// swagger:model RecurringBudgetResource
type RecurringBudgetResource string

func NewRecurringBudgetResource(value RecurringBudgetResource) *RecurringBudgetResource {
	return &value
}

// Pointer returns a pointer to a freshly-allocated RecurringBudgetResource.
func (m RecurringBudgetResource) Pointer() *RecurringBudgetResource {
	return &m
}

const (

	// RecurringBudgetResourceLOGPERSISTEDBYTES captures enum value "LOG_PERSISTED_BYTES"
	RecurringBudgetResourceLOGPERSISTEDBYTES RecurringBudgetResource = "LOG_PERSISTED_BYTES"
)

// for schema
var recurringBudgetResourceEnum []interface{}

func init() {
	var res []RecurringBudgetResource
	if err := json.Unmarshal([]byte(`["LOG_PERSISTED_BYTES"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		recurringBudgetResourceEnum = append(recurringBudgetResourceEnum, v)
	}
}

func (m RecurringBudgetResource) validateRecurringBudgetResourceEnum(path, location string, value RecurringBudgetResource) error {
	if err := validate.EnumCase(path, location, value, recurringBudgetResourceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this recurring budget resource
func (m RecurringBudgetResource) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRecurringBudgetResourceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this recurring budget resource based on context it is used
func (m RecurringBudgetResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
