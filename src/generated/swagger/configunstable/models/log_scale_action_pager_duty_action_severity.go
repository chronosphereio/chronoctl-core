// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LogScaleActionPagerDutyActionSeverity log scale action pager duty action severity
//
// swagger:model LogScaleActionPagerDutyActionSeverity
type LogScaleActionPagerDutyActionSeverity string

func NewLogScaleActionPagerDutyActionSeverity(value LogScaleActionPagerDutyActionSeverity) *LogScaleActionPagerDutyActionSeverity {
	return &value
}

// Pointer returns a pointer to a freshly-allocated LogScaleActionPagerDutyActionSeverity.
func (m LogScaleActionPagerDutyActionSeverity) Pointer() *LogScaleActionPagerDutyActionSeverity {
	return &m
}

const (

	// LogScaleActionPagerDutyActionSeverityCRITICAL captures enum value "CRITICAL"
	LogScaleActionPagerDutyActionSeverityCRITICAL LogScaleActionPagerDutyActionSeverity = "CRITICAL"

	// LogScaleActionPagerDutyActionSeverityERROR captures enum value "ERROR"
	LogScaleActionPagerDutyActionSeverityERROR LogScaleActionPagerDutyActionSeverity = "ERROR"

	// LogScaleActionPagerDutyActionSeverityWARNING captures enum value "WARNING"
	LogScaleActionPagerDutyActionSeverityWARNING LogScaleActionPagerDutyActionSeverity = "WARNING"

	// LogScaleActionPagerDutyActionSeverityINFO captures enum value "INFO"
	LogScaleActionPagerDutyActionSeverityINFO LogScaleActionPagerDutyActionSeverity = "INFO"
)

// for schema
var logScaleActionPagerDutyActionSeverityEnum []interface{}

func init() {
	var res []LogScaleActionPagerDutyActionSeverity
	if err := json.Unmarshal([]byte(`["CRITICAL","ERROR","WARNING","INFO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		logScaleActionPagerDutyActionSeverityEnum = append(logScaleActionPagerDutyActionSeverityEnum, v)
	}
}

func (m LogScaleActionPagerDutyActionSeverity) validateLogScaleActionPagerDutyActionSeverityEnum(path, location string, value LogScaleActionPagerDutyActionSeverity) error {
	if err := validate.EnumCase(path, location, value, logScaleActionPagerDutyActionSeverityEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this log scale action pager duty action severity
func (m LogScaleActionPagerDutyActionSeverity) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLogScaleActionPagerDutyActionSeverityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this log scale action pager duty action severity based on context it is used
func (m LogScaleActionPagerDutyActionSeverity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
