// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BudgetControlResource budget control resource
//
// swagger:model BudgetControlResource
type BudgetControlResource string

func NewBudgetControlResource(value BudgetControlResource) *BudgetControlResource {
	return &value
}

// Pointer returns a pointer to a freshly-allocated BudgetControlResource.
func (m BudgetControlResource) Pointer() *BudgetControlResource {
	return &m
}

const (

	// BudgetControlResourceMATCHEDWRITESSTANDARD captures enum value "MATCHED_WRITES_STANDARD"
	BudgetControlResourceMATCHEDWRITESSTANDARD BudgetControlResource = "MATCHED_WRITES_STANDARD"

	// BudgetControlResourceMATCHEDWRITESHISTOGRAM captures enum value "MATCHED_WRITES_HISTOGRAM"
	BudgetControlResourceMATCHEDWRITESHISTOGRAM BudgetControlResource = "MATCHED_WRITES_HISTOGRAM"
)

// for schema
var budgetControlResourceEnum []interface{}

func init() {
	var res []BudgetControlResource
	if err := json.Unmarshal([]byte(`["MATCHED_WRITES_STANDARD","MATCHED_WRITES_HISTOGRAM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		budgetControlResourceEnum = append(budgetControlResourceEnum, v)
	}
}

func (m BudgetControlResource) validateBudgetControlResourceEnum(path, location string, value BudgetControlResource) error {
	if err := validate.EnumCase(path, location, value, budgetControlResourceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this budget control resource
func (m BudgetControlResource) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBudgetControlResourceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this budget control resource based on context it is used
func (m BudgetControlResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
