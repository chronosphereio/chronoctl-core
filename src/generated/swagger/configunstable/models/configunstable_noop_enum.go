// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConfigunstableNoopEnum configunstable noop enum
//
// swagger:model configunstableNoopEnum
type ConfigunstableNoopEnum string

func NewConfigunstableNoopEnum(value ConfigunstableNoopEnum) *ConfigunstableNoopEnum {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConfigunstableNoopEnum.
func (m ConfigunstableNoopEnum) Pointer() *ConfigunstableNoopEnum {
	return &m
}

const (

	// ConfigunstableNoopEnumACTIVE captures enum value "ACTIVE"
	ConfigunstableNoopEnumACTIVE ConfigunstableNoopEnum = "ACTIVE"

	// ConfigunstableNoopEnumARCHIVED captures enum value "ARCHIVED"
	ConfigunstableNoopEnumARCHIVED ConfigunstableNoopEnum = "ARCHIVED"

	// ConfigunstableNoopEnumDELETED captures enum value "DELETED"
	ConfigunstableNoopEnumDELETED ConfigunstableNoopEnum = "DELETED"
)

// for schema
var configunstableNoopEnumEnum []interface{}

func init() {
	var res []ConfigunstableNoopEnum
	if err := json.Unmarshal([]byte(`["ACTIVE","ARCHIVED","DELETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		configunstableNoopEnumEnum = append(configunstableNoopEnumEnum, v)
	}
}

func (m ConfigunstableNoopEnum) validateConfigunstableNoopEnumEnum(path, location string, value ConfigunstableNoopEnum) error {
	if err := validate.EnumCase(path, location, value, configunstableNoopEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this configunstable noop enum
func (m ConfigunstableNoopEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConfigunstableNoopEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this configunstable noop enum based on context it is used
func (m ConfigunstableNoopEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
