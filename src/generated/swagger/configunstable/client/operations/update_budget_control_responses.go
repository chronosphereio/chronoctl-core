// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// UpdateBudgetControlReader is a Reader for the UpdateBudgetControl structure.
type UpdateBudgetControlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBudgetControlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBudgetControlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBudgetControlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBudgetControlNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateBudgetControlConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBudgetControlInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateBudgetControlDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateBudgetControlOK creates a UpdateBudgetControlOK with default headers values
func NewUpdateBudgetControlOK() *UpdateBudgetControlOK {
	return &UpdateBudgetControlOK{}
}

/*
UpdateBudgetControlOK describes a response with status code 200, with default header values.

A successful response containing the updated BudgetControl.
*/
type UpdateBudgetControlOK struct {
	Payload *models.ConfigunstableUpdateBudgetControlResponse
}

// IsSuccess returns true when this update budget control o k response has a 2xx status code
func (o *UpdateBudgetControlOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update budget control o k response has a 3xx status code
func (o *UpdateBudgetControlOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update budget control o k response has a 4xx status code
func (o *UpdateBudgetControlOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update budget control o k response has a 5xx status code
func (o *UpdateBudgetControlOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update budget control o k response a status code equal to that given
func (o *UpdateBudgetControlOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update budget control o k response
func (o *UpdateBudgetControlOK) Code() int {
	return 200
}

func (o *UpdateBudgetControlOK) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlOK  %+v", 200, o.Payload)
}

func (o *UpdateBudgetControlOK) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlOK  %+v", 200, o.Payload)
}

func (o *UpdateBudgetControlOK) GetPayload() *models.ConfigunstableUpdateBudgetControlResponse {
	return o.Payload
}

func (o *UpdateBudgetControlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableUpdateBudgetControlResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBudgetControlBadRequest creates a UpdateBudgetControlBadRequest with default headers values
func NewUpdateBudgetControlBadRequest() *UpdateBudgetControlBadRequest {
	return &UpdateBudgetControlBadRequest{}
}

/*
UpdateBudgetControlBadRequest describes a response with status code 400, with default header values.

Cannot update the BudgetControl because the request is invalid.
*/
type UpdateBudgetControlBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update budget control bad request response has a 2xx status code
func (o *UpdateBudgetControlBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update budget control bad request response has a 3xx status code
func (o *UpdateBudgetControlBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update budget control bad request response has a 4xx status code
func (o *UpdateBudgetControlBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update budget control bad request response has a 5xx status code
func (o *UpdateBudgetControlBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update budget control bad request response a status code equal to that given
func (o *UpdateBudgetControlBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update budget control bad request response
func (o *UpdateBudgetControlBadRequest) Code() int {
	return 400
}

func (o *UpdateBudgetControlBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateBudgetControlBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateBudgetControlBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateBudgetControlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBudgetControlNotFound creates a UpdateBudgetControlNotFound with default headers values
func NewUpdateBudgetControlNotFound() *UpdateBudgetControlNotFound {
	return &UpdateBudgetControlNotFound{}
}

/*
UpdateBudgetControlNotFound describes a response with status code 404, with default header values.

Cannot update the BudgetControl because the slug does not exist.
*/
type UpdateBudgetControlNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update budget control not found response has a 2xx status code
func (o *UpdateBudgetControlNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update budget control not found response has a 3xx status code
func (o *UpdateBudgetControlNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update budget control not found response has a 4xx status code
func (o *UpdateBudgetControlNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update budget control not found response has a 5xx status code
func (o *UpdateBudgetControlNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update budget control not found response a status code equal to that given
func (o *UpdateBudgetControlNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update budget control not found response
func (o *UpdateBudgetControlNotFound) Code() int {
	return 404
}

func (o *UpdateBudgetControlNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlNotFound  %+v", 404, o.Payload)
}

func (o *UpdateBudgetControlNotFound) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlNotFound  %+v", 404, o.Payload)
}

func (o *UpdateBudgetControlNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateBudgetControlNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBudgetControlConflict creates a UpdateBudgetControlConflict with default headers values
func NewUpdateBudgetControlConflict() *UpdateBudgetControlConflict {
	return &UpdateBudgetControlConflict{}
}

/*
UpdateBudgetControlConflict describes a response with status code 409, with default header values.

Cannot update the BudgetControl because there is a conflict with an existing BudgetControl.
*/
type UpdateBudgetControlConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update budget control conflict response has a 2xx status code
func (o *UpdateBudgetControlConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update budget control conflict response has a 3xx status code
func (o *UpdateBudgetControlConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update budget control conflict response has a 4xx status code
func (o *UpdateBudgetControlConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update budget control conflict response has a 5xx status code
func (o *UpdateBudgetControlConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update budget control conflict response a status code equal to that given
func (o *UpdateBudgetControlConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update budget control conflict response
func (o *UpdateBudgetControlConflict) Code() int {
	return 409
}

func (o *UpdateBudgetControlConflict) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlConflict  %+v", 409, o.Payload)
}

func (o *UpdateBudgetControlConflict) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlConflict  %+v", 409, o.Payload)
}

func (o *UpdateBudgetControlConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateBudgetControlConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBudgetControlInternalServerError creates a UpdateBudgetControlInternalServerError with default headers values
func NewUpdateBudgetControlInternalServerError() *UpdateBudgetControlInternalServerError {
	return &UpdateBudgetControlInternalServerError{}
}

/*
UpdateBudgetControlInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type UpdateBudgetControlInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update budget control internal server error response has a 2xx status code
func (o *UpdateBudgetControlInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update budget control internal server error response has a 3xx status code
func (o *UpdateBudgetControlInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update budget control internal server error response has a 4xx status code
func (o *UpdateBudgetControlInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update budget control internal server error response has a 5xx status code
func (o *UpdateBudgetControlInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update budget control internal server error response a status code equal to that given
func (o *UpdateBudgetControlInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update budget control internal server error response
func (o *UpdateBudgetControlInternalServerError) Code() int {
	return 500
}

func (o *UpdateBudgetControlInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateBudgetControlInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] updateBudgetControlInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateBudgetControlInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateBudgetControlInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBudgetControlDefault creates a UpdateBudgetControlDefault with default headers values
func NewUpdateBudgetControlDefault(code int) *UpdateBudgetControlDefault {
	return &UpdateBudgetControlDefault{
		_statusCode: code,
	}
}

/*
UpdateBudgetControlDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type UpdateBudgetControlDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this update budget control default response has a 2xx status code
func (o *UpdateBudgetControlDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update budget control default response has a 3xx status code
func (o *UpdateBudgetControlDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update budget control default response has a 4xx status code
func (o *UpdateBudgetControlDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update budget control default response has a 5xx status code
func (o *UpdateBudgetControlDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update budget control default response a status code equal to that given
func (o *UpdateBudgetControlDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update budget control default response
func (o *UpdateBudgetControlDefault) Code() int {
	return o._statusCode
}

func (o *UpdateBudgetControlDefault) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] UpdateBudgetControl default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateBudgetControlDefault) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/budget-controls/{slug}][%d] UpdateBudgetControl default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateBudgetControlDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *UpdateBudgetControlDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
