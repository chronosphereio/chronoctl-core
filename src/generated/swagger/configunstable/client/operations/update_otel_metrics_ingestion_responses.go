// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// UpdateOtelMetricsIngestionReader is a Reader for the UpdateOtelMetricsIngestion structure.
type UpdateOtelMetricsIngestionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOtelMetricsIngestionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOtelMetricsIngestionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOtelMetricsIngestionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateOtelMetricsIngestionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateOtelMetricsIngestionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateOtelMetricsIngestionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateOtelMetricsIngestionOK creates a UpdateOtelMetricsIngestionOK with default headers values
func NewUpdateOtelMetricsIngestionOK() *UpdateOtelMetricsIngestionOK {
	return &UpdateOtelMetricsIngestionOK{}
}

/*
UpdateOtelMetricsIngestionOK describes a response with status code 200, with default header values.

A successful response containing the updated OtelMetricsIngestion.
*/
type UpdateOtelMetricsIngestionOK struct {
	Payload *models.ConfigunstableUpdateOtelMetricsIngestionResponse
}

// IsSuccess returns true when this update otel metrics ingestion o k response has a 2xx status code
func (o *UpdateOtelMetricsIngestionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update otel metrics ingestion o k response has a 3xx status code
func (o *UpdateOtelMetricsIngestionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update otel metrics ingestion o k response has a 4xx status code
func (o *UpdateOtelMetricsIngestionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update otel metrics ingestion o k response has a 5xx status code
func (o *UpdateOtelMetricsIngestionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update otel metrics ingestion o k response a status code equal to that given
func (o *UpdateOtelMetricsIngestionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update otel metrics ingestion o k response
func (o *UpdateOtelMetricsIngestionOK) Code() int {
	return 200
}

func (o *UpdateOtelMetricsIngestionOK) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] updateOtelMetricsIngestionOK  %+v", 200, o.Payload)
}

func (o *UpdateOtelMetricsIngestionOK) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] updateOtelMetricsIngestionOK  %+v", 200, o.Payload)
}

func (o *UpdateOtelMetricsIngestionOK) GetPayload() *models.ConfigunstableUpdateOtelMetricsIngestionResponse {
	return o.Payload
}

func (o *UpdateOtelMetricsIngestionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableUpdateOtelMetricsIngestionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOtelMetricsIngestionBadRequest creates a UpdateOtelMetricsIngestionBadRequest with default headers values
func NewUpdateOtelMetricsIngestionBadRequest() *UpdateOtelMetricsIngestionBadRequest {
	return &UpdateOtelMetricsIngestionBadRequest{}
}

/*
UpdateOtelMetricsIngestionBadRequest describes a response with status code 400, with default header values.

Cannot update the OtelMetricsIngestion because the request is invalid.
*/
type UpdateOtelMetricsIngestionBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update otel metrics ingestion bad request response has a 2xx status code
func (o *UpdateOtelMetricsIngestionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update otel metrics ingestion bad request response has a 3xx status code
func (o *UpdateOtelMetricsIngestionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update otel metrics ingestion bad request response has a 4xx status code
func (o *UpdateOtelMetricsIngestionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update otel metrics ingestion bad request response has a 5xx status code
func (o *UpdateOtelMetricsIngestionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update otel metrics ingestion bad request response a status code equal to that given
func (o *UpdateOtelMetricsIngestionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update otel metrics ingestion bad request response
func (o *UpdateOtelMetricsIngestionBadRequest) Code() int {
	return 400
}

func (o *UpdateOtelMetricsIngestionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] updateOtelMetricsIngestionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOtelMetricsIngestionBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] updateOtelMetricsIngestionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOtelMetricsIngestionBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateOtelMetricsIngestionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOtelMetricsIngestionNotFound creates a UpdateOtelMetricsIngestionNotFound with default headers values
func NewUpdateOtelMetricsIngestionNotFound() *UpdateOtelMetricsIngestionNotFound {
	return &UpdateOtelMetricsIngestionNotFound{}
}

/*
UpdateOtelMetricsIngestionNotFound describes a response with status code 404, with default header values.

Cannot update the OtelMetricsIngestion because OtelMetricsIngestion has not been created.
*/
type UpdateOtelMetricsIngestionNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update otel metrics ingestion not found response has a 2xx status code
func (o *UpdateOtelMetricsIngestionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update otel metrics ingestion not found response has a 3xx status code
func (o *UpdateOtelMetricsIngestionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update otel metrics ingestion not found response has a 4xx status code
func (o *UpdateOtelMetricsIngestionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update otel metrics ingestion not found response has a 5xx status code
func (o *UpdateOtelMetricsIngestionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update otel metrics ingestion not found response a status code equal to that given
func (o *UpdateOtelMetricsIngestionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update otel metrics ingestion not found response
func (o *UpdateOtelMetricsIngestionNotFound) Code() int {
	return 404
}

func (o *UpdateOtelMetricsIngestionNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] updateOtelMetricsIngestionNotFound  %+v", 404, o.Payload)
}

func (o *UpdateOtelMetricsIngestionNotFound) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] updateOtelMetricsIngestionNotFound  %+v", 404, o.Payload)
}

func (o *UpdateOtelMetricsIngestionNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateOtelMetricsIngestionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOtelMetricsIngestionInternalServerError creates a UpdateOtelMetricsIngestionInternalServerError with default headers values
func NewUpdateOtelMetricsIngestionInternalServerError() *UpdateOtelMetricsIngestionInternalServerError {
	return &UpdateOtelMetricsIngestionInternalServerError{}
}

/*
UpdateOtelMetricsIngestionInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type UpdateOtelMetricsIngestionInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update otel metrics ingestion internal server error response has a 2xx status code
func (o *UpdateOtelMetricsIngestionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update otel metrics ingestion internal server error response has a 3xx status code
func (o *UpdateOtelMetricsIngestionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update otel metrics ingestion internal server error response has a 4xx status code
func (o *UpdateOtelMetricsIngestionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update otel metrics ingestion internal server error response has a 5xx status code
func (o *UpdateOtelMetricsIngestionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update otel metrics ingestion internal server error response a status code equal to that given
func (o *UpdateOtelMetricsIngestionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update otel metrics ingestion internal server error response
func (o *UpdateOtelMetricsIngestionInternalServerError) Code() int {
	return 500
}

func (o *UpdateOtelMetricsIngestionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] updateOtelMetricsIngestionInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOtelMetricsIngestionInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] updateOtelMetricsIngestionInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOtelMetricsIngestionInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateOtelMetricsIngestionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOtelMetricsIngestionDefault creates a UpdateOtelMetricsIngestionDefault with default headers values
func NewUpdateOtelMetricsIngestionDefault(code int) *UpdateOtelMetricsIngestionDefault {
	return &UpdateOtelMetricsIngestionDefault{
		_statusCode: code,
	}
}

/*
UpdateOtelMetricsIngestionDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type UpdateOtelMetricsIngestionDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this update otel metrics ingestion default response has a 2xx status code
func (o *UpdateOtelMetricsIngestionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update otel metrics ingestion default response has a 3xx status code
func (o *UpdateOtelMetricsIngestionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update otel metrics ingestion default response has a 4xx status code
func (o *UpdateOtelMetricsIngestionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update otel metrics ingestion default response has a 5xx status code
func (o *UpdateOtelMetricsIngestionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update otel metrics ingestion default response a status code equal to that given
func (o *UpdateOtelMetricsIngestionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update otel metrics ingestion default response
func (o *UpdateOtelMetricsIngestionDefault) Code() int {
	return o._statusCode
}

func (o *UpdateOtelMetricsIngestionDefault) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] UpdateOtelMetricsIngestion default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateOtelMetricsIngestionDefault) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/otel-metrics-ingestion][%d] UpdateOtelMetricsIngestion default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateOtelMetricsIngestionDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *UpdateOtelMetricsIngestionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
