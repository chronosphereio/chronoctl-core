// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// CreateLogControlConfigReader is a Reader for the CreateLogControlConfig structure.
type CreateLogControlConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLogControlConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateLogControlConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateLogControlConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateLogControlConfigConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateLogControlConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateLogControlConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateLogControlConfigOK creates a CreateLogControlConfigOK with default headers values
func NewCreateLogControlConfigOK() *CreateLogControlConfigOK {
	return &CreateLogControlConfigOK{}
}

/*
CreateLogControlConfigOK describes a response with status code 200, with default header values.

A successful response containing the created LogControlConfig.
*/
type CreateLogControlConfigOK struct {
	Payload *models.ConfigunstableCreateLogControlConfigResponse
}

// IsSuccess returns true when this create log control config o k response has a 2xx status code
func (o *CreateLogControlConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create log control config o k response has a 3xx status code
func (o *CreateLogControlConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log control config o k response has a 4xx status code
func (o *CreateLogControlConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create log control config o k response has a 5xx status code
func (o *CreateLogControlConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create log control config o k response a status code equal to that given
func (o *CreateLogControlConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create log control config o k response
func (o *CreateLogControlConfigOK) Code() int {
	return 200
}

func (o *CreateLogControlConfigOK) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] createLogControlConfigOK  %+v", 200, o.Payload)
}

func (o *CreateLogControlConfigOK) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] createLogControlConfigOK  %+v", 200, o.Payload)
}

func (o *CreateLogControlConfigOK) GetPayload() *models.ConfigunstableCreateLogControlConfigResponse {
	return o.Payload
}

func (o *CreateLogControlConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableCreateLogControlConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogControlConfigBadRequest creates a CreateLogControlConfigBadRequest with default headers values
func NewCreateLogControlConfigBadRequest() *CreateLogControlConfigBadRequest {
	return &CreateLogControlConfigBadRequest{}
}

/*
CreateLogControlConfigBadRequest describes a response with status code 400, with default header values.

Cannot create the LogControlConfig because the request is invalid.
*/
type CreateLogControlConfigBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log control config bad request response has a 2xx status code
func (o *CreateLogControlConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log control config bad request response has a 3xx status code
func (o *CreateLogControlConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log control config bad request response has a 4xx status code
func (o *CreateLogControlConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create log control config bad request response has a 5xx status code
func (o *CreateLogControlConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create log control config bad request response a status code equal to that given
func (o *CreateLogControlConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create log control config bad request response
func (o *CreateLogControlConfigBadRequest) Code() int {
	return 400
}

func (o *CreateLogControlConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] createLogControlConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogControlConfigBadRequest) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] createLogControlConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogControlConfigBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogControlConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogControlConfigConflict creates a CreateLogControlConfigConflict with default headers values
func NewCreateLogControlConfigConflict() *CreateLogControlConfigConflict {
	return &CreateLogControlConfigConflict{}
}

/*
CreateLogControlConfigConflict describes a response with status code 409, with default header values.

Cannot create the LogControlConfig because there is a conflict with an existing LogControlConfig.
*/
type CreateLogControlConfigConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log control config conflict response has a 2xx status code
func (o *CreateLogControlConfigConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log control config conflict response has a 3xx status code
func (o *CreateLogControlConfigConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log control config conflict response has a 4xx status code
func (o *CreateLogControlConfigConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create log control config conflict response has a 5xx status code
func (o *CreateLogControlConfigConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create log control config conflict response a status code equal to that given
func (o *CreateLogControlConfigConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create log control config conflict response
func (o *CreateLogControlConfigConflict) Code() int {
	return 409
}

func (o *CreateLogControlConfigConflict) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] createLogControlConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateLogControlConfigConflict) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] createLogControlConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateLogControlConfigConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogControlConfigConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogControlConfigInternalServerError creates a CreateLogControlConfigInternalServerError with default headers values
func NewCreateLogControlConfigInternalServerError() *CreateLogControlConfigInternalServerError {
	return &CreateLogControlConfigInternalServerError{}
}

/*
CreateLogControlConfigInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateLogControlConfigInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log control config internal server error response has a 2xx status code
func (o *CreateLogControlConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log control config internal server error response has a 3xx status code
func (o *CreateLogControlConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log control config internal server error response has a 4xx status code
func (o *CreateLogControlConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create log control config internal server error response has a 5xx status code
func (o *CreateLogControlConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create log control config internal server error response a status code equal to that given
func (o *CreateLogControlConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create log control config internal server error response
func (o *CreateLogControlConfigInternalServerError) Code() int {
	return 500
}

func (o *CreateLogControlConfigInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] createLogControlConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogControlConfigInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] createLogControlConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogControlConfigInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogControlConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogControlConfigDefault creates a CreateLogControlConfigDefault with default headers values
func NewCreateLogControlConfigDefault(code int) *CreateLogControlConfigDefault {
	return &CreateLogControlConfigDefault{
		_statusCode: code,
	}
}

/*
CreateLogControlConfigDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateLogControlConfigDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create log control config default response has a 2xx status code
func (o *CreateLogControlConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create log control config default response has a 3xx status code
func (o *CreateLogControlConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create log control config default response has a 4xx status code
func (o *CreateLogControlConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create log control config default response has a 5xx status code
func (o *CreateLogControlConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create log control config default response a status code equal to that given
func (o *CreateLogControlConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create log control config default response
func (o *CreateLogControlConfigDefault) Code() int {
	return o._statusCode
}

func (o *CreateLogControlConfigDefault) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] CreateLogControlConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLogControlConfigDefault) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-control-config][%d] CreateLogControlConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLogControlConfigDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateLogControlConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
