// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// DeleteLogBudgetReader is a Reader for the DeleteLogBudget structure.
type DeleteLogBudgetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLogBudgetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteLogBudgetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLogBudgetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLogBudgetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLogBudgetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteLogBudgetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteLogBudgetOK creates a DeleteLogBudgetOK with default headers values
func NewDeleteLogBudgetOK() *DeleteLogBudgetOK {
	return &DeleteLogBudgetOK{}
}

/*
DeleteLogBudgetOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteLogBudgetOK struct {
	Payload models.ConfigunstableDeleteLogBudgetResponse
}

// IsSuccess returns true when this delete log budget o k response has a 2xx status code
func (o *DeleteLogBudgetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete log budget o k response has a 3xx status code
func (o *DeleteLogBudgetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log budget o k response has a 4xx status code
func (o *DeleteLogBudgetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete log budget o k response has a 5xx status code
func (o *DeleteLogBudgetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log budget o k response a status code equal to that given
func (o *DeleteLogBudgetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete log budget o k response
func (o *DeleteLogBudgetOK) Code() int {
	return 200
}

func (o *DeleteLogBudgetOK) Error() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] deleteLogBudgetOK  %+v", 200, o.Payload)
}

func (o *DeleteLogBudgetOK) String() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] deleteLogBudgetOK  %+v", 200, o.Payload)
}

func (o *DeleteLogBudgetOK) GetPayload() models.ConfigunstableDeleteLogBudgetResponse {
	return o.Payload
}

func (o *DeleteLogBudgetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogBudgetBadRequest creates a DeleteLogBudgetBadRequest with default headers values
func NewDeleteLogBudgetBadRequest() *DeleteLogBudgetBadRequest {
	return &DeleteLogBudgetBadRequest{}
}

/*
DeleteLogBudgetBadRequest describes a response with status code 400, with default header values.

Cannot delete the LogBudget because it is in use.
*/
type DeleteLogBudgetBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log budget bad request response has a 2xx status code
func (o *DeleteLogBudgetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log budget bad request response has a 3xx status code
func (o *DeleteLogBudgetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log budget bad request response has a 4xx status code
func (o *DeleteLogBudgetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete log budget bad request response has a 5xx status code
func (o *DeleteLogBudgetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log budget bad request response a status code equal to that given
func (o *DeleteLogBudgetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete log budget bad request response
func (o *DeleteLogBudgetBadRequest) Code() int {
	return 400
}

func (o *DeleteLogBudgetBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] deleteLogBudgetBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLogBudgetBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] deleteLogBudgetBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLogBudgetBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogBudgetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogBudgetNotFound creates a DeleteLogBudgetNotFound with default headers values
func NewDeleteLogBudgetNotFound() *DeleteLogBudgetNotFound {
	return &DeleteLogBudgetNotFound{}
}

/*
DeleteLogBudgetNotFound describes a response with status code 404, with default header values.

Cannot delete the LogBudget because the slug does not exist.
*/
type DeleteLogBudgetNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log budget not found response has a 2xx status code
func (o *DeleteLogBudgetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log budget not found response has a 3xx status code
func (o *DeleteLogBudgetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log budget not found response has a 4xx status code
func (o *DeleteLogBudgetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete log budget not found response has a 5xx status code
func (o *DeleteLogBudgetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete log budget not found response a status code equal to that given
func (o *DeleteLogBudgetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete log budget not found response
func (o *DeleteLogBudgetNotFound) Code() int {
	return 404
}

func (o *DeleteLogBudgetNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] deleteLogBudgetNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLogBudgetNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] deleteLogBudgetNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLogBudgetNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogBudgetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogBudgetInternalServerError creates a DeleteLogBudgetInternalServerError with default headers values
func NewDeleteLogBudgetInternalServerError() *DeleteLogBudgetInternalServerError {
	return &DeleteLogBudgetInternalServerError{}
}

/*
DeleteLogBudgetInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type DeleteLogBudgetInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete log budget internal server error response has a 2xx status code
func (o *DeleteLogBudgetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete log budget internal server error response has a 3xx status code
func (o *DeleteLogBudgetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete log budget internal server error response has a 4xx status code
func (o *DeleteLogBudgetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete log budget internal server error response has a 5xx status code
func (o *DeleteLogBudgetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete log budget internal server error response a status code equal to that given
func (o *DeleteLogBudgetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete log budget internal server error response
func (o *DeleteLogBudgetInternalServerError) Code() int {
	return 500
}

func (o *DeleteLogBudgetInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] deleteLogBudgetInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLogBudgetInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] deleteLogBudgetInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLogBudgetInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLogBudgetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogBudgetDefault creates a DeleteLogBudgetDefault with default headers values
func NewDeleteLogBudgetDefault(code int) *DeleteLogBudgetDefault {
	return &DeleteLogBudgetDefault{
		_statusCode: code,
	}
}

/*
DeleteLogBudgetDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type DeleteLogBudgetDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this delete log budget default response has a 2xx status code
func (o *DeleteLogBudgetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete log budget default response has a 3xx status code
func (o *DeleteLogBudgetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete log budget default response has a 4xx status code
func (o *DeleteLogBudgetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete log budget default response has a 5xx status code
func (o *DeleteLogBudgetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete log budget default response a status code equal to that given
func (o *DeleteLogBudgetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete log budget default response
func (o *DeleteLogBudgetDefault) Code() int {
	return o._statusCode
}

func (o *DeleteLogBudgetDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] DeleteLogBudget default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteLogBudgetDefault) String() string {
	return fmt.Sprintf("[DELETE /api/unstable/config/log-budget][%d] DeleteLogBudget default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteLogBudgetDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *DeleteLogBudgetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
