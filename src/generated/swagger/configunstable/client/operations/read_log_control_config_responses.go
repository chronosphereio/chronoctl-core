// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// ReadLogControlConfigReader is a Reader for the ReadLogControlConfig structure.
type ReadLogControlConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadLogControlConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadLogControlConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadLogControlConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadLogControlConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadLogControlConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadLogControlConfigOK creates a ReadLogControlConfigOK with default headers values
func NewReadLogControlConfigOK() *ReadLogControlConfigOK {
	return &ReadLogControlConfigOK{}
}

/*
ReadLogControlConfigOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadLogControlConfigOK struct {
	Payload *models.ConfigunstableReadLogControlConfigResponse
}

// IsSuccess returns true when this read log control config o k response has a 2xx status code
func (o *ReadLogControlConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read log control config o k response has a 3xx status code
func (o *ReadLogControlConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log control config o k response has a 4xx status code
func (o *ReadLogControlConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read log control config o k response has a 5xx status code
func (o *ReadLogControlConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read log control config o k response a status code equal to that given
func (o *ReadLogControlConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read log control config o k response
func (o *ReadLogControlConfigOK) Code() int {
	return 200
}

func (o *ReadLogControlConfigOK) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-control-config][%d] readLogControlConfigOK  %+v", 200, o.Payload)
}

func (o *ReadLogControlConfigOK) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-control-config][%d] readLogControlConfigOK  %+v", 200, o.Payload)
}

func (o *ReadLogControlConfigOK) GetPayload() *models.ConfigunstableReadLogControlConfigResponse {
	return o.Payload
}

func (o *ReadLogControlConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableReadLogControlConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogControlConfigNotFound creates a ReadLogControlConfigNotFound with default headers values
func NewReadLogControlConfigNotFound() *ReadLogControlConfigNotFound {
	return &ReadLogControlConfigNotFound{}
}

/*
ReadLogControlConfigNotFound describes a response with status code 404, with default header values.

Cannot read the LogControlConfig because LogControlConfig has not been created.
*/
type ReadLogControlConfigNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read log control config not found response has a 2xx status code
func (o *ReadLogControlConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read log control config not found response has a 3xx status code
func (o *ReadLogControlConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log control config not found response has a 4xx status code
func (o *ReadLogControlConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read log control config not found response has a 5xx status code
func (o *ReadLogControlConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read log control config not found response a status code equal to that given
func (o *ReadLogControlConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read log control config not found response
func (o *ReadLogControlConfigNotFound) Code() int {
	return 404
}

func (o *ReadLogControlConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-control-config][%d] readLogControlConfigNotFound  %+v", 404, o.Payload)
}

func (o *ReadLogControlConfigNotFound) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-control-config][%d] readLogControlConfigNotFound  %+v", 404, o.Payload)
}

func (o *ReadLogControlConfigNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadLogControlConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogControlConfigInternalServerError creates a ReadLogControlConfigInternalServerError with default headers values
func NewReadLogControlConfigInternalServerError() *ReadLogControlConfigInternalServerError {
	return &ReadLogControlConfigInternalServerError{}
}

/*
ReadLogControlConfigInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadLogControlConfigInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read log control config internal server error response has a 2xx status code
func (o *ReadLogControlConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read log control config internal server error response has a 3xx status code
func (o *ReadLogControlConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log control config internal server error response has a 4xx status code
func (o *ReadLogControlConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read log control config internal server error response has a 5xx status code
func (o *ReadLogControlConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read log control config internal server error response a status code equal to that given
func (o *ReadLogControlConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read log control config internal server error response
func (o *ReadLogControlConfigInternalServerError) Code() int {
	return 500
}

func (o *ReadLogControlConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-control-config][%d] readLogControlConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLogControlConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-control-config][%d] readLogControlConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLogControlConfigInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadLogControlConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogControlConfigDefault creates a ReadLogControlConfigDefault with default headers values
func NewReadLogControlConfigDefault(code int) *ReadLogControlConfigDefault {
	return &ReadLogControlConfigDefault{
		_statusCode: code,
	}
}

/*
ReadLogControlConfigDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadLogControlConfigDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read log control config default response has a 2xx status code
func (o *ReadLogControlConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read log control config default response has a 3xx status code
func (o *ReadLogControlConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read log control config default response has a 4xx status code
func (o *ReadLogControlConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read log control config default response has a 5xx status code
func (o *ReadLogControlConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read log control config default response a status code equal to that given
func (o *ReadLogControlConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read log control config default response
func (o *ReadLogControlConfigDefault) Code() int {
	return o._statusCode
}

func (o *ReadLogControlConfigDefault) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-control-config][%d] ReadLogControlConfig default  %+v", o._statusCode, o.Payload)
}

func (o *ReadLogControlConfigDefault) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-control-config][%d] ReadLogControlConfig default  %+v", o._statusCode, o.Payload)
}

func (o *ReadLogControlConfigDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadLogControlConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
