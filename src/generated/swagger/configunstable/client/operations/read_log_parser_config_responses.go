// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// ReadLogParserConfigReader is a Reader for the ReadLogParserConfig structure.
type ReadLogParserConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadLogParserConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadLogParserConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadLogParserConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadLogParserConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadLogParserConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadLogParserConfigOK creates a ReadLogParserConfigOK with default headers values
func NewReadLogParserConfigOK() *ReadLogParserConfigOK {
	return &ReadLogParserConfigOK{}
}

/*
ReadLogParserConfigOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadLogParserConfigOK struct {
	Payload *models.ConfigunstableReadLogParserConfigResponse
}

// IsSuccess returns true when this read log parser config o k response has a 2xx status code
func (o *ReadLogParserConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read log parser config o k response has a 3xx status code
func (o *ReadLogParserConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log parser config o k response has a 4xx status code
func (o *ReadLogParserConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read log parser config o k response has a 5xx status code
func (o *ReadLogParserConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read log parser config o k response a status code equal to that given
func (o *ReadLogParserConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read log parser config o k response
func (o *ReadLogParserConfigOK) Code() int {
	return 200
}

func (o *ReadLogParserConfigOK) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-parser-config][%d] readLogParserConfigOK  %+v", 200, o.Payload)
}

func (o *ReadLogParserConfigOK) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-parser-config][%d] readLogParserConfigOK  %+v", 200, o.Payload)
}

func (o *ReadLogParserConfigOK) GetPayload() *models.ConfigunstableReadLogParserConfigResponse {
	return o.Payload
}

func (o *ReadLogParserConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableReadLogParserConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogParserConfigNotFound creates a ReadLogParserConfigNotFound with default headers values
func NewReadLogParserConfigNotFound() *ReadLogParserConfigNotFound {
	return &ReadLogParserConfigNotFound{}
}

/*
ReadLogParserConfigNotFound describes a response with status code 404, with default header values.

Cannot read the LogParserConfig because LogParserConfig has not been created.
*/
type ReadLogParserConfigNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read log parser config not found response has a 2xx status code
func (o *ReadLogParserConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read log parser config not found response has a 3xx status code
func (o *ReadLogParserConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log parser config not found response has a 4xx status code
func (o *ReadLogParserConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read log parser config not found response has a 5xx status code
func (o *ReadLogParserConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read log parser config not found response a status code equal to that given
func (o *ReadLogParserConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read log parser config not found response
func (o *ReadLogParserConfigNotFound) Code() int {
	return 404
}

func (o *ReadLogParserConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-parser-config][%d] readLogParserConfigNotFound  %+v", 404, o.Payload)
}

func (o *ReadLogParserConfigNotFound) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-parser-config][%d] readLogParserConfigNotFound  %+v", 404, o.Payload)
}

func (o *ReadLogParserConfigNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadLogParserConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogParserConfigInternalServerError creates a ReadLogParserConfigInternalServerError with default headers values
func NewReadLogParserConfigInternalServerError() *ReadLogParserConfigInternalServerError {
	return &ReadLogParserConfigInternalServerError{}
}

/*
ReadLogParserConfigInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadLogParserConfigInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read log parser config internal server error response has a 2xx status code
func (o *ReadLogParserConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read log parser config internal server error response has a 3xx status code
func (o *ReadLogParserConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log parser config internal server error response has a 4xx status code
func (o *ReadLogParserConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read log parser config internal server error response has a 5xx status code
func (o *ReadLogParserConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read log parser config internal server error response a status code equal to that given
func (o *ReadLogParserConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read log parser config internal server error response
func (o *ReadLogParserConfigInternalServerError) Code() int {
	return 500
}

func (o *ReadLogParserConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-parser-config][%d] readLogParserConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLogParserConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-parser-config][%d] readLogParserConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLogParserConfigInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadLogParserConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogParserConfigDefault creates a ReadLogParserConfigDefault with default headers values
func NewReadLogParserConfigDefault(code int) *ReadLogParserConfigDefault {
	return &ReadLogParserConfigDefault{
		_statusCode: code,
	}
}

/*
ReadLogParserConfigDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadLogParserConfigDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read log parser config default response has a 2xx status code
func (o *ReadLogParserConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read log parser config default response has a 3xx status code
func (o *ReadLogParserConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read log parser config default response has a 4xx status code
func (o *ReadLogParserConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read log parser config default response has a 5xx status code
func (o *ReadLogParserConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read log parser config default response a status code equal to that given
func (o *ReadLogParserConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read log parser config default response
func (o *ReadLogParserConfigDefault) Code() int {
	return o._statusCode
}

func (o *ReadLogParserConfigDefault) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-parser-config][%d] ReadLogParserConfig default  %+v", o._statusCode, o.Payload)
}

func (o *ReadLogParserConfigDefault) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-parser-config][%d] ReadLogParserConfig default  %+v", o._statusCode, o.Payload)
}

func (o *ReadLogParserConfigDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadLogParserConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
