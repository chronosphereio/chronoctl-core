// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// ListTraceMetricsRulesReader is a Reader for the ListTraceMetricsRules structure.
type ListTraceMetricsRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTraceMetricsRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTraceMetricsRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListTraceMetricsRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListTraceMetricsRulesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListTraceMetricsRulesOK creates a ListTraceMetricsRulesOK with default headers values
func NewListTraceMetricsRulesOK() *ListTraceMetricsRulesOK {
	return &ListTraceMetricsRulesOK{}
}

/*
ListTraceMetricsRulesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListTraceMetricsRulesOK struct {
	Payload *models.ConfigunstableListTraceMetricsRulesResponse
}

// IsSuccess returns true when this list trace metrics rules o k response has a 2xx status code
func (o *ListTraceMetricsRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list trace metrics rules o k response has a 3xx status code
func (o *ListTraceMetricsRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list trace metrics rules o k response has a 4xx status code
func (o *ListTraceMetricsRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list trace metrics rules o k response has a 5xx status code
func (o *ListTraceMetricsRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list trace metrics rules o k response a status code equal to that given
func (o *ListTraceMetricsRulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list trace metrics rules o k response
func (o *ListTraceMetricsRulesOK) Code() int {
	return 200
}

func (o *ListTraceMetricsRulesOK) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/trace-metrics-rules][%d] listTraceMetricsRulesOK  %+v", 200, o.Payload)
}

func (o *ListTraceMetricsRulesOK) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/trace-metrics-rules][%d] listTraceMetricsRulesOK  %+v", 200, o.Payload)
}

func (o *ListTraceMetricsRulesOK) GetPayload() *models.ConfigunstableListTraceMetricsRulesResponse {
	return o.Payload
}

func (o *ListTraceMetricsRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableListTraceMetricsRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTraceMetricsRulesInternalServerError creates a ListTraceMetricsRulesInternalServerError with default headers values
func NewListTraceMetricsRulesInternalServerError() *ListTraceMetricsRulesInternalServerError {
	return &ListTraceMetricsRulesInternalServerError{}
}

/*
ListTraceMetricsRulesInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ListTraceMetricsRulesInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this list trace metrics rules internal server error response has a 2xx status code
func (o *ListTraceMetricsRulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list trace metrics rules internal server error response has a 3xx status code
func (o *ListTraceMetricsRulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list trace metrics rules internal server error response has a 4xx status code
func (o *ListTraceMetricsRulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list trace metrics rules internal server error response has a 5xx status code
func (o *ListTraceMetricsRulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list trace metrics rules internal server error response a status code equal to that given
func (o *ListTraceMetricsRulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list trace metrics rules internal server error response
func (o *ListTraceMetricsRulesInternalServerError) Code() int {
	return 500
}

func (o *ListTraceMetricsRulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/trace-metrics-rules][%d] listTraceMetricsRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListTraceMetricsRulesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/trace-metrics-rules][%d] listTraceMetricsRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListTraceMetricsRulesInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ListTraceMetricsRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTraceMetricsRulesDefault creates a ListTraceMetricsRulesDefault with default headers values
func NewListTraceMetricsRulesDefault(code int) *ListTraceMetricsRulesDefault {
	return &ListTraceMetricsRulesDefault{
		_statusCode: code,
	}
}

/*
ListTraceMetricsRulesDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ListTraceMetricsRulesDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this list trace metrics rules default response has a 2xx status code
func (o *ListTraceMetricsRulesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list trace metrics rules default response has a 3xx status code
func (o *ListTraceMetricsRulesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list trace metrics rules default response has a 4xx status code
func (o *ListTraceMetricsRulesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list trace metrics rules default response has a 5xx status code
func (o *ListTraceMetricsRulesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list trace metrics rules default response a status code equal to that given
func (o *ListTraceMetricsRulesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list trace metrics rules default response
func (o *ListTraceMetricsRulesDefault) Code() int {
	return o._statusCode
}

func (o *ListTraceMetricsRulesDefault) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/trace-metrics-rules][%d] ListTraceMetricsRules default  %+v", o._statusCode, o.Payload)
}

func (o *ListTraceMetricsRulesDefault) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/trace-metrics-rules][%d] ListTraceMetricsRules default  %+v", o._statusCode, o.Payload)
}

func (o *ListTraceMetricsRulesDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ListTraceMetricsRulesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
