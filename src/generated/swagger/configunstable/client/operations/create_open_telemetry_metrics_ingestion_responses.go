// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// CreateOpenTelemetryMetricsIngestionReader is a Reader for the CreateOpenTelemetryMetricsIngestion structure.
type CreateOpenTelemetryMetricsIngestionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOpenTelemetryMetricsIngestionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateOpenTelemetryMetricsIngestionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateOpenTelemetryMetricsIngestionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateOpenTelemetryMetricsIngestionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateOpenTelemetryMetricsIngestionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateOpenTelemetryMetricsIngestionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateOpenTelemetryMetricsIngestionOK creates a CreateOpenTelemetryMetricsIngestionOK with default headers values
func NewCreateOpenTelemetryMetricsIngestionOK() *CreateOpenTelemetryMetricsIngestionOK {
	return &CreateOpenTelemetryMetricsIngestionOK{}
}

/*
CreateOpenTelemetryMetricsIngestionOK describes a response with status code 200, with default header values.

A successful response containing the created OpenTelemetryMetricsIngestion.
*/
type CreateOpenTelemetryMetricsIngestionOK struct {
	Payload *models.ConfigunstableCreateOpenTelemetryMetricsIngestionResponse
}

// IsSuccess returns true when this create open telemetry metrics ingestion o k response has a 2xx status code
func (o *CreateOpenTelemetryMetricsIngestionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create open telemetry metrics ingestion o k response has a 3xx status code
func (o *CreateOpenTelemetryMetricsIngestionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create open telemetry metrics ingestion o k response has a 4xx status code
func (o *CreateOpenTelemetryMetricsIngestionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create open telemetry metrics ingestion o k response has a 5xx status code
func (o *CreateOpenTelemetryMetricsIngestionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create open telemetry metrics ingestion o k response a status code equal to that given
func (o *CreateOpenTelemetryMetricsIngestionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create open telemetry metrics ingestion o k response
func (o *CreateOpenTelemetryMetricsIngestionOK) Code() int {
	return 200
}

func (o *CreateOpenTelemetryMetricsIngestionOK) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] createOpenTelemetryMetricsIngestionOK  %+v", 200, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionOK) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] createOpenTelemetryMetricsIngestionOK  %+v", 200, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionOK) GetPayload() *models.ConfigunstableCreateOpenTelemetryMetricsIngestionResponse {
	return o.Payload
}

func (o *CreateOpenTelemetryMetricsIngestionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableCreateOpenTelemetryMetricsIngestionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOpenTelemetryMetricsIngestionBadRequest creates a CreateOpenTelemetryMetricsIngestionBadRequest with default headers values
func NewCreateOpenTelemetryMetricsIngestionBadRequest() *CreateOpenTelemetryMetricsIngestionBadRequest {
	return &CreateOpenTelemetryMetricsIngestionBadRequest{}
}

/*
CreateOpenTelemetryMetricsIngestionBadRequest describes a response with status code 400, with default header values.

Cannot create the OpenTelemetryMetricsIngestion because the request is invalid.
*/
type CreateOpenTelemetryMetricsIngestionBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create open telemetry metrics ingestion bad request response has a 2xx status code
func (o *CreateOpenTelemetryMetricsIngestionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create open telemetry metrics ingestion bad request response has a 3xx status code
func (o *CreateOpenTelemetryMetricsIngestionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create open telemetry metrics ingestion bad request response has a 4xx status code
func (o *CreateOpenTelemetryMetricsIngestionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create open telemetry metrics ingestion bad request response has a 5xx status code
func (o *CreateOpenTelemetryMetricsIngestionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create open telemetry metrics ingestion bad request response a status code equal to that given
func (o *CreateOpenTelemetryMetricsIngestionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create open telemetry metrics ingestion bad request response
func (o *CreateOpenTelemetryMetricsIngestionBadRequest) Code() int {
	return 400
}

func (o *CreateOpenTelemetryMetricsIngestionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] createOpenTelemetryMetricsIngestionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionBadRequest) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] createOpenTelemetryMetricsIngestionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateOpenTelemetryMetricsIngestionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOpenTelemetryMetricsIngestionConflict creates a CreateOpenTelemetryMetricsIngestionConflict with default headers values
func NewCreateOpenTelemetryMetricsIngestionConflict() *CreateOpenTelemetryMetricsIngestionConflict {
	return &CreateOpenTelemetryMetricsIngestionConflict{}
}

/*
CreateOpenTelemetryMetricsIngestionConflict describes a response with status code 409, with default header values.

Cannot create the OpenTelemetryMetricsIngestion because there is a conflict with an existing OpenTelemetryMetricsIngestion.
*/
type CreateOpenTelemetryMetricsIngestionConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create open telemetry metrics ingestion conflict response has a 2xx status code
func (o *CreateOpenTelemetryMetricsIngestionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create open telemetry metrics ingestion conflict response has a 3xx status code
func (o *CreateOpenTelemetryMetricsIngestionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create open telemetry metrics ingestion conflict response has a 4xx status code
func (o *CreateOpenTelemetryMetricsIngestionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create open telemetry metrics ingestion conflict response has a 5xx status code
func (o *CreateOpenTelemetryMetricsIngestionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create open telemetry metrics ingestion conflict response a status code equal to that given
func (o *CreateOpenTelemetryMetricsIngestionConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create open telemetry metrics ingestion conflict response
func (o *CreateOpenTelemetryMetricsIngestionConflict) Code() int {
	return 409
}

func (o *CreateOpenTelemetryMetricsIngestionConflict) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] createOpenTelemetryMetricsIngestionConflict  %+v", 409, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionConflict) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] createOpenTelemetryMetricsIngestionConflict  %+v", 409, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateOpenTelemetryMetricsIngestionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOpenTelemetryMetricsIngestionInternalServerError creates a CreateOpenTelemetryMetricsIngestionInternalServerError with default headers values
func NewCreateOpenTelemetryMetricsIngestionInternalServerError() *CreateOpenTelemetryMetricsIngestionInternalServerError {
	return &CreateOpenTelemetryMetricsIngestionInternalServerError{}
}

/*
CreateOpenTelemetryMetricsIngestionInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateOpenTelemetryMetricsIngestionInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create open telemetry metrics ingestion internal server error response has a 2xx status code
func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create open telemetry metrics ingestion internal server error response has a 3xx status code
func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create open telemetry metrics ingestion internal server error response has a 4xx status code
func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create open telemetry metrics ingestion internal server error response has a 5xx status code
func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create open telemetry metrics ingestion internal server error response a status code equal to that given
func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create open telemetry metrics ingestion internal server error response
func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) Code() int {
	return 500
}

func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] createOpenTelemetryMetricsIngestionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] createOpenTelemetryMetricsIngestionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateOpenTelemetryMetricsIngestionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOpenTelemetryMetricsIngestionDefault creates a CreateOpenTelemetryMetricsIngestionDefault with default headers values
func NewCreateOpenTelemetryMetricsIngestionDefault(code int) *CreateOpenTelemetryMetricsIngestionDefault {
	return &CreateOpenTelemetryMetricsIngestionDefault{
		_statusCode: code,
	}
}

/*
CreateOpenTelemetryMetricsIngestionDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateOpenTelemetryMetricsIngestionDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create open telemetry metrics ingestion default response has a 2xx status code
func (o *CreateOpenTelemetryMetricsIngestionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create open telemetry metrics ingestion default response has a 3xx status code
func (o *CreateOpenTelemetryMetricsIngestionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create open telemetry metrics ingestion default response has a 4xx status code
func (o *CreateOpenTelemetryMetricsIngestionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create open telemetry metrics ingestion default response has a 5xx status code
func (o *CreateOpenTelemetryMetricsIngestionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create open telemetry metrics ingestion default response a status code equal to that given
func (o *CreateOpenTelemetryMetricsIngestionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create open telemetry metrics ingestion default response
func (o *CreateOpenTelemetryMetricsIngestionDefault) Code() int {
	return o._statusCode
}

func (o *CreateOpenTelemetryMetricsIngestionDefault) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] CreateOpenTelemetryMetricsIngestion default  %+v", o._statusCode, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionDefault) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/open-telemetry-metrics-ingestion][%d] CreateOpenTelemetryMetricsIngestion default  %+v", o._statusCode, o.Payload)
}

func (o *CreateOpenTelemetryMetricsIngestionDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateOpenTelemetryMetricsIngestionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
