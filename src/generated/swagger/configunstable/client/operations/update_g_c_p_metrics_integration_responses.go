// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// UpdateGCPMetricsIntegrationReader is a Reader for the UpdateGCPMetricsIntegration structure.
type UpdateGCPMetricsIntegrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGCPMetricsIntegrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGCPMetricsIntegrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateGCPMetricsIntegrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateGCPMetricsIntegrationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateGCPMetricsIntegrationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateGCPMetricsIntegrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateGCPMetricsIntegrationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateGCPMetricsIntegrationOK creates a UpdateGCPMetricsIntegrationOK with default headers values
func NewUpdateGCPMetricsIntegrationOK() *UpdateGCPMetricsIntegrationOK {
	return &UpdateGCPMetricsIntegrationOK{}
}

/*
UpdateGCPMetricsIntegrationOK describes a response with status code 200, with default header values.

A successful response containing the updated GCPMetricsIntegration.
*/
type UpdateGCPMetricsIntegrationOK struct {
	Payload *models.ConfigunstableUpdateGCPMetricsIntegrationResponse
}

// IsSuccess returns true when this update g c p metrics integration o k response has a 2xx status code
func (o *UpdateGCPMetricsIntegrationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update g c p metrics integration o k response has a 3xx status code
func (o *UpdateGCPMetricsIntegrationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update g c p metrics integration o k response has a 4xx status code
func (o *UpdateGCPMetricsIntegrationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update g c p metrics integration o k response has a 5xx status code
func (o *UpdateGCPMetricsIntegrationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update g c p metrics integration o k response a status code equal to that given
func (o *UpdateGCPMetricsIntegrationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update g c p metrics integration o k response
func (o *UpdateGCPMetricsIntegrationOK) Code() int {
	return 200
}

func (o *UpdateGCPMetricsIntegrationOK) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationOK  %+v", 200, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationOK) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationOK  %+v", 200, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationOK) GetPayload() *models.ConfigunstableUpdateGCPMetricsIntegrationResponse {
	return o.Payload
}

func (o *UpdateGCPMetricsIntegrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableUpdateGCPMetricsIntegrationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGCPMetricsIntegrationBadRequest creates a UpdateGCPMetricsIntegrationBadRequest with default headers values
func NewUpdateGCPMetricsIntegrationBadRequest() *UpdateGCPMetricsIntegrationBadRequest {
	return &UpdateGCPMetricsIntegrationBadRequest{}
}

/*
UpdateGCPMetricsIntegrationBadRequest describes a response with status code 400, with default header values.

Cannot update the GCPMetricsIntegration because the request is invalid.
*/
type UpdateGCPMetricsIntegrationBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update g c p metrics integration bad request response has a 2xx status code
func (o *UpdateGCPMetricsIntegrationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update g c p metrics integration bad request response has a 3xx status code
func (o *UpdateGCPMetricsIntegrationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update g c p metrics integration bad request response has a 4xx status code
func (o *UpdateGCPMetricsIntegrationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update g c p metrics integration bad request response has a 5xx status code
func (o *UpdateGCPMetricsIntegrationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update g c p metrics integration bad request response a status code equal to that given
func (o *UpdateGCPMetricsIntegrationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update g c p metrics integration bad request response
func (o *UpdateGCPMetricsIntegrationBadRequest) Code() int {
	return 400
}

func (o *UpdateGCPMetricsIntegrationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateGCPMetricsIntegrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGCPMetricsIntegrationNotFound creates a UpdateGCPMetricsIntegrationNotFound with default headers values
func NewUpdateGCPMetricsIntegrationNotFound() *UpdateGCPMetricsIntegrationNotFound {
	return &UpdateGCPMetricsIntegrationNotFound{}
}

/*
UpdateGCPMetricsIntegrationNotFound describes a response with status code 404, with default header values.

Cannot update the GCPMetricsIntegration because the slug does not exist.
*/
type UpdateGCPMetricsIntegrationNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update g c p metrics integration not found response has a 2xx status code
func (o *UpdateGCPMetricsIntegrationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update g c p metrics integration not found response has a 3xx status code
func (o *UpdateGCPMetricsIntegrationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update g c p metrics integration not found response has a 4xx status code
func (o *UpdateGCPMetricsIntegrationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update g c p metrics integration not found response has a 5xx status code
func (o *UpdateGCPMetricsIntegrationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update g c p metrics integration not found response a status code equal to that given
func (o *UpdateGCPMetricsIntegrationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update g c p metrics integration not found response
func (o *UpdateGCPMetricsIntegrationNotFound) Code() int {
	return 404
}

func (o *UpdateGCPMetricsIntegrationNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationNotFound  %+v", 404, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationNotFound) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationNotFound  %+v", 404, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateGCPMetricsIntegrationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGCPMetricsIntegrationConflict creates a UpdateGCPMetricsIntegrationConflict with default headers values
func NewUpdateGCPMetricsIntegrationConflict() *UpdateGCPMetricsIntegrationConflict {
	return &UpdateGCPMetricsIntegrationConflict{}
}

/*
UpdateGCPMetricsIntegrationConflict describes a response with status code 409, with default header values.

Cannot update the GCPMetricsIntegration because there is a conflict with an existing GCPMetricsIntegration.
*/
type UpdateGCPMetricsIntegrationConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update g c p metrics integration conflict response has a 2xx status code
func (o *UpdateGCPMetricsIntegrationConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update g c p metrics integration conflict response has a 3xx status code
func (o *UpdateGCPMetricsIntegrationConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update g c p metrics integration conflict response has a 4xx status code
func (o *UpdateGCPMetricsIntegrationConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update g c p metrics integration conflict response has a 5xx status code
func (o *UpdateGCPMetricsIntegrationConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update g c p metrics integration conflict response a status code equal to that given
func (o *UpdateGCPMetricsIntegrationConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update g c p metrics integration conflict response
func (o *UpdateGCPMetricsIntegrationConflict) Code() int {
	return 409
}

func (o *UpdateGCPMetricsIntegrationConflict) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationConflict  %+v", 409, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationConflict) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationConflict  %+v", 409, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateGCPMetricsIntegrationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGCPMetricsIntegrationInternalServerError creates a UpdateGCPMetricsIntegrationInternalServerError with default headers values
func NewUpdateGCPMetricsIntegrationInternalServerError() *UpdateGCPMetricsIntegrationInternalServerError {
	return &UpdateGCPMetricsIntegrationInternalServerError{}
}

/*
UpdateGCPMetricsIntegrationInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type UpdateGCPMetricsIntegrationInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update g c p metrics integration internal server error response has a 2xx status code
func (o *UpdateGCPMetricsIntegrationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update g c p metrics integration internal server error response has a 3xx status code
func (o *UpdateGCPMetricsIntegrationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update g c p metrics integration internal server error response has a 4xx status code
func (o *UpdateGCPMetricsIntegrationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update g c p metrics integration internal server error response has a 5xx status code
func (o *UpdateGCPMetricsIntegrationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update g c p metrics integration internal server error response a status code equal to that given
func (o *UpdateGCPMetricsIntegrationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update g c p metrics integration internal server error response
func (o *UpdateGCPMetricsIntegrationInternalServerError) Code() int {
	return 500
}

func (o *UpdateGCPMetricsIntegrationInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] updateGCPMetricsIntegrationInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateGCPMetricsIntegrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGCPMetricsIntegrationDefault creates a UpdateGCPMetricsIntegrationDefault with default headers values
func NewUpdateGCPMetricsIntegrationDefault(code int) *UpdateGCPMetricsIntegrationDefault {
	return &UpdateGCPMetricsIntegrationDefault{
		_statusCode: code,
	}
}

/*
UpdateGCPMetricsIntegrationDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type UpdateGCPMetricsIntegrationDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this update g c p metrics integration default response has a 2xx status code
func (o *UpdateGCPMetricsIntegrationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update g c p metrics integration default response has a 3xx status code
func (o *UpdateGCPMetricsIntegrationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update g c p metrics integration default response has a 4xx status code
func (o *UpdateGCPMetricsIntegrationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update g c p metrics integration default response has a 5xx status code
func (o *UpdateGCPMetricsIntegrationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update g c p metrics integration default response a status code equal to that given
func (o *UpdateGCPMetricsIntegrationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update g c p metrics integration default response
func (o *UpdateGCPMetricsIntegrationDefault) Code() int {
	return o._statusCode
}

func (o *UpdateGCPMetricsIntegrationDefault) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] UpdateGCPMetricsIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationDefault) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/gcp-metrics-integrations/{slug}][%d] UpdateGCPMetricsIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateGCPMetricsIntegrationDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *UpdateGCPMetricsIntegrationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UpdateGCPMetricsIntegrationBody update g c p metrics integration body
swagger:model UpdateGCPMetricsIntegrationBody
*/
type UpdateGCPMetricsIntegrationBody struct {

	// If true, the GCPMetricsIntegration will be created if it does not already exist, identified by slug. If false, an error will be returned if the GCPMetricsIntegration does not already exist.
	CreateIfMissing bool `json:"create_if_missing,omitempty"`

	// If true, the GCPMetricsIntegration will not be created nor updated, and no response GCPMetricsIntegration will be returned. The response will return an error if the given GCPMetricsIntegration is invalid.
	DryRun bool `json:"dry_run,omitempty"`

	// gcp metrics integration
	GcpMetricsIntegration *models.ConfigunstableGCPMetricsIntegration `json:"gcp_metrics_integration,omitempty"`
}

// Validate validates this update g c p metrics integration body
func (o *UpdateGCPMetricsIntegrationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateGcpMetricsIntegration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateGCPMetricsIntegrationBody) validateGcpMetricsIntegration(formats strfmt.Registry) error {
	if swag.IsZero(o.GcpMetricsIntegration) { // not required
		return nil
	}

	if o.GcpMetricsIntegration != nil {
		if err := o.GcpMetricsIntegration.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "gcp_metrics_integration")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "gcp_metrics_integration")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this update g c p metrics integration body based on the context it is used
func (o *UpdateGCPMetricsIntegrationBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateGcpMetricsIntegration(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateGCPMetricsIntegrationBody) contextValidateGcpMetricsIntegration(ctx context.Context, formats strfmt.Registry) error {

	if o.GcpMetricsIntegration != nil {

		if swag.IsZero(o.GcpMetricsIntegration) { // not required
			return nil
		}

		if err := o.GcpMetricsIntegration.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "gcp_metrics_integration")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "gcp_metrics_integration")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateGCPMetricsIntegrationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateGCPMetricsIntegrationBody) UnmarshalBinary(b []byte) error {
	var res UpdateGCPMetricsIntegrationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
