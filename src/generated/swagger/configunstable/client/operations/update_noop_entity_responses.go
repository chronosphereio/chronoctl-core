// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// UpdateNoopEntityReader is a Reader for the UpdateNoopEntity structure.
type UpdateNoopEntityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNoopEntityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNoopEntityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateNoopEntityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateNoopEntityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateNoopEntityConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateNoopEntityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateNoopEntityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateNoopEntityOK creates a UpdateNoopEntityOK with default headers values
func NewUpdateNoopEntityOK() *UpdateNoopEntityOK {
	return &UpdateNoopEntityOK{}
}

/*
UpdateNoopEntityOK describes a response with status code 200, with default header values.

A successful response containing the updated NoopEntity.
*/
type UpdateNoopEntityOK struct {
	Payload *models.ConfigunstableUpdateNoopEntityResponse
}

// IsSuccess returns true when this update noop entity o k response has a 2xx status code
func (o *UpdateNoopEntityOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update noop entity o k response has a 3xx status code
func (o *UpdateNoopEntityOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update noop entity o k response has a 4xx status code
func (o *UpdateNoopEntityOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update noop entity o k response has a 5xx status code
func (o *UpdateNoopEntityOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update noop entity o k response a status code equal to that given
func (o *UpdateNoopEntityOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update noop entity o k response
func (o *UpdateNoopEntityOK) Code() int {
	return 200
}

func (o *UpdateNoopEntityOK) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityOK  %+v", 200, o.Payload)
}

func (o *UpdateNoopEntityOK) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityOK  %+v", 200, o.Payload)
}

func (o *UpdateNoopEntityOK) GetPayload() *models.ConfigunstableUpdateNoopEntityResponse {
	return o.Payload
}

func (o *UpdateNoopEntityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableUpdateNoopEntityResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNoopEntityBadRequest creates a UpdateNoopEntityBadRequest with default headers values
func NewUpdateNoopEntityBadRequest() *UpdateNoopEntityBadRequest {
	return &UpdateNoopEntityBadRequest{}
}

/*
UpdateNoopEntityBadRequest describes a response with status code 400, with default header values.

Cannot update the NoopEntity because the request is invalid.
*/
type UpdateNoopEntityBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update noop entity bad request response has a 2xx status code
func (o *UpdateNoopEntityBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update noop entity bad request response has a 3xx status code
func (o *UpdateNoopEntityBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update noop entity bad request response has a 4xx status code
func (o *UpdateNoopEntityBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update noop entity bad request response has a 5xx status code
func (o *UpdateNoopEntityBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update noop entity bad request response a status code equal to that given
func (o *UpdateNoopEntityBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update noop entity bad request response
func (o *UpdateNoopEntityBadRequest) Code() int {
	return 400
}

func (o *UpdateNoopEntityBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateNoopEntityBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateNoopEntityBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateNoopEntityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNoopEntityNotFound creates a UpdateNoopEntityNotFound with default headers values
func NewUpdateNoopEntityNotFound() *UpdateNoopEntityNotFound {
	return &UpdateNoopEntityNotFound{}
}

/*
UpdateNoopEntityNotFound describes a response with status code 404, with default header values.

Cannot update the NoopEntity because the slug does not exist.
*/
type UpdateNoopEntityNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update noop entity not found response has a 2xx status code
func (o *UpdateNoopEntityNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update noop entity not found response has a 3xx status code
func (o *UpdateNoopEntityNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update noop entity not found response has a 4xx status code
func (o *UpdateNoopEntityNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update noop entity not found response has a 5xx status code
func (o *UpdateNoopEntityNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update noop entity not found response a status code equal to that given
func (o *UpdateNoopEntityNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update noop entity not found response
func (o *UpdateNoopEntityNotFound) Code() int {
	return 404
}

func (o *UpdateNoopEntityNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityNotFound  %+v", 404, o.Payload)
}

func (o *UpdateNoopEntityNotFound) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityNotFound  %+v", 404, o.Payload)
}

func (o *UpdateNoopEntityNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateNoopEntityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNoopEntityConflict creates a UpdateNoopEntityConflict with default headers values
func NewUpdateNoopEntityConflict() *UpdateNoopEntityConflict {
	return &UpdateNoopEntityConflict{}
}

/*
UpdateNoopEntityConflict describes a response with status code 409, with default header values.

Cannot update the NoopEntity because there is a conflict with an existing NoopEntity.
*/
type UpdateNoopEntityConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update noop entity conflict response has a 2xx status code
func (o *UpdateNoopEntityConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update noop entity conflict response has a 3xx status code
func (o *UpdateNoopEntityConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update noop entity conflict response has a 4xx status code
func (o *UpdateNoopEntityConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update noop entity conflict response has a 5xx status code
func (o *UpdateNoopEntityConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update noop entity conflict response a status code equal to that given
func (o *UpdateNoopEntityConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update noop entity conflict response
func (o *UpdateNoopEntityConflict) Code() int {
	return 409
}

func (o *UpdateNoopEntityConflict) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityConflict  %+v", 409, o.Payload)
}

func (o *UpdateNoopEntityConflict) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityConflict  %+v", 409, o.Payload)
}

func (o *UpdateNoopEntityConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateNoopEntityConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNoopEntityInternalServerError creates a UpdateNoopEntityInternalServerError with default headers values
func NewUpdateNoopEntityInternalServerError() *UpdateNoopEntityInternalServerError {
	return &UpdateNoopEntityInternalServerError{}
}

/*
UpdateNoopEntityInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type UpdateNoopEntityInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update noop entity internal server error response has a 2xx status code
func (o *UpdateNoopEntityInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update noop entity internal server error response has a 3xx status code
func (o *UpdateNoopEntityInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update noop entity internal server error response has a 4xx status code
func (o *UpdateNoopEntityInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update noop entity internal server error response has a 5xx status code
func (o *UpdateNoopEntityInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update noop entity internal server error response a status code equal to that given
func (o *UpdateNoopEntityInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update noop entity internal server error response
func (o *UpdateNoopEntityInternalServerError) Code() int {
	return 500
}

func (o *UpdateNoopEntityInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateNoopEntityInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] updateNoopEntityInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateNoopEntityInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateNoopEntityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNoopEntityDefault creates a UpdateNoopEntityDefault with default headers values
func NewUpdateNoopEntityDefault(code int) *UpdateNoopEntityDefault {
	return &UpdateNoopEntityDefault{
		_statusCode: code,
	}
}

/*
UpdateNoopEntityDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type UpdateNoopEntityDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this update noop entity default response has a 2xx status code
func (o *UpdateNoopEntityDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update noop entity default response has a 3xx status code
func (o *UpdateNoopEntityDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update noop entity default response has a 4xx status code
func (o *UpdateNoopEntityDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update noop entity default response has a 5xx status code
func (o *UpdateNoopEntityDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update noop entity default response a status code equal to that given
func (o *UpdateNoopEntityDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update noop entity default response
func (o *UpdateNoopEntityDefault) Code() int {
	return o._statusCode
}

func (o *UpdateNoopEntityDefault) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] UpdateNoopEntity default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateNoopEntityDefault) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/noop-entities/{slug}][%d] UpdateNoopEntity default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateNoopEntityDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *UpdateNoopEntityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
