// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// UpdateOpenTelemetryMetricsIngestionReader is a Reader for the UpdateOpenTelemetryMetricsIngestion structure.
type UpdateOpenTelemetryMetricsIngestionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOpenTelemetryMetricsIngestionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOpenTelemetryMetricsIngestionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOpenTelemetryMetricsIngestionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateOpenTelemetryMetricsIngestionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateOpenTelemetryMetricsIngestionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateOpenTelemetryMetricsIngestionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateOpenTelemetryMetricsIngestionOK creates a UpdateOpenTelemetryMetricsIngestionOK with default headers values
func NewUpdateOpenTelemetryMetricsIngestionOK() *UpdateOpenTelemetryMetricsIngestionOK {
	return &UpdateOpenTelemetryMetricsIngestionOK{}
}

/*
UpdateOpenTelemetryMetricsIngestionOK describes a response with status code 200, with default header values.

A successful response containing the updated OpenTelemetryMetricsIngestion.
*/
type UpdateOpenTelemetryMetricsIngestionOK struct {
	Payload *models.ConfigunstableUpdateOpenTelemetryMetricsIngestionResponse
}

// IsSuccess returns true when this update open telemetry metrics ingestion o k response has a 2xx status code
func (o *UpdateOpenTelemetryMetricsIngestionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update open telemetry metrics ingestion o k response has a 3xx status code
func (o *UpdateOpenTelemetryMetricsIngestionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update open telemetry metrics ingestion o k response has a 4xx status code
func (o *UpdateOpenTelemetryMetricsIngestionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update open telemetry metrics ingestion o k response has a 5xx status code
func (o *UpdateOpenTelemetryMetricsIngestionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update open telemetry metrics ingestion o k response a status code equal to that given
func (o *UpdateOpenTelemetryMetricsIngestionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update open telemetry metrics ingestion o k response
func (o *UpdateOpenTelemetryMetricsIngestionOK) Code() int {
	return 200
}

func (o *UpdateOpenTelemetryMetricsIngestionOK) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] updateOpenTelemetryMetricsIngestionOK  %+v", 200, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionOK) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] updateOpenTelemetryMetricsIngestionOK  %+v", 200, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionOK) GetPayload() *models.ConfigunstableUpdateOpenTelemetryMetricsIngestionResponse {
	return o.Payload
}

func (o *UpdateOpenTelemetryMetricsIngestionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableUpdateOpenTelemetryMetricsIngestionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOpenTelemetryMetricsIngestionBadRequest creates a UpdateOpenTelemetryMetricsIngestionBadRequest with default headers values
func NewUpdateOpenTelemetryMetricsIngestionBadRequest() *UpdateOpenTelemetryMetricsIngestionBadRequest {
	return &UpdateOpenTelemetryMetricsIngestionBadRequest{}
}

/*
UpdateOpenTelemetryMetricsIngestionBadRequest describes a response with status code 400, with default header values.

Cannot update the OpenTelemetryMetricsIngestion because the request is invalid.
*/
type UpdateOpenTelemetryMetricsIngestionBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update open telemetry metrics ingestion bad request response has a 2xx status code
func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update open telemetry metrics ingestion bad request response has a 3xx status code
func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update open telemetry metrics ingestion bad request response has a 4xx status code
func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update open telemetry metrics ingestion bad request response has a 5xx status code
func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update open telemetry metrics ingestion bad request response a status code equal to that given
func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update open telemetry metrics ingestion bad request response
func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) Code() int {
	return 400
}

func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] updateOpenTelemetryMetricsIngestionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] updateOpenTelemetryMetricsIngestionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateOpenTelemetryMetricsIngestionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOpenTelemetryMetricsIngestionNotFound creates a UpdateOpenTelemetryMetricsIngestionNotFound with default headers values
func NewUpdateOpenTelemetryMetricsIngestionNotFound() *UpdateOpenTelemetryMetricsIngestionNotFound {
	return &UpdateOpenTelemetryMetricsIngestionNotFound{}
}

/*
UpdateOpenTelemetryMetricsIngestionNotFound describes a response with status code 404, with default header values.

Cannot update the OpenTelemetryMetricsIngestion because OpenTelemetryMetricsIngestion has not been created.
*/
type UpdateOpenTelemetryMetricsIngestionNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update open telemetry metrics ingestion not found response has a 2xx status code
func (o *UpdateOpenTelemetryMetricsIngestionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update open telemetry metrics ingestion not found response has a 3xx status code
func (o *UpdateOpenTelemetryMetricsIngestionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update open telemetry metrics ingestion not found response has a 4xx status code
func (o *UpdateOpenTelemetryMetricsIngestionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update open telemetry metrics ingestion not found response has a 5xx status code
func (o *UpdateOpenTelemetryMetricsIngestionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update open telemetry metrics ingestion not found response a status code equal to that given
func (o *UpdateOpenTelemetryMetricsIngestionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update open telemetry metrics ingestion not found response
func (o *UpdateOpenTelemetryMetricsIngestionNotFound) Code() int {
	return 404
}

func (o *UpdateOpenTelemetryMetricsIngestionNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] updateOpenTelemetryMetricsIngestionNotFound  %+v", 404, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionNotFound) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] updateOpenTelemetryMetricsIngestionNotFound  %+v", 404, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateOpenTelemetryMetricsIngestionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOpenTelemetryMetricsIngestionInternalServerError creates a UpdateOpenTelemetryMetricsIngestionInternalServerError with default headers values
func NewUpdateOpenTelemetryMetricsIngestionInternalServerError() *UpdateOpenTelemetryMetricsIngestionInternalServerError {
	return &UpdateOpenTelemetryMetricsIngestionInternalServerError{}
}

/*
UpdateOpenTelemetryMetricsIngestionInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type UpdateOpenTelemetryMetricsIngestionInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update open telemetry metrics ingestion internal server error response has a 2xx status code
func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update open telemetry metrics ingestion internal server error response has a 3xx status code
func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update open telemetry metrics ingestion internal server error response has a 4xx status code
func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update open telemetry metrics ingestion internal server error response has a 5xx status code
func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update open telemetry metrics ingestion internal server error response a status code equal to that given
func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update open telemetry metrics ingestion internal server error response
func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) Code() int {
	return 500
}

func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] updateOpenTelemetryMetricsIngestionInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] updateOpenTelemetryMetricsIngestionInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateOpenTelemetryMetricsIngestionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOpenTelemetryMetricsIngestionDefault creates a UpdateOpenTelemetryMetricsIngestionDefault with default headers values
func NewUpdateOpenTelemetryMetricsIngestionDefault(code int) *UpdateOpenTelemetryMetricsIngestionDefault {
	return &UpdateOpenTelemetryMetricsIngestionDefault{
		_statusCode: code,
	}
}

/*
UpdateOpenTelemetryMetricsIngestionDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type UpdateOpenTelemetryMetricsIngestionDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this update open telemetry metrics ingestion default response has a 2xx status code
func (o *UpdateOpenTelemetryMetricsIngestionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update open telemetry metrics ingestion default response has a 3xx status code
func (o *UpdateOpenTelemetryMetricsIngestionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update open telemetry metrics ingestion default response has a 4xx status code
func (o *UpdateOpenTelemetryMetricsIngestionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update open telemetry metrics ingestion default response has a 5xx status code
func (o *UpdateOpenTelemetryMetricsIngestionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update open telemetry metrics ingestion default response a status code equal to that given
func (o *UpdateOpenTelemetryMetricsIngestionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update open telemetry metrics ingestion default response
func (o *UpdateOpenTelemetryMetricsIngestionDefault) Code() int {
	return o._statusCode
}

func (o *UpdateOpenTelemetryMetricsIngestionDefault) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] UpdateOpenTelemetryMetricsIngestion default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionDefault) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/open-telemetry-metrics-ingestion][%d] UpdateOpenTelemetryMetricsIngestion default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateOpenTelemetryMetricsIngestionDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *UpdateOpenTelemetryMetricsIngestionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
