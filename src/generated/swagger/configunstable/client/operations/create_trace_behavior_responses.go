// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// CreateTraceBehaviorReader is a Reader for the CreateTraceBehavior structure.
type CreateTraceBehaviorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTraceBehaviorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateTraceBehaviorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateTraceBehaviorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateTraceBehaviorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateTraceBehaviorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateTraceBehaviorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateTraceBehaviorOK creates a CreateTraceBehaviorOK with default headers values
func NewCreateTraceBehaviorOK() *CreateTraceBehaviorOK {
	return &CreateTraceBehaviorOK{}
}

/*
CreateTraceBehaviorOK describes a response with status code 200, with default header values.

A successful response containing the created TraceBehavior.
*/
type CreateTraceBehaviorOK struct {
	Payload *models.ConfigunstableCreateTraceBehaviorResponse
}

// IsSuccess returns true when this create trace behavior o k response has a 2xx status code
func (o *CreateTraceBehaviorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create trace behavior o k response has a 3xx status code
func (o *CreateTraceBehaviorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create trace behavior o k response has a 4xx status code
func (o *CreateTraceBehaviorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create trace behavior o k response has a 5xx status code
func (o *CreateTraceBehaviorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create trace behavior o k response a status code equal to that given
func (o *CreateTraceBehaviorOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create trace behavior o k response
func (o *CreateTraceBehaviorOK) Code() int {
	return 200
}

func (o *CreateTraceBehaviorOK) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] createTraceBehaviorOK  %+v", 200, o.Payload)
}

func (o *CreateTraceBehaviorOK) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] createTraceBehaviorOK  %+v", 200, o.Payload)
}

func (o *CreateTraceBehaviorOK) GetPayload() *models.ConfigunstableCreateTraceBehaviorResponse {
	return o.Payload
}

func (o *CreateTraceBehaviorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableCreateTraceBehaviorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTraceBehaviorBadRequest creates a CreateTraceBehaviorBadRequest with default headers values
func NewCreateTraceBehaviorBadRequest() *CreateTraceBehaviorBadRequest {
	return &CreateTraceBehaviorBadRequest{}
}

/*
CreateTraceBehaviorBadRequest describes a response with status code 400, with default header values.

Cannot create the TraceBehavior because the request is invalid.
*/
type CreateTraceBehaviorBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create trace behavior bad request response has a 2xx status code
func (o *CreateTraceBehaviorBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create trace behavior bad request response has a 3xx status code
func (o *CreateTraceBehaviorBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create trace behavior bad request response has a 4xx status code
func (o *CreateTraceBehaviorBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create trace behavior bad request response has a 5xx status code
func (o *CreateTraceBehaviorBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create trace behavior bad request response a status code equal to that given
func (o *CreateTraceBehaviorBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create trace behavior bad request response
func (o *CreateTraceBehaviorBadRequest) Code() int {
	return 400
}

func (o *CreateTraceBehaviorBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] createTraceBehaviorBadRequest  %+v", 400, o.Payload)
}

func (o *CreateTraceBehaviorBadRequest) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] createTraceBehaviorBadRequest  %+v", 400, o.Payload)
}

func (o *CreateTraceBehaviorBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateTraceBehaviorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTraceBehaviorConflict creates a CreateTraceBehaviorConflict with default headers values
func NewCreateTraceBehaviorConflict() *CreateTraceBehaviorConflict {
	return &CreateTraceBehaviorConflict{}
}

/*
CreateTraceBehaviorConflict describes a response with status code 409, with default header values.

Cannot create the TraceBehavior because there is a conflict with an existing TraceBehavior.
*/
type CreateTraceBehaviorConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create trace behavior conflict response has a 2xx status code
func (o *CreateTraceBehaviorConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create trace behavior conflict response has a 3xx status code
func (o *CreateTraceBehaviorConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create trace behavior conflict response has a 4xx status code
func (o *CreateTraceBehaviorConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create trace behavior conflict response has a 5xx status code
func (o *CreateTraceBehaviorConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create trace behavior conflict response a status code equal to that given
func (o *CreateTraceBehaviorConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create trace behavior conflict response
func (o *CreateTraceBehaviorConflict) Code() int {
	return 409
}

func (o *CreateTraceBehaviorConflict) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] createTraceBehaviorConflict  %+v", 409, o.Payload)
}

func (o *CreateTraceBehaviorConflict) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] createTraceBehaviorConflict  %+v", 409, o.Payload)
}

func (o *CreateTraceBehaviorConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateTraceBehaviorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTraceBehaviorInternalServerError creates a CreateTraceBehaviorInternalServerError with default headers values
func NewCreateTraceBehaviorInternalServerError() *CreateTraceBehaviorInternalServerError {
	return &CreateTraceBehaviorInternalServerError{}
}

/*
CreateTraceBehaviorInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateTraceBehaviorInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create trace behavior internal server error response has a 2xx status code
func (o *CreateTraceBehaviorInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create trace behavior internal server error response has a 3xx status code
func (o *CreateTraceBehaviorInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create trace behavior internal server error response has a 4xx status code
func (o *CreateTraceBehaviorInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create trace behavior internal server error response has a 5xx status code
func (o *CreateTraceBehaviorInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create trace behavior internal server error response a status code equal to that given
func (o *CreateTraceBehaviorInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create trace behavior internal server error response
func (o *CreateTraceBehaviorInternalServerError) Code() int {
	return 500
}

func (o *CreateTraceBehaviorInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] createTraceBehaviorInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateTraceBehaviorInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] createTraceBehaviorInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateTraceBehaviorInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateTraceBehaviorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTraceBehaviorDefault creates a CreateTraceBehaviorDefault with default headers values
func NewCreateTraceBehaviorDefault(code int) *CreateTraceBehaviorDefault {
	return &CreateTraceBehaviorDefault{
		_statusCode: code,
	}
}

/*
CreateTraceBehaviorDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateTraceBehaviorDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create trace behavior default response has a 2xx status code
func (o *CreateTraceBehaviorDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create trace behavior default response has a 3xx status code
func (o *CreateTraceBehaviorDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create trace behavior default response has a 4xx status code
func (o *CreateTraceBehaviorDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create trace behavior default response has a 5xx status code
func (o *CreateTraceBehaviorDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create trace behavior default response a status code equal to that given
func (o *CreateTraceBehaviorDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create trace behavior default response
func (o *CreateTraceBehaviorDefault) Code() int {
	return o._statusCode
}

func (o *CreateTraceBehaviorDefault) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] CreateTraceBehavior default  %+v", o._statusCode, o.Payload)
}

func (o *CreateTraceBehaviorDefault) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-behaviors][%d] CreateTraceBehavior default  %+v", o._statusCode, o.Payload)
}

func (o *CreateTraceBehaviorDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateTraceBehaviorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
