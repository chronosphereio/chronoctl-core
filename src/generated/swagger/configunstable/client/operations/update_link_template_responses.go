// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// UpdateLinkTemplateReader is a Reader for the UpdateLinkTemplate structure.
type UpdateLinkTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLinkTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLinkTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLinkTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLinkTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateLinkTemplateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateLinkTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateLinkTemplateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateLinkTemplateOK creates a UpdateLinkTemplateOK with default headers values
func NewUpdateLinkTemplateOK() *UpdateLinkTemplateOK {
	return &UpdateLinkTemplateOK{}
}

/*
UpdateLinkTemplateOK describes a response with status code 200, with default header values.

A successful response containing the updated LinkTemplate.
*/
type UpdateLinkTemplateOK struct {
	Payload *models.ConfigunstableUpdateLinkTemplateResponse
}

// IsSuccess returns true when this update link template o k response has a 2xx status code
func (o *UpdateLinkTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update link template o k response has a 3xx status code
func (o *UpdateLinkTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update link template o k response has a 4xx status code
func (o *UpdateLinkTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update link template o k response has a 5xx status code
func (o *UpdateLinkTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update link template o k response a status code equal to that given
func (o *UpdateLinkTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update link template o k response
func (o *UpdateLinkTemplateOK) Code() int {
	return 200
}

func (o *UpdateLinkTemplateOK) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateOK  %+v", 200, o.Payload)
}

func (o *UpdateLinkTemplateOK) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateOK  %+v", 200, o.Payload)
}

func (o *UpdateLinkTemplateOK) GetPayload() *models.ConfigunstableUpdateLinkTemplateResponse {
	return o.Payload
}

func (o *UpdateLinkTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableUpdateLinkTemplateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLinkTemplateBadRequest creates a UpdateLinkTemplateBadRequest with default headers values
func NewUpdateLinkTemplateBadRequest() *UpdateLinkTemplateBadRequest {
	return &UpdateLinkTemplateBadRequest{}
}

/*
UpdateLinkTemplateBadRequest describes a response with status code 400, with default header values.

Cannot update the LinkTemplate because the request is invalid.
*/
type UpdateLinkTemplateBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update link template bad request response has a 2xx status code
func (o *UpdateLinkTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update link template bad request response has a 3xx status code
func (o *UpdateLinkTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update link template bad request response has a 4xx status code
func (o *UpdateLinkTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update link template bad request response has a 5xx status code
func (o *UpdateLinkTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update link template bad request response a status code equal to that given
func (o *UpdateLinkTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update link template bad request response
func (o *UpdateLinkTemplateBadRequest) Code() int {
	return 400
}

func (o *UpdateLinkTemplateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLinkTemplateBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLinkTemplateBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateLinkTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLinkTemplateNotFound creates a UpdateLinkTemplateNotFound with default headers values
func NewUpdateLinkTemplateNotFound() *UpdateLinkTemplateNotFound {
	return &UpdateLinkTemplateNotFound{}
}

/*
UpdateLinkTemplateNotFound describes a response with status code 404, with default header values.

Cannot update the LinkTemplate because the slug does not exist.
*/
type UpdateLinkTemplateNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update link template not found response has a 2xx status code
func (o *UpdateLinkTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update link template not found response has a 3xx status code
func (o *UpdateLinkTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update link template not found response has a 4xx status code
func (o *UpdateLinkTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update link template not found response has a 5xx status code
func (o *UpdateLinkTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update link template not found response a status code equal to that given
func (o *UpdateLinkTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update link template not found response
func (o *UpdateLinkTemplateNotFound) Code() int {
	return 404
}

func (o *UpdateLinkTemplateNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateNotFound  %+v", 404, o.Payload)
}

func (o *UpdateLinkTemplateNotFound) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateNotFound  %+v", 404, o.Payload)
}

func (o *UpdateLinkTemplateNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateLinkTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLinkTemplateConflict creates a UpdateLinkTemplateConflict with default headers values
func NewUpdateLinkTemplateConflict() *UpdateLinkTemplateConflict {
	return &UpdateLinkTemplateConflict{}
}

/*
UpdateLinkTemplateConflict describes a response with status code 409, with default header values.

Cannot update the LinkTemplate because there is a conflict with an existing LinkTemplate.
*/
type UpdateLinkTemplateConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update link template conflict response has a 2xx status code
func (o *UpdateLinkTemplateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update link template conflict response has a 3xx status code
func (o *UpdateLinkTemplateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update link template conflict response has a 4xx status code
func (o *UpdateLinkTemplateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update link template conflict response has a 5xx status code
func (o *UpdateLinkTemplateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update link template conflict response a status code equal to that given
func (o *UpdateLinkTemplateConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update link template conflict response
func (o *UpdateLinkTemplateConflict) Code() int {
	return 409
}

func (o *UpdateLinkTemplateConflict) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateConflict  %+v", 409, o.Payload)
}

func (o *UpdateLinkTemplateConflict) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateConflict  %+v", 409, o.Payload)
}

func (o *UpdateLinkTemplateConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateLinkTemplateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLinkTemplateInternalServerError creates a UpdateLinkTemplateInternalServerError with default headers values
func NewUpdateLinkTemplateInternalServerError() *UpdateLinkTemplateInternalServerError {
	return &UpdateLinkTemplateInternalServerError{}
}

/*
UpdateLinkTemplateInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type UpdateLinkTemplateInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this update link template internal server error response has a 2xx status code
func (o *UpdateLinkTemplateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update link template internal server error response has a 3xx status code
func (o *UpdateLinkTemplateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update link template internal server error response has a 4xx status code
func (o *UpdateLinkTemplateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update link template internal server error response has a 5xx status code
func (o *UpdateLinkTemplateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update link template internal server error response a status code equal to that given
func (o *UpdateLinkTemplateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update link template internal server error response
func (o *UpdateLinkTemplateInternalServerError) Code() int {
	return 500
}

func (o *UpdateLinkTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateLinkTemplateInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] updateLinkTemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateLinkTemplateInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateLinkTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLinkTemplateDefault creates a UpdateLinkTemplateDefault with default headers values
func NewUpdateLinkTemplateDefault(code int) *UpdateLinkTemplateDefault {
	return &UpdateLinkTemplateDefault{
		_statusCode: code,
	}
}

/*
UpdateLinkTemplateDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type UpdateLinkTemplateDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this update link template default response has a 2xx status code
func (o *UpdateLinkTemplateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update link template default response has a 3xx status code
func (o *UpdateLinkTemplateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update link template default response has a 4xx status code
func (o *UpdateLinkTemplateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update link template default response has a 5xx status code
func (o *UpdateLinkTemplateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update link template default response a status code equal to that given
func (o *UpdateLinkTemplateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update link template default response
func (o *UpdateLinkTemplateDefault) Code() int {
	return o._statusCode
}

func (o *UpdateLinkTemplateDefault) Error() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] UpdateLinkTemplate default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateLinkTemplateDefault) String() string {
	return fmt.Sprintf("[PUT /api/unstable/config/link-templates/{slug}][%d] UpdateLinkTemplate default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateLinkTemplateDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *UpdateLinkTemplateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UpdateLinkTemplateBody update link template body
swagger:model UpdateLinkTemplateBody
*/
type UpdateLinkTemplateBody struct {

	// If true, the LinkTemplate will be created if it does not already exist, identified by slug. If false, an error will be returned if the LinkTemplate does not already exist.
	CreateIfMissing bool `json:"create_if_missing,omitempty"`

	// If true, the LinkTemplate will not be created nor updated, and no response LinkTemplate will be returned. The response will return an error if the given LinkTemplate is invalid.
	DryRun bool `json:"dry_run,omitempty"`

	// link template
	LinkTemplate *models.ConfigunstableLinkTemplate `json:"link_template,omitempty"`
}

// Validate validates this update link template body
func (o *UpdateLinkTemplateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinkTemplate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateLinkTemplateBody) validateLinkTemplate(formats strfmt.Registry) error {
	if swag.IsZero(o.LinkTemplate) { // not required
		return nil
	}

	if o.LinkTemplate != nil {
		if err := o.LinkTemplate.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "link_template")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "link_template")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this update link template body based on the context it is used
func (o *UpdateLinkTemplateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLinkTemplate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateLinkTemplateBody) contextValidateLinkTemplate(ctx context.Context, formats strfmt.Registry) error {

	if o.LinkTemplate != nil {

		if swag.IsZero(o.LinkTemplate) { // not required
			return nil
		}

		if err := o.LinkTemplate.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "link_template")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "link_template")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateLinkTemplateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateLinkTemplateBody) UnmarshalBinary(b []byte) error {
	var res UpdateLinkTemplateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
