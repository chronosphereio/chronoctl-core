// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// ReadLogBudgetReader is a Reader for the ReadLogBudget structure.
type ReadLogBudgetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadLogBudgetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadLogBudgetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadLogBudgetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadLogBudgetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadLogBudgetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadLogBudgetOK creates a ReadLogBudgetOK with default headers values
func NewReadLogBudgetOK() *ReadLogBudgetOK {
	return &ReadLogBudgetOK{}
}

/*
ReadLogBudgetOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadLogBudgetOK struct {
	Payload *models.ConfigunstableReadLogBudgetResponse
}

// IsSuccess returns true when this read log budget o k response has a 2xx status code
func (o *ReadLogBudgetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read log budget o k response has a 3xx status code
func (o *ReadLogBudgetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log budget o k response has a 4xx status code
func (o *ReadLogBudgetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read log budget o k response has a 5xx status code
func (o *ReadLogBudgetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read log budget o k response a status code equal to that given
func (o *ReadLogBudgetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read log budget o k response
func (o *ReadLogBudgetOK) Code() int {
	return 200
}

func (o *ReadLogBudgetOK) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-budget][%d] readLogBudgetOK  %+v", 200, o.Payload)
}

func (o *ReadLogBudgetOK) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-budget][%d] readLogBudgetOK  %+v", 200, o.Payload)
}

func (o *ReadLogBudgetOK) GetPayload() *models.ConfigunstableReadLogBudgetResponse {
	return o.Payload
}

func (o *ReadLogBudgetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableReadLogBudgetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogBudgetNotFound creates a ReadLogBudgetNotFound with default headers values
func NewReadLogBudgetNotFound() *ReadLogBudgetNotFound {
	return &ReadLogBudgetNotFound{}
}

/*
ReadLogBudgetNotFound describes a response with status code 404, with default header values.

Cannot read the LogBudget because LogBudget has not been created.
*/
type ReadLogBudgetNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read log budget not found response has a 2xx status code
func (o *ReadLogBudgetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read log budget not found response has a 3xx status code
func (o *ReadLogBudgetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log budget not found response has a 4xx status code
func (o *ReadLogBudgetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read log budget not found response has a 5xx status code
func (o *ReadLogBudgetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read log budget not found response a status code equal to that given
func (o *ReadLogBudgetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read log budget not found response
func (o *ReadLogBudgetNotFound) Code() int {
	return 404
}

func (o *ReadLogBudgetNotFound) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-budget][%d] readLogBudgetNotFound  %+v", 404, o.Payload)
}

func (o *ReadLogBudgetNotFound) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-budget][%d] readLogBudgetNotFound  %+v", 404, o.Payload)
}

func (o *ReadLogBudgetNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadLogBudgetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogBudgetInternalServerError creates a ReadLogBudgetInternalServerError with default headers values
func NewReadLogBudgetInternalServerError() *ReadLogBudgetInternalServerError {
	return &ReadLogBudgetInternalServerError{}
}

/*
ReadLogBudgetInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadLogBudgetInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read log budget internal server error response has a 2xx status code
func (o *ReadLogBudgetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read log budget internal server error response has a 3xx status code
func (o *ReadLogBudgetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read log budget internal server error response has a 4xx status code
func (o *ReadLogBudgetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read log budget internal server error response has a 5xx status code
func (o *ReadLogBudgetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read log budget internal server error response a status code equal to that given
func (o *ReadLogBudgetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read log budget internal server error response
func (o *ReadLogBudgetInternalServerError) Code() int {
	return 500
}

func (o *ReadLogBudgetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-budget][%d] readLogBudgetInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLogBudgetInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-budget][%d] readLogBudgetInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLogBudgetInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadLogBudgetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLogBudgetDefault creates a ReadLogBudgetDefault with default headers values
func NewReadLogBudgetDefault(code int) *ReadLogBudgetDefault {
	return &ReadLogBudgetDefault{
		_statusCode: code,
	}
}

/*
ReadLogBudgetDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadLogBudgetDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read log budget default response has a 2xx status code
func (o *ReadLogBudgetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read log budget default response has a 3xx status code
func (o *ReadLogBudgetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read log budget default response has a 4xx status code
func (o *ReadLogBudgetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read log budget default response has a 5xx status code
func (o *ReadLogBudgetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read log budget default response a status code equal to that given
func (o *ReadLogBudgetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read log budget default response
func (o *ReadLogBudgetDefault) Code() int {
	return o._statusCode
}

func (o *ReadLogBudgetDefault) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-budget][%d] ReadLogBudget default  %+v", o._statusCode, o.Payload)
}

func (o *ReadLogBudgetDefault) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/log-budget][%d] ReadLogBudget default  %+v", o._statusCode, o.Payload)
}

func (o *ReadLogBudgetDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadLogBudgetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
