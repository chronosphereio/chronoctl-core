// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// CreateTraceTopTagConfigReader is a Reader for the CreateTraceTopTagConfig structure.
type CreateTraceTopTagConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTraceTopTagConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateTraceTopTagConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateTraceTopTagConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateTraceTopTagConfigConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateTraceTopTagConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateTraceTopTagConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateTraceTopTagConfigOK creates a CreateTraceTopTagConfigOK with default headers values
func NewCreateTraceTopTagConfigOK() *CreateTraceTopTagConfigOK {
	return &CreateTraceTopTagConfigOK{}
}

/*
CreateTraceTopTagConfigOK describes a response with status code 200, with default header values.

A successful response containing the created TraceTopTagConfig.
*/
type CreateTraceTopTagConfigOK struct {
	Payload *models.ConfigunstableCreateTraceTopTagConfigResponse
}

// IsSuccess returns true when this create trace top tag config o k response has a 2xx status code
func (o *CreateTraceTopTagConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create trace top tag config o k response has a 3xx status code
func (o *CreateTraceTopTagConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create trace top tag config o k response has a 4xx status code
func (o *CreateTraceTopTagConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create trace top tag config o k response has a 5xx status code
func (o *CreateTraceTopTagConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create trace top tag config o k response a status code equal to that given
func (o *CreateTraceTopTagConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create trace top tag config o k response
func (o *CreateTraceTopTagConfigOK) Code() int {
	return 200
}

func (o *CreateTraceTopTagConfigOK) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] createTraceTopTagConfigOK  %+v", 200, o.Payload)
}

func (o *CreateTraceTopTagConfigOK) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] createTraceTopTagConfigOK  %+v", 200, o.Payload)
}

func (o *CreateTraceTopTagConfigOK) GetPayload() *models.ConfigunstableCreateTraceTopTagConfigResponse {
	return o.Payload
}

func (o *CreateTraceTopTagConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableCreateTraceTopTagConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTraceTopTagConfigBadRequest creates a CreateTraceTopTagConfigBadRequest with default headers values
func NewCreateTraceTopTagConfigBadRequest() *CreateTraceTopTagConfigBadRequest {
	return &CreateTraceTopTagConfigBadRequest{}
}

/*
CreateTraceTopTagConfigBadRequest describes a response with status code 400, with default header values.

Cannot create the TraceTopTagConfig because the request is invalid.
*/
type CreateTraceTopTagConfigBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create trace top tag config bad request response has a 2xx status code
func (o *CreateTraceTopTagConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create trace top tag config bad request response has a 3xx status code
func (o *CreateTraceTopTagConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create trace top tag config bad request response has a 4xx status code
func (o *CreateTraceTopTagConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create trace top tag config bad request response has a 5xx status code
func (o *CreateTraceTopTagConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create trace top tag config bad request response a status code equal to that given
func (o *CreateTraceTopTagConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create trace top tag config bad request response
func (o *CreateTraceTopTagConfigBadRequest) Code() int {
	return 400
}

func (o *CreateTraceTopTagConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] createTraceTopTagConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateTraceTopTagConfigBadRequest) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] createTraceTopTagConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateTraceTopTagConfigBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateTraceTopTagConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTraceTopTagConfigConflict creates a CreateTraceTopTagConfigConflict with default headers values
func NewCreateTraceTopTagConfigConflict() *CreateTraceTopTagConfigConflict {
	return &CreateTraceTopTagConfigConflict{}
}

/*
CreateTraceTopTagConfigConflict describes a response with status code 409, with default header values.

Cannot create the TraceTopTagConfig because there is a conflict with an existing TraceTopTagConfig.
*/
type CreateTraceTopTagConfigConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create trace top tag config conflict response has a 2xx status code
func (o *CreateTraceTopTagConfigConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create trace top tag config conflict response has a 3xx status code
func (o *CreateTraceTopTagConfigConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create trace top tag config conflict response has a 4xx status code
func (o *CreateTraceTopTagConfigConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create trace top tag config conflict response has a 5xx status code
func (o *CreateTraceTopTagConfigConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create trace top tag config conflict response a status code equal to that given
func (o *CreateTraceTopTagConfigConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create trace top tag config conflict response
func (o *CreateTraceTopTagConfigConflict) Code() int {
	return 409
}

func (o *CreateTraceTopTagConfigConflict) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] createTraceTopTagConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateTraceTopTagConfigConflict) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] createTraceTopTagConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateTraceTopTagConfigConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateTraceTopTagConfigConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTraceTopTagConfigInternalServerError creates a CreateTraceTopTagConfigInternalServerError with default headers values
func NewCreateTraceTopTagConfigInternalServerError() *CreateTraceTopTagConfigInternalServerError {
	return &CreateTraceTopTagConfigInternalServerError{}
}

/*
CreateTraceTopTagConfigInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateTraceTopTagConfigInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create trace top tag config internal server error response has a 2xx status code
func (o *CreateTraceTopTagConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create trace top tag config internal server error response has a 3xx status code
func (o *CreateTraceTopTagConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create trace top tag config internal server error response has a 4xx status code
func (o *CreateTraceTopTagConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create trace top tag config internal server error response has a 5xx status code
func (o *CreateTraceTopTagConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create trace top tag config internal server error response a status code equal to that given
func (o *CreateTraceTopTagConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create trace top tag config internal server error response
func (o *CreateTraceTopTagConfigInternalServerError) Code() int {
	return 500
}

func (o *CreateTraceTopTagConfigInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] createTraceTopTagConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateTraceTopTagConfigInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] createTraceTopTagConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateTraceTopTagConfigInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateTraceTopTagConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTraceTopTagConfigDefault creates a CreateTraceTopTagConfigDefault with default headers values
func NewCreateTraceTopTagConfigDefault(code int) *CreateTraceTopTagConfigDefault {
	return &CreateTraceTopTagConfigDefault{
		_statusCode: code,
	}
}

/*
CreateTraceTopTagConfigDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateTraceTopTagConfigDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create trace top tag config default response has a 2xx status code
func (o *CreateTraceTopTagConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create trace top tag config default response has a 3xx status code
func (o *CreateTraceTopTagConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create trace top tag config default response has a 4xx status code
func (o *CreateTraceTopTagConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create trace top tag config default response has a 5xx status code
func (o *CreateTraceTopTagConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create trace top tag config default response a status code equal to that given
func (o *CreateTraceTopTagConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create trace top tag config default response
func (o *CreateTraceTopTagConfigDefault) Code() int {
	return o._statusCode
}

func (o *CreateTraceTopTagConfigDefault) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] CreateTraceTopTagConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateTraceTopTagConfigDefault) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/trace-top-tag-config][%d] CreateTraceTopTagConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateTraceTopTagConfigDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateTraceTopTagConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
