// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// ReadBudgetControlReader is a Reader for the ReadBudgetControl structure.
type ReadBudgetControlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadBudgetControlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadBudgetControlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadBudgetControlNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadBudgetControlInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReadBudgetControlDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReadBudgetControlOK creates a ReadBudgetControlOK with default headers values
func NewReadBudgetControlOK() *ReadBudgetControlOK {
	return &ReadBudgetControlOK{}
}

/*
ReadBudgetControlOK describes a response with status code 200, with default header values.

A successful response.
*/
type ReadBudgetControlOK struct {
	Payload *models.ConfigunstableReadBudgetControlResponse
}

// IsSuccess returns true when this read budget control o k response has a 2xx status code
func (o *ReadBudgetControlOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this read budget control o k response has a 3xx status code
func (o *ReadBudgetControlOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read budget control o k response has a 4xx status code
func (o *ReadBudgetControlOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this read budget control o k response has a 5xx status code
func (o *ReadBudgetControlOK) IsServerError() bool {
	return false
}

// IsCode returns true when this read budget control o k response a status code equal to that given
func (o *ReadBudgetControlOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the read budget control o k response
func (o *ReadBudgetControlOK) Code() int {
	return 200
}

func (o *ReadBudgetControlOK) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/budget-controls/{slug}][%d] readBudgetControlOK  %+v", 200, o.Payload)
}

func (o *ReadBudgetControlOK) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/budget-controls/{slug}][%d] readBudgetControlOK  %+v", 200, o.Payload)
}

func (o *ReadBudgetControlOK) GetPayload() *models.ConfigunstableReadBudgetControlResponse {
	return o.Payload
}

func (o *ReadBudgetControlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableReadBudgetControlResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadBudgetControlNotFound creates a ReadBudgetControlNotFound with default headers values
func NewReadBudgetControlNotFound() *ReadBudgetControlNotFound {
	return &ReadBudgetControlNotFound{}
}

/*
ReadBudgetControlNotFound describes a response with status code 404, with default header values.

Cannot read the BudgetControl because the slug does not exist.
*/
type ReadBudgetControlNotFound struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read budget control not found response has a 2xx status code
func (o *ReadBudgetControlNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read budget control not found response has a 3xx status code
func (o *ReadBudgetControlNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read budget control not found response has a 4xx status code
func (o *ReadBudgetControlNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this read budget control not found response has a 5xx status code
func (o *ReadBudgetControlNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this read budget control not found response a status code equal to that given
func (o *ReadBudgetControlNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the read budget control not found response
func (o *ReadBudgetControlNotFound) Code() int {
	return 404
}

func (o *ReadBudgetControlNotFound) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/budget-controls/{slug}][%d] readBudgetControlNotFound  %+v", 404, o.Payload)
}

func (o *ReadBudgetControlNotFound) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/budget-controls/{slug}][%d] readBudgetControlNotFound  %+v", 404, o.Payload)
}

func (o *ReadBudgetControlNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadBudgetControlNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadBudgetControlInternalServerError creates a ReadBudgetControlInternalServerError with default headers values
func NewReadBudgetControlInternalServerError() *ReadBudgetControlInternalServerError {
	return &ReadBudgetControlInternalServerError{}
}

/*
ReadBudgetControlInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type ReadBudgetControlInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this read budget control internal server error response has a 2xx status code
func (o *ReadBudgetControlInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this read budget control internal server error response has a 3xx status code
func (o *ReadBudgetControlInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this read budget control internal server error response has a 4xx status code
func (o *ReadBudgetControlInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this read budget control internal server error response has a 5xx status code
func (o *ReadBudgetControlInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this read budget control internal server error response a status code equal to that given
func (o *ReadBudgetControlInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the read budget control internal server error response
func (o *ReadBudgetControlInternalServerError) Code() int {
	return 500
}

func (o *ReadBudgetControlInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/budget-controls/{slug}][%d] readBudgetControlInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadBudgetControlInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/budget-controls/{slug}][%d] readBudgetControlInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadBudgetControlInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ReadBudgetControlInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadBudgetControlDefault creates a ReadBudgetControlDefault with default headers values
func NewReadBudgetControlDefault(code int) *ReadBudgetControlDefault {
	return &ReadBudgetControlDefault{
		_statusCode: code,
	}
}

/*
ReadBudgetControlDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type ReadBudgetControlDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this read budget control default response has a 2xx status code
func (o *ReadBudgetControlDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this read budget control default response has a 3xx status code
func (o *ReadBudgetControlDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this read budget control default response has a 4xx status code
func (o *ReadBudgetControlDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this read budget control default response has a 5xx status code
func (o *ReadBudgetControlDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this read budget control default response a status code equal to that given
func (o *ReadBudgetControlDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the read budget control default response
func (o *ReadBudgetControlDefault) Code() int {
	return o._statusCode
}

func (o *ReadBudgetControlDefault) Error() string {
	return fmt.Sprintf("[GET /api/unstable/config/budget-controls/{slug}][%d] ReadBudgetControl default  %+v", o._statusCode, o.Payload)
}

func (o *ReadBudgetControlDefault) String() string {
	return fmt.Sprintf("[GET /api/unstable/config/budget-controls/{slug}][%d] ReadBudgetControl default  %+v", o._statusCode, o.Payload)
}

func (o *ReadBudgetControlDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *ReadBudgetControlDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
