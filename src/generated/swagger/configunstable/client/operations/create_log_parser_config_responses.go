// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/chronoctl-core/src/generated/swagger/configunstable/models"
)

// CreateLogParserConfigReader is a Reader for the CreateLogParserConfig structure.
type CreateLogParserConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLogParserConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateLogParserConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateLogParserConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateLogParserConfigConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateLogParserConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateLogParserConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateLogParserConfigOK creates a CreateLogParserConfigOK with default headers values
func NewCreateLogParserConfigOK() *CreateLogParserConfigOK {
	return &CreateLogParserConfigOK{}
}

/*
CreateLogParserConfigOK describes a response with status code 200, with default header values.

A successful response containing the created LogParserConfig.
*/
type CreateLogParserConfigOK struct {
	Payload *models.ConfigunstableCreateLogParserConfigResponse
}

// IsSuccess returns true when this create log parser config o k response has a 2xx status code
func (o *CreateLogParserConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create log parser config o k response has a 3xx status code
func (o *CreateLogParserConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log parser config o k response has a 4xx status code
func (o *CreateLogParserConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create log parser config o k response has a 5xx status code
func (o *CreateLogParserConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create log parser config o k response a status code equal to that given
func (o *CreateLogParserConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create log parser config o k response
func (o *CreateLogParserConfigOK) Code() int {
	return 200
}

func (o *CreateLogParserConfigOK) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] createLogParserConfigOK  %+v", 200, o.Payload)
}

func (o *CreateLogParserConfigOK) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] createLogParserConfigOK  %+v", 200, o.Payload)
}

func (o *CreateLogParserConfigOK) GetPayload() *models.ConfigunstableCreateLogParserConfigResponse {
	return o.Payload
}

func (o *CreateLogParserConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigunstableCreateLogParserConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogParserConfigBadRequest creates a CreateLogParserConfigBadRequest with default headers values
func NewCreateLogParserConfigBadRequest() *CreateLogParserConfigBadRequest {
	return &CreateLogParserConfigBadRequest{}
}

/*
CreateLogParserConfigBadRequest describes a response with status code 400, with default header values.

Cannot create the LogParserConfig because the request is invalid.
*/
type CreateLogParserConfigBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log parser config bad request response has a 2xx status code
func (o *CreateLogParserConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log parser config bad request response has a 3xx status code
func (o *CreateLogParserConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log parser config bad request response has a 4xx status code
func (o *CreateLogParserConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create log parser config bad request response has a 5xx status code
func (o *CreateLogParserConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create log parser config bad request response a status code equal to that given
func (o *CreateLogParserConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create log parser config bad request response
func (o *CreateLogParserConfigBadRequest) Code() int {
	return 400
}

func (o *CreateLogParserConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] createLogParserConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogParserConfigBadRequest) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] createLogParserConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogParserConfigBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogParserConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogParserConfigConflict creates a CreateLogParserConfigConflict with default headers values
func NewCreateLogParserConfigConflict() *CreateLogParserConfigConflict {
	return &CreateLogParserConfigConflict{}
}

/*
CreateLogParserConfigConflict describes a response with status code 409, with default header values.

Cannot create the LogParserConfig because there is a conflict with an existing LogParserConfig.
*/
type CreateLogParserConfigConflict struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log parser config conflict response has a 2xx status code
func (o *CreateLogParserConfigConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log parser config conflict response has a 3xx status code
func (o *CreateLogParserConfigConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log parser config conflict response has a 4xx status code
func (o *CreateLogParserConfigConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create log parser config conflict response has a 5xx status code
func (o *CreateLogParserConfigConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create log parser config conflict response a status code equal to that given
func (o *CreateLogParserConfigConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create log parser config conflict response
func (o *CreateLogParserConfigConflict) Code() int {
	return 409
}

func (o *CreateLogParserConfigConflict) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] createLogParserConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateLogParserConfigConflict) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] createLogParserConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateLogParserConfigConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogParserConfigConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogParserConfigInternalServerError creates a CreateLogParserConfigInternalServerError with default headers values
func NewCreateLogParserConfigInternalServerError() *CreateLogParserConfigInternalServerError {
	return &CreateLogParserConfigInternalServerError{}
}

/*
CreateLogParserConfigInternalServerError describes a response with status code 500, with default header values.

An unexpected error response.
*/
type CreateLogParserConfigInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this create log parser config internal server error response has a 2xx status code
func (o *CreateLogParserConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create log parser config internal server error response has a 3xx status code
func (o *CreateLogParserConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create log parser config internal server error response has a 4xx status code
func (o *CreateLogParserConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create log parser config internal server error response has a 5xx status code
func (o *CreateLogParserConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create log parser config internal server error response a status code equal to that given
func (o *CreateLogParserConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create log parser config internal server error response
func (o *CreateLogParserConfigInternalServerError) Code() int {
	return 500
}

func (o *CreateLogParserConfigInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] createLogParserConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogParserConfigInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] createLogParserConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogParserConfigInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CreateLogParserConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogParserConfigDefault creates a CreateLogParserConfigDefault with default headers values
func NewCreateLogParserConfigDefault(code int) *CreateLogParserConfigDefault {
	return &CreateLogParserConfigDefault{
		_statusCode: code,
	}
}

/*
CreateLogParserConfigDefault describes a response with status code -1, with default header values.

An undefined error response.
*/
type CreateLogParserConfigDefault struct {
	_statusCode int

	Payload models.GenericError
}

// IsSuccess returns true when this create log parser config default response has a 2xx status code
func (o *CreateLogParserConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create log parser config default response has a 3xx status code
func (o *CreateLogParserConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create log parser config default response has a 4xx status code
func (o *CreateLogParserConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create log parser config default response has a 5xx status code
func (o *CreateLogParserConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create log parser config default response a status code equal to that given
func (o *CreateLogParserConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create log parser config default response
func (o *CreateLogParserConfigDefault) Code() int {
	return o._statusCode
}

func (o *CreateLogParserConfigDefault) Error() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] CreateLogParserConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLogParserConfigDefault) String() string {
	return fmt.Sprintf("[POST /api/unstable/config/log-parser-config][%d] CreateLogParserConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLogParserConfigDefault) GetPayload() models.GenericError {
	return o.Payload
}

func (o *CreateLogParserConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
